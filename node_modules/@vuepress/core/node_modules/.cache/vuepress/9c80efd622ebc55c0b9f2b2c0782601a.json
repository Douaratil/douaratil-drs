{"remainingRequest":"/home/olivier/Documents/douaratil-drs/node_modules/babel-loader/lib/index.js??ref--3-1!/home/olivier/Documents/douaratil-drs/docs/.vuepress/theme/components/search/match-query.js","dependencies":[{"path":"/home/olivier/Documents/douaratil-drs/docs/.vuepress/theme/components/search/match-query.js","mtime":1634294763185},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5lbmRzLXdpdGguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0IGdldCBmcm9tICdsb2Rhc2gvZ2V0JzsKaW1wb3J0IHNsdWdpZnkgZnJvbSAnc2x1Z2lmeSc7CmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAocXVlcnksIHBhZ2UpIHsKICB2YXIgYWRkaXRpb25hbFN0ciA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogbnVsbDsKICB2YXIgZG9tYWluID0gZ2V0KHBhZ2UsICd0aXRsZScsICcnKTsKCiAgaWYgKGdldChwYWdlLCAnZnJvbnRtYXR0ZXIudGFncycpKSB7CiAgICBkb21haW4gKz0gIiAiLmNvbmNhdChwYWdlLmZyb250bWF0dGVyLnRhZ3Muam9pbignICcpKTsKICB9CgogIGlmIChhZGRpdGlvbmFsU3RyKSB7CiAgICBkb21haW4gKz0gIiAiLmNvbmNhdChhZGRpdGlvbmFsU3RyKTsKICB9CgogIHF1ZXJ5ID0gc2x1Z2lmeShxdWVyeSwgewogICAgbG93ZXI6IHRydWUsCiAgICBzdHJpY3Q6IHRydWUKICB9KTsKICBkb21haW4gPSBzbHVnaWZ5KGRvbWFpbiwgewogICAgbG93ZXI6IHRydWUsCiAgICBzdHJpY3Q6IHRydWUKICB9KTsKICByZXR1cm4gbWF0Y2hUZXN0KHF1ZXJ5LCBkb21haW4pOwp9KTsKCnZhciBtYXRjaFRlc3QgPSBmdW5jdGlvbiBtYXRjaFRlc3QocXVlcnksIGRvbWFpbikgewogIHZhciBlc2NhcGVSZWdFeHAgPSBmdW5jdGlvbiBlc2NhcGVSZWdFeHAoc3RyKSB7CiAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1stL1xcXiQqKz8uKCl8W1xde31dL2csICdcXCQmJyk7CiAgfTsKCiAgdmFyIHdvcmRzID0gcXVlcnkuc3BsaXQoL1xzKy9nKS5tYXAoZnVuY3Rpb24gKHN0cikgewogICAgcmV0dXJuIHN0ci50cmltKCk7CiAgfSkuZmlsdGVyKGZ1bmN0aW9uIChzdHIpIHsKICAgIHJldHVybiAhIXN0cjsKICB9KTsKICB2YXIgaGFzVHJhaWxpbmdTcGFjZSA9IHF1ZXJ5LmVuZHNXaXRoKCcgJyk7CiAgdmFyIHNlYXJjaFJlZ2V4ID0gbmV3IFJlZ0V4cCh3b3Jkcy5tYXAoZnVuY3Rpb24gKHdvcmQsIGluZGV4KSB7CiAgICBpZiAod29yZHMubGVuZ3RoID09PSBpbmRleCArIDEgJiYgIWhhc1RyYWlsaW5nU3BhY2UpIHsKICAgICAgLy8gVGhlIGxhc3Qgd29yZCAtIG9rIHdpdGggdGhlIHdvcmQgYmVpbmcgInN0YXJ0c3dpdGgiLWxpa2UKICAgICAgcmV0dXJuICIoPz0uKlxcYiIuY29uY2F0KGVzY2FwZVJlZ0V4cCh3b3JkKSwgIikiKTsKICAgIH0gZWxzZSB7CiAgICAgIC8vIE5vdCB0aGUgbGFzdCB3b3JkIC0gZXhwZWN0IHRoZSB3aG9sZSB3b3JkIGV4YWN0bHkKICAgICAgcmV0dXJuICIoPz0uKlxcYiIuY29uY2F0KGVzY2FwZVJlZ0V4cCh3b3JkKSwgIlxcYikiKTsKICAgIH0KICB9KS5qb2luKCcnKSArICcuKycsICdnaScpOwogIHJldHVybiBzZWFyY2hSZWdleC50ZXN0KGRvbWFpbik7Cn07"},{"version":3,"sources":["/home/olivier/Documents/douaratil-drs/docs/.vuepress/theme/components/search/match-query.js"],"names":["get","slugify","query","page","additionalStr","domain","frontmatter","tags","join","lower","strict","matchTest","escapeRegExp","str","replace","words","split","map","trim","filter","hasTrailingSpace","endsWith","searchRegex","RegExp","word","index","length","test"],"mappings":";;;;;;;;;;AACA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,gBAAe,UAACC,KAAD,EAAQC,IAAR,EAAuC;AAAA,MAAzBC,aAAyB,uEAAT,IAAS;AACpD,MAAIC,MAAM,GAAGL,GAAG,CAACG,IAAD,EAAO,OAAP,EAAgB,EAAhB,CAAhB;;AAEA,MAAIH,GAAG,CAACG,IAAD,EAAO,kBAAP,CAAP,EAAmC;AACjCE,IAAAA,MAAM,eAAQF,IAAI,CAACG,WAAL,CAAiBC,IAAjB,CAAsBC,IAAtB,CAA2B,GAA3B,CAAR,CAAN;AACD;;AAED,MAAIJ,aAAJ,EAAmB;AACjBC,IAAAA,MAAM,eAAQD,aAAR,CAAN;AACD;;AAEDF,EAAAA,KAAK,GAAGD,OAAO,CAACC,KAAD,EAAQ;AAACO,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAAR,CAAf;AACAL,EAAAA,MAAM,GAAGJ,OAAO,CAACI,MAAD,EAAS;AAACI,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAAT,CAAhB;AAEA,SAAOC,SAAS,CAACT,KAAD,EAAQG,MAAR,CAAhB;AACD,CAfD;;AAiBA,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACT,KAAD,EAAQG,MAAR,EAAmB;AAEnC,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,OAAJ,CAAY,uBAAZ,EAAqC,MAArC,CAAJ;AAAA,GAAxB;;AAEA,MAAMC,KAAK,GAAGb,KAAK,CAChBc,KADW,CACL,MADK,EAEXC,GAFW,CAEP,UAAAJ,GAAG;AAAA,WAAIA,GAAG,CAACK,IAAJ,EAAJ;AAAA,GAFI,EAGXC,MAHW,CAGJ,UAAAN,GAAG;AAAA,WAAI,CAAC,CAACA,GAAN;AAAA,GAHC,CAAd;AAIA,MAAMO,gBAAgB,GAAGlB,KAAK,CAACmB,QAAN,CAAe,GAAf,CAAzB;AACA,MAAMC,WAAW,GAAG,IAAIC,MAAJ,CAClBR,KAAK,CACFE,GADH,CACO,UAACO,IAAD,EAAOC,KAAP,EAAiB;AACpB,QAAIV,KAAK,CAACW,MAAN,KAAiBD,KAAK,GAAG,CAAzB,IAA8B,CAACL,gBAAnC,EAAqD;AACnD;AACA,+BAAkBR,YAAY,CAACY,IAAD,CAA9B;AACD,KAHD,MAGO;AACL;AACA,+BAAkBZ,YAAY,CAACY,IAAD,CAA9B;AACD;AACF,GATH,EAUGhB,IAVH,CAUQ,EAVR,IAUc,IAXI,EAYlB,IAZkB,CAApB;AAcA,SAAOc,WAAW,CAACK,IAAZ,CAAiBtB,MAAjB,CAAP;AACD,CAxBD","sourcesContent":["\nimport get from 'lodash/get'\nimport slugify from 'slugify'\n\nexport default (query, page, additionalStr = null) => {\n  let domain = get(page, 'title', '')\n\n  if (get(page, 'frontmatter.tags')) {\n    domain += ` ${page.frontmatter.tags.join(' ')}`\n  }\n\n  if (additionalStr) {\n    domain += ` ${additionalStr}`\n  }\n\n  query = slugify(query, {lower: true, strict: true})\n  domain = slugify(domain, {lower: true, strict: true})\n\n  return matchTest(query, domain)\n}\n\nconst matchTest = (query, domain) => {\n\n  const escapeRegExp = str => str.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n\n  const words = query\n    .split(/\\s+/g)\n    .map(str => str.trim())\n    .filter(str => !!str)\n  const hasTrailingSpace = query.endsWith(' ')\n  const searchRegex = new RegExp(\n    words\n      .map((word, index) => {\n        if (words.length === index + 1 && !hasTrailingSpace) {\n          // The last word - ok with the word being \"startswith\"-like\n          return `(?=.*\\\\b${escapeRegExp(word)})`\n        } else {\n          // Not the last word - expect the whole word exactly\n          return `(?=.*\\\\b${escapeRegExp(word)}\\\\b)`\n        }\n      })\n      .join('') + '.+',\n    'gi'\n  )\n  return searchRegex.test(domain)\n}\n"]}]}