{"remainingRequest":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js??ref--1-1!/home/olivier/Documents/douaratil-drs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/olivier/Documents/douaratil-drs/docs/bestiaire/vampire-sorcier/README.md?vue&type=template&id=15b13525&","dependencies":[{"path":"/home/olivier/Documents/douaratil-drs/docs/bestiaire/vampire-sorcier/README.md","mtime":1634294763241},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PHA+PHN0cm9uZz5TZXVpbCBkZSBjcml0aXF1ZTwvc3Ryb25nPjogMTg8YnI+CjxzdHJvbmc+VmFsZXVyIG9mZmVuc2l2ZSBnbG9iYWxlPC9zdHJvbmc+OiAxOTwvcD4KPGgyIGlkPSJjYXBhY2l0ZXMiPkNhcGFjaXTDqXMgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjYXBhY2l0ZXMiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+PGVtPjxzdHJvbmc+RmFpYmxlc3NlcyBkZXMgdmFtcGlyZXM8L3N0cm9uZz48L2VtPi4gVm9pY2kgbGVzIGZhaWJsZXNzZXMgZHUgdmFtcGlyZSA6PC9wPgo8dWw+CjxsaT48ZW0+UGlldSBkYW5zIGxlIGPFk3VyPC9lbT4uIFNpIHVuZSBhcm1lIHBlcmZvcmFudGUgZW4gYm9pcyBlc3QgcGxhbnTDqWUgZGFucyBzb24gY8WTdXIgcGVuZGFudCBxdSdpbCBlc3QgPGEgaHJlZj0iL2dlcmVyLWxhLXNhbnRlLWR1LXBlcnNvbm5hZ2UjbmV1dHJhbGlzZSI+PGVtPm5ldXRyYWxpc8OpPC9lbT48L2E+IGRhbnMgc29uIHJlZnVnZSwgaWwgZXN0IDxhIGhyZWY9Ii9nZXJlci1sYS1zYW50ZS1kdS1wZXJzb25uYWdlI3BhcmFseXNlIj48ZW0+cGFyYWx5c8OpPC9lbT48L2E+IHRhbnQgcXVlIGxlIHBpZXUgbidlc3QgcGFzIHJldGlyw6kuPC9saT4KPGxpPjxlbT5IeXBlcnNlbnNpYmlsaXTDqSDDoCBsYSBsdW1pw6hyZSBkdSBzb2xlaWw8L2VtPi4gSWwgc3ViaXQgMTAgZMOpZ8OidHMgcmFkaWFudHMgcXVhbmQgaWwgY29tbWVuY2Ugc29uIHRvdXIgZXhwb3PDqSDDoCBsYSBsdW1pw6hyZSBkdSBzb2xlaWwuIExlIGNhcyDDqWNow6lhbnQsIGlsIHN1Yml0IHVuIDxhIGhyZWY9Ii91dGlsaXNlci1sZXMtY2FyYWN0ZXJpc3RpcXVlcyNhdmFudGFnZS1ldC1kZXNhdmFudGFnZSI+PGVtPmTDqXNhdmFudGFnZTwvZW0+PC9hPiBsb3JzIGRlcyBqZXRzIGQnYXR0YXF1ZSBldCBkZXMgdGVzdHMgZGUgY2FyYWN0w6lyaXN0aXF1ZS48L2xpPgo8L3VsPgo8cD48ZW0+PHN0cm9uZz5GdWl0ZSBicnVtZXVzZTwvc3Ryb25nPjwvZW0+LiBRdWFuZCBpbCB0b21iZSDDoCAwIHBvaW50IGQnYWN0aW9uIMOgIGwnZXh0w6lyaWV1ciBkZSBzb24gcmVmdWdlLCDDoCBjb25kaXRpb24gcXUnaWwgbmUgc29pdCBuaSBleHBvc8OpIMOgIGxhIGx1bWnDqHJlIGR1IHNvbGVpbCBuaSBpbW1lcmfDqSBkYW5zIGRlIGwnZWF1IGNvdXJhbnRlLCBsZSB2YW1waXJlIHNlIHRyYW5zZm9ybWUgZW4gbnVhZ2Ugb3UgZW4gYnJ1bWUgKGNvbW1lIGTDqWNyaXQgZGFucyBsZSB0cmFpdCA8ZW0+TcOpdGFtb3JwaGU8L2VtPikgYXUgbGlldSBkZSB0b21iZXIgaW5jb25zY2llbnQuIElsIGVzdCBkw6l0cnVpdCBzJ2lsIG5lIHBldXQgcGFzIHNlIHRyYW5zZm9ybWVyLjxicj4KTG9yc3F1J2lsIGEgMCBwb2ludCBkJ2FjdGlvbiBzb3VzIGZvcm1lIGRlIGJydW1lLCBsZSB2YW1waXJlIG5lIHBldXQgcGFzIHJlcHJlbmRyZSBzYSBmb3JtZSBkZSB2YW1waXJlIGV0IGRvaXQgYXR0ZWluZHJlIHNvbiByZWZ1Z2UgZW4gMiBoZXVyZXMgb3UgbW9pbnMgc291cyBwZWluZSBkJ8OqdHJlIGTDqXRydWl0LiBVbmUgZm9pcyBkYW5zIHNvbiByZWZ1Z2UsIGlsIHBldXQgcHJlbmRyZSBzYSBmb3JtZSBkZSB2YW1waXJlLiBJbCBlc3QgZW5zdWl0ZSA8Um91dGVyTGluayB0bz0iL2dlcmVyLWxhLXNhbnRlLWR1LXBlcnNvbm5hZ2UvI3BhcmFseXNlIj48ZW0+cGFyYWx5c8OpPC9lbT48L1JvdXRlckxpbms+IHRhbnQgcXUnaWwgbidhIHBhcyByw6ljdXDDqXLDqSBhdSBtb2lucyAxIHBvaW50IGQnYWN0aW9uLiBBcHLDqHMgYXZvaXIgcGFzc8OpIDEgaGV1cmUgZGFucyBzb24gcmVmdWdlIGF2ZWMgMCBwb2ludCBkJ2FjdGlvbiwgaWwgcsOpY3Vww6hyZSAxIHBvaW50IGQnYWN0aW9uLjwvcD4KPHA+PGVtPjxzdHJvbmc+SW5jYW50YXRpb24gaW5uw6llPC9zdHJvbmc+PC9lbT4uIExlIHZhbXBpcmUgdXRpbGlzZSBsZSBDaGFyaXNtZSBjb21tZSBjYXJhY3TDqXJpc3RpcXVlIGQnaW5jYW50YXRpb24gaW5uw6llIChERCBkdSBqZXQgZGUgc2F1dmVnYXJkZSBjb250cmUgbGVzIHNvcnRzIDE3KS4gSWwgcGV1dCBsYW5jZXIgbGVzIHNvcnRzIHN1aXZhbnRzIGRlIG1hbmnDqHJlIGlubsOpZSwgc2FucyBjb21wb3NhbnRlcyBtYXTDqXJpZWxsZXMgOjwvcD4KPHVsPgo8bGk+PHN0cm9uZz7DgCB2b2xvbnTDqTwvc3Ryb25nPiA6IDxSb3V0ZXJMaW5rIHRvPSIvZ3JpbW9pcmUvZG9taW5lci11bi1odW1hbm9pZGUvIj48ZW0+ZG9taW5lciB1biBodW1hbm/Dr2RlPC9lbT48L1JvdXRlckxpbms+LCA8Um91dGVyTGluayB0bz0iL2dyaW1vaXJlL2ludmlzaWJpbGl0ZS8iPjxlbT5pbnZpc2liaWxpdMOpPC9lbT48L1JvdXRlckxpbms+LCA8Um91dGVyTGluayB0bz0iL2dyaW1vaXJlL3Bhcy1icnVtZXV4LyI+PGVtPnBhcyBicnVtZXV4PC9lbT48L1JvdXRlckxpbms+LCA8Um91dGVyTGluayB0bz0iL2dyaW1vaXJlL3RlbmVicmVzLyI+PGVtPnTDqW7DqGJyZXM8L2VtPjwvUm91dGVyTGluaz48L2xpPgo8bGk+PHN0cm9uZz4xL2pvdXIgY2hhY3VuPC9zdHJvbmc+IDogPFJvdXRlckxpbmsgdG89Ii9ncmltb2lyZS9kZWd1aXNlbWVudC8iPjxlbT5kw6lndWlzZW1lbnQ8L2VtPjwvUm91dGVyTGluaz4sIDxSb3V0ZXJMaW5rIHRvPSIvZ3JpbW9pcmUvZGV0ZWN0aW9uLWRlcy1wZW5zZWVzLyI+PGVtPmTDqXRlY3Rpb24gZGVzIHBlbnPDqWVzPC9lbT48L1JvdXRlckxpbms+LCA8Um91dGVyTGluayB0bz0iL2dyaW1vaXJlL2ltbW9iaWxpc2VyLXVuLW1vbnN0cmUvIj48ZW0+aW1tb2JpbGlzZXIgdW4gbW9uc3RyZTwvZW0+PC9Sb3V0ZXJMaW5rPiw8L2xpPgo8L3VsPgo8cD48ZW0+PHN0cm9uZz5Nw6l0YW1vcnBoZTwvc3Ryb25nPjwvZW0+LiBTJ2lsIG4nZXN0IHBhcyBleHBvc8OpIMOgIGxhIGx1bWnDqHJlIGR1IHNvbGVpbCBvdSBpbW1lcmfDqSBkYW5zIGwnZWF1IGNvdXJhbnRlLCBsZSB2YW1waXJlIHBldXQgdXRpbGlzZXIgc29uIGFjdGlvbiBwb3VyIHNlIG3DqXRhbW9ycGhvc2VyIGVuIGNoYXV2ZS1zb3VyaXMgZGUgdGFpbGxlIFRQLCBlbiBicnVtZSBvdSBlbiBudWFnZSBkZSB0YWlsbGUgTSBvdSBwb3VyIHJlcHJlbmRyZSBzYSB2w6lyaXRhYmxlIGZvcm1lLiBTb3VzIGZvcm1lIGRlIGNoYXV2ZS1zb3VyaXMsIGxlIHZhbXBpcmUgbmUgcGV1dCBwYXMgcGFybGVyLCBzYSB2aXRlc3NlIGF1IHNvbCBlc3QgZGUgMSw1MCBtw6h0cmUgZXQgc2Egdml0ZXNzZSBkZSB2b2wgZGUgOSBtw6h0cmVzLiBTZXMgc3RhdGlzdGlxdWVzLCDDoCBsJ2V4Y2VwdGlvbiBkZSBzYSB0YWlsbGUgZXQgZGUgc2Egdml0ZXNzZSwgcmVzdGVudCBsZXMgbcOqbWVzLiBUb3VzIGxlcyB2w6p0ZW1lbnRzIHF1J2lsIHBvcnRlIHNlIHRyYW5zZm9ybWVudCDDqWdhbGVtZW50LCBjZSBxdWkgbidlc3QgcGFzIGxlIGNhcyBkdSByZXN0ZSBkZSBzb24gw6lxdWlwZW1lbnQuIElsIHJlcHJlbmQgc2EgZm9ybWUgdsOpcml0YWJsZSBxdWFuZCBpbCBtZXVydC48YnI+ClNvdXMgZm9ybWUgZGUgYnJ1bWUsIGxlIHZhbXBpcmUgbmUgcGV1dCBwbHVzIGVudHJlcHJlbmRyZSBhdWN1bmUgYWN0aW9uIGV0IG5lIHBldXQgbmkgcGFybGVyIG5pIG1hbmlwdWxlciBkJ29iamV0LiBJbCBlc3QgZXh0csOqbWVtZW50IGzDqWdlciwgcG9zc8OoZGUgdW5lIHZpdGVzc2UgZW4gdm9sIGRlIDYgbcOodHJlcywgcGV1dCBlZmZlY3R1ZXIgZGVzIHZvbHMgc3RhdGlvbm5haXJlcywgZW50cmVyIGRhbnMgbCdlbXBsYWNlbWVudCBvY2N1cMOpIHBhciB1bmUgY3LDqWF0dXJlIGhvc3RpbGUgZXQgcyd5IGFycsOqdGVyLiBFbiBvdXRyZSwgc2kgZGUgbCdhaXIgcGFzc2UgYXUgdHJhdmVycyBkJ3VuIGludGVyc3RpY2UsIGxhIGJydW1lIHBldXQgZmFpcmUgZGUgbcOqbWUgc2FucyBkZXZvaXIgcyd5IGZhdWZpbGVyLCBtYWlzIGVsbGUgbmUgcGV1dCBwYXMgdHJhdmVyc2VyIGwnZWF1LiBFbGxlIG9idGllbnQgdW4gPFJvdXRlckxpbmsgdG89Ii91dGlsaXNlci1sZXMtY2FyYWN0ZXJpc3RpcXVlcy8jYXZhbnRhZ2UtZXQtZGVzYXZhbnRhZ2UiPjxlbT5hdmFudGFnZTwvZW0+PC9Sb3V0ZXJMaW5rPiBsb3JzIGRlcyB0ZXN0cyBkZSBGb3JjZSwgZGUgRGV4dMOpcml0w6kgZXQgZGUgQ29uc3RpdHV0aW9uLCBldCBlbGxlIGVzdCBpbW11bmlzw6llIGNvbnRyZSB0b3VzIGxlcyBkw6lnw6J0cyBub24tbWFnaXF1ZXMsIMOgIGwnZXhjZXB0aW9uIGRlIGNldXggaW5mbGlnw6lzIHBhciBsYSBsdW1pw6hyZSBkdSBzb2xlaWwuPC9wPgo8cD48ZW0+PHN0cm9uZz5QYXR0ZXMgZCdhcmFpZ27DqWU8L3N0cm9uZz48L2VtPi4gTGUgdmFtcGlyZSBwZXV0IGVzY2FsYWRlciBsZXMgc3VyZmFjZXMgZGlmZmljaWxlcywgeSBjb21wcmlzIGxlcyBwbGFmb25kcyBsYSB0w6p0ZSBlbiBiYXMsIHNhbnMgcXUndW4gdGVzdCBkZSBjYXJhY3TDqXJpc3RpcXVlIG5lIHNvaXQgbsOpY2Vzc2FpcmUuPC9wPgo8cD48ZW0+PHN0cm9uZz5Sw6lnw6luw6lyYXRpb248L3N0cm9uZz48L2VtPi4gTGUgdmFtcGlyZSByw6ljdXDDqHJlIDIwIHBvaW50cyBkJ2FjdGlvbiBhdSBkw6lidXQgZGUgc29uIHRvdXIgcydpbCBsdWkgcmVzdGUgYXUgbW9pbnMgMSBwb2ludCBkJ2FjdGlvbiBldCBzJ2lsIG4nZXN0IG5pIGV4cG9zw6kgw6AgbGEgbHVtacOocmUgZHUgc29sZWlsIG5pIGltbWVyZ8OpIGRhbnMgZGUgbCdlYXUgY291cmFudGUuIFMnaWwgc3ViaXQgZGVzIGTDqWfDonRzIHJhZGlhbnRzIG91IGRlcyBkw6lnw6J0cyBpbmZsaWfDqXMgcGFyIGRlIGwnZWF1IGLDqW5pdGUsIGNlIHRyYWl0IG5lIGZvbmN0aW9ubmUgcGFzIGF1IGTDqWJ1dCBkdSBwcm9jaGFpbiB0b3VyIGR1IHZhbXBpcmUuPC9wPgo8cD48ZW0+PHN0cm9uZz5Sw6lzaXN0YW5jZSBsw6lnZW5kYWlyZSAoMy9qb3VyKTwvc3Ryb25nPjwvZW0+LiBMZSB2YW1waXJlIHBldXQgcmVtcGxhY2VyIGwnw6ljaGVjIGQndW4gZGUgc2VzIGpldHMgZGUgc2F1dmVnYXJkZSBwYXIgdW5lIHLDqXVzc2l0ZS48L3A+CjxoMiBpZD0iYWN0aW9ucyI+QWN0aW9ucyA8YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2FjdGlvbnMiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+PGVtPjxzdHJvbmc+QXR0YXF1ZXMgbXVsdGlwbGVzIChmb3JtZSBkZSB2YW1waXJlIHVuaXF1ZW1lbnQpPC9zdHJvbmc+PC9lbT4uIExlIHZhbXBpcmUgZWZmZWN0dWUgZGV1eCBhdHRhcXVlcywgZG9udCB1bmUgc2V1bGUgcGV1dCDDqnRyZSB1bmUgYXR0YXF1ZSBkZSBtb3JzdXJlLjwvcD4KPHA+PGVtPjxzdHJvbmc+QnJhcyBzYW5nbGFudHM8L3N0cm9uZz48L2VtPi4gTGUgc29yY2llciB2YW1waXJlIHNlIHNhdHVyZSBkZSBzb24gcHJvcHJlIHNhbmcsIHMnaW5mbGlnZWFudCAyMCBkw6lnw6J0cyBkZSBwb2lzb24uIFBlbmRhbnQgdW5lIG1pbnV0ZSwgc2EgVmFsZXVyIGRlIETDqWZlbnNlIHBhc3NlIMOgIDIwIGV0IHNlcyBhdHRhcXVlcyDDoCBtYWlucyBudWVzIGV0IGRlIG1vcnN1cmUgaW5mbGlnZW50IDJkNiBkw6lnw6J0cyBkZSBwb2lzb24gc3VwcGzDqW1lbnRhaXJlcy48L3A+CjxwPjxlbT48c3Ryb25nPkFwcGVsZXIgbGUgc2FuZzwvc3Ryb25nPjwvZW0+LiBMZSBzb3JjaWVyIHZhbXBpcmUgdmlzZSB1bmUgY3LDqWF0dXJlIGh1bWFub8OvZGUgc2l0dcOpZSBkYW5zIHNvbiBjaGFtcCBkZSB2aXNpb24gZGFucyB1biByYXlvbiBkZSAxOCBtw6h0cmVzLiBFbGxlIGRvaXQgw6p0cmUgYmxlc3PDqWUgKG5lIGRvaXQgcGFzIGF2b2lyIGxhIHRvdGFsaXTDqSBkZSBzZXMgcG9pbnRzIGQnYWN0aW9uKS4gU29uIHNhbmcgZXN0IGFzcGlyw6kgaG9ycyBkZSBzb24gY29ycHMgZXQgZmxvdHRlIGRhbnMgbGVzIGFpcnMganVzcXUnYXUgdmFtcGlyZS4gRWxsZSBzdWJpdCA2ZDYgZMOpZ8OidHMgbsOpY3JvdGlxdWVzLiBTb24gbWF4aW11bSBkZSBwb2ludHMgZCdhY3Rpb24gZXN0IHLDqWR1aXQgZHUgbcOqbWUgbW9udGFudCBqdXNxdSfDoCBjZSBxdSdlbGxlIHRlcm1pbmUgdW4gbG9uZyByZXBvcy4gU2kgZWxsZSByw6l1c3NpdCB1biBqZXQgZGUgc2F1dmVnYXJkZSBkZSBDb25zdGl0dXRpb24gREQgMTcsIGVsbGUgw6l2aXRlIGxlcyBkZXV4IGVmZmV0cy4gTGUgc29yY2llciB2YW1waXJlIHLDqWN1cMOocmUgdW4gbm9tYnJlIGRlIHBvaW50cyBkJ2FjdGlvbiDDqWdhbCDDoCBsYSBtb2l0acOpIGRlcyBkw6lnw6J0cyBpbmZsaWfDqXMuIExhIGNpYmxlIG1ldXJ0IHNpIGNldCBlZmZldCByw6lkdWl0IHNvbiBtYXhpbXVtIGRlIHBvaW50cyBkJ2FjdGlvbiDDoCAwLjwvcD4KPHA+PGVtPjxzdHJvbmc+RnJhcHBlIMOgIG1haW5zIG51ZXMgKGZvcm1lIGRlIHZhbXBpcmUgdW5pcXVlbWVudCk8L3N0cm9uZz48L2VtPi4gPGVtPkF0dGFxdWUgZCdhcm1lIGF1IGNvcnBzIMOgIGNvcnBzPC9lbT4gOiArOSBwb3VyIHRvdWNoZXIsIGFsbG9uZ2UgMSw1MCBtLCB1bmUgY3LDqWF0dXJlLjxicj4KPGVtPlRvdWNow6k8L2VtPiA6IDMgZMOpZ8OidHMgY29udG9uZGFudHMuIEF1IGxpZXUgZCdpbmZsaWdlciBkZXMgZMOpZ8OidHMsIGxlIHZhbXBpcmUgcGV1dCBlbXBvaWduZXIgbGEgY2libGUgKMOpdmFzaW9uIEREIDE4KS48L3A+CjxwPjxlbT48c3Ryb25nPk1hcmlvbm5ldHRlIGRlIHNhbmc8L3N0cm9uZz48L2VtPi4gTGUgc29yY2llciB2YW1waXJlIHZpc2UgdW5lIGNyw6lhdHVyZSBodW1hbm/Dr2RlIHNpdHXDqWUgZGFucyBzb24gY2hhbXAgZGUgdmlzaW9uIGRhbnMgdW4gcmF5b24gZGUgOSBtw6h0cmVzLiBFbGxlIGRvaXQgcsOpdXNzaXIgdW4gamV0IGRlIHNhdXZlZ2FyZGUgZGUgU2FnZXNzZSBERCAxNywgc2FucyBxdW9pIGVsbGUgc2UgbGFpc3NlIGRvbWluZXIgcGFyIGxlIHZhbXBpcmUgY29tbWUgc2kgZWxsZSDDqXRhaXQgbGEgY2libGUgZHUgc29ydCA8Um91dGVyTGluayB0bz0iL2dyaW1vaXJlL2RvbWluZXItdW4taHVtYW5vaWRlLyI+PGVtPmRvbWluZXIgdW4gaHVtYW5vw69kZTwvZW0+PC9Sb3V0ZXJMaW5rPi4gTGEgY2libGUgcsOpaXTDqHJlIGxlIGpldCBkZSBzYXV2ZWdhcmRlIMOgIGNoYXF1ZSBmb2lzIHF1ZSBsZSB2YW1waXJlIG91IHNlcyBjb21wYWdub25zIGZvbnQgdW5lIGFjdGlvbiBuw6lmYXN0ZSDDoCBzb24gZW5jb250cmUuIEVsbGUgbWV0IGZpbiDDoCBsJ2VmZmV0IHNpIGVsbGUgcsOpdXNzaXQgdW4gamV0LiBTaW5vbiwgbCdlZmZldCBkdXJlIDI0IGhldXJlcyBvdSBqdXNxdSfDoCBjZSBxdWUgbGUgdmFtcGlyZSBzb2l0IGTDqXRydWl0LCBzZSB0cm91dmUgc3VyIHVuIHBsYW4gZCdleGlzdGVuY2UgZGlmZsOpcmVudCBkZSBjZWx1aSBkZSBsYSBjaWJsZSBvdSB1dGlsaXNlIHVuZSBhY3Rpb24gYm9udXMgcG91ciBtZXR0cmUgdW4gdGVybWUgw6AgbCdlZmZldC4gTGUgc29yY2llciB2YW1waXJlIG4nYSBwYXMgYmVzb2luIGRlIHNlIGNvbmNlbnRyZXIgcG91ciBtYWludGVuaXIgbCdlZmZldC48L3A+CjxwPjxlbT48c3Ryb25nPk1vcnN1cmUgKGZvcm1lIGRlIGNoYXV2ZS1zb3VyaXMgb3UgZGUgdmFtcGlyZSB1bmlxdWVtZW50KTwvc3Ryb25nPjwvZW0+LiA8ZW0+QXR0YXF1ZSBkJ2FybWUgYXUgY29ycHMgw6AgY29ycHM8L2VtPiA6ICs5IHBvdXIgdG91Y2hlciwgYWxsb25nZSAxLDUwIG0sIHVuZSBjcsOpYXR1cmUgY29uc2VudGFudGUgb3UgdW5lIGNyw6lhdHVyZSA8YSBocmVmPSIvZ2VyZXItbGEtc2FudGUtZHUtcGVyc29ubmFnZSNuZXV0cmFsaXNlIj48ZW0+bmV1dHJhbGlzw6llPC9lbT48L2E+LCA8YSBocmVmPSIvZ2VyZXItbGEtc2FudGUtZHUtcGVyc29ubmFnZSNlbnRyYXZlIj48ZW0+ZW50cmF2w6llPC9lbT48L2E+IG91IDxhIGhyZWY9Ii9nZXJlci1sYS1zYW50ZS1kdS1wZXJzb25uYWdlI2VtcG9pZ25lIj48ZW0+ZW1wb2lnbsOpZTwvZW0+PC9hPiBwYXIgbGUgdmFtcGlyZS48YnI+CjxlbT5Ub3VjaMOpPC9lbT4gOiAzIGTDqWfDonRzIHBlcmZvcmFudHMgcGx1cyAzZDYgZMOpZ8OidHMgbsOpY3JvdGlxdWVzLiBMZSB0b3RhbCBtYXhpbXVtIGRlIHBvaW50cyBkJ2FjdGlvbiBkZSBsYSBjaWJsZSBlc3QgcsOpZHVpdCBkJ3VuIG1vbnRhbnQgw6lnYWwgYXV4IGTDqWfDonRzIG7DqWNyb3RpcXVlcyBzdWJpcyBldCBsZSB2YW1waXJlIHLDqWN1cMOocmUgdW4gbm9tYnJlIGRlIHBvaW50cyBkJ2FjdGlvbiDDqWdhbCDDoCBjZSBtb250YW50LiBMYSByw6lkdWN0aW9uIHBlcnNpc3RlIGp1c3F1J2F1IG1vbWVudCBvw7kgbGEgY2libGUgdGVybWluZSB1bmUgcMOpcmlvZGUgZGUgcmVwb3MgbG9uZy4gTGEgY2libGUgbWV1cnQgc2kgbCdlZmZldCByw6lkdWl0IMOgIDAgc29uIHRvdGFsIG1heGltdW0gZGUgcG9pbnRzIGQnYWN0aW9uLiBVbiBodW1hbm/Dr2RlIHR1w6kgZGUgY2V0dGUgZmHDp29uIHB1aXMgZW50ZXJyw6kgc2UgcmVsw6h2ZSBsYSBudWl0IHN1aXZhbnRlIHNvdXMgZm9ybWUgZGUgdmFtcGlyaWVuIGNvbnRyw7Rsw6kgcGFyIGxlIHZhbXBpcmUuPC9wPgo8cD48ZW0+PHN0cm9uZz5SZWpldG9ucyBkZXMgRW5mZXJzICgxL2pvdXIpPC9zdHJvbmc+PC9lbT4uIExlIHNvcmNpZXIgdmFtcGlyZSBhcHBlbGxlIDJkNiA8Um91dGVyTGluayB0bz0iL2Jlc3RpYWlyZS9kaWFib2RpLyI+ZGlhYm9kaTwvUm91dGVyTGluaz4gb3UgMSA8Um91dGVyTGluayB0bz0iL2Jlc3RpYWlyZS9vbWJyZS8iPm9tYnJlPC9Sb3V0ZXJMaW5rPiBwYXIgbWFnaWUuIENlcyBjcsOpYXR1cmVzIGFycml2ZW50IGVuIDFkNiByb3VuZHMsIHNlIGNvbXBvcnRlbnQgZW4gYWxsacOpZXMgZHUgdmFtcGlyZSwgb2LDqWlzc2VudCDDoCBzZXMgb3JkcmVzIHZvY2F1eCBldCByZXN0ZW50IHBlbmRhbnQgMSBoZXVyZSwganVzcXUnw6AgY2UgcXUnaWwgbWV1cnQgb3UganVzcXUnw6AgY2UgcXUnaWwgbGVzIHJlbnZvaWUgcGFyIHVuZSBhY3Rpb24gYm9udXMuPC9wPgo8aDIgaWQ9ImFjdGlvbnMtbGVnZW5kYWlyZXMiPkFjdGlvbnMgbMOpZ2VuZGFpcmVzIDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYWN0aW9ucy1sZWdlbmRhaXJlcyI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5MZSB2YW1waXJlIHBldXQgZWZmZWN0dWVyIDMgYWN0aW9ucyBsw6lnZW5kYWlyZXMgcXUnaWwgY2hvaXNpdCBwYXJtaSBjZWxsZXMgZMOpY3JpdGVzIGljaS4gVW5lIHNldWxlIGFjdGlvbiBsw6lnZW5kYWlyZSBwZXV0IMOqdHJlIGNob2lzaWUgw6AgbGEgZm9pcywgZXQgdW5pcXVlbWVudCDDoCBsYSBmaW4gZHUgdG91ciBkJ3VuZSBhdXRyZSBjcsOpYXR1cmUuIExlIHZhbXBpcmUgcsOpY3Vww6hyZSBhdSBkw6lidXQgZGUgc29uIHRvdXIgbCd1dGlsaXNhdGlvbiBkZXMgYWN0aW9ucyBsw6lnZW5kYWlyZXMgZMOpasOgIGVmZmVjdHXDqWVzLjwvcD4KPHA+PGVtPjxzdHJvbmc+UGFzIGJydW1ldXg8L3N0cm9uZz48L2VtPi4gTGUgc29yY2llciB2YW1waXJlIHV0aWxpc2UgPGVtPnBhcyBicnVtZXV4PC9lbT4uPC9wPgo8cD48ZW0+PHN0cm9uZz5BdHRhcXVlIMOgIG1haW5zIG51ZXM8L3N0cm9uZz48L2VtPi4gTGUgc29yY2llciB2YW1waXJlIGZhaXQgdW5lIGF0dGFxdWUgw6AgbWFpbnMgbnVlcy48L3A+CjxwPjxlbT48c3Ryb25nPkFwcGVsZXIgbGUgc2FuZyAoY2/Du3RlIDIgYWN0aW9ucyk8L3N0cm9uZz48L2VtPi4gTGUgc29yY2llciB2YW1waXJlIHV0aWxpc2UgPGVtPmFwcGVsZXIgbGUgc2FuZzwvZW0+LjwvcD4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}