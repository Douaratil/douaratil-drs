{"remainingRequest":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js??ref--1-1!/home/olivier/Documents/douaratil-drs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/olivier/Documents/douaratil-drs/docs/archives/README.md?vue&type=template&id=6bc540d7&","dependencies":[{"path":"/home/olivier/Documents/douaratil-drs/docs/archives/README.md","mtime":1635446418549},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGRpdiBjbGFzcz0idGV4dC1jZW50ZXIiPgo8aDEgaWQ9ImFyY2hpdmVzIj5BcmNoaXZlcyA8YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2FyY2hpdmVzIj48aSBjbGFzcz0idi1pY29uIG5vdHJhbnNsYXRlIG1kaSBtZGktbGluay12YXJpYW50Ij48L2k+PC9hPjwvaDE+Cjx2LXJvdz4KPHYtY29sIGNvbHM9IjEyIiBtZD0iNiI+CjxoMiBpZD0ibWlzZS1hLWpvdXItMzciPk1pc2Ugw6Agam91ciAzNyA8YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI21pc2UtYS1qb3VyLTM3Ij48aSBjbGFzcz0idi1pY29uIG5vdHJhbnNsYXRlIG1kaSBtZGktbGluay12YXJpYW50Ij48L2k+PC9hPjwvaDI+CjxwPkFqb3V0IGRlcyBzb3J0cyA8YSBocmVmPSIvZ3JpbW9pcmUvYnJ1bWUtZC1hbnRyZSI+QnJ1bWUgZCdhbnRyZTwvYT4sIDxhIGhyZWY9Ii9ncmltb2lyZS9jaGFuY2V1eCI+Q2hhbmNldXg8L2E+LCA8YSBocmVmPSIvZ3JpbW9pcmUvZXRvdWZmZW1lbnQiPkV0b3VmZmVtZW50PC9hPiBldCA8YSBocmVmPSIvZ3JpbW9pcmUvZm9yY2UtZGVzLW5veWVzIj5Gb3JjZSBkZXMgbm95w6lzPC9hPiBkJ2FwcsOocyBsZXMgaWTDqWVzIGQnRWxyaWMuPGJyPgpCb24gamV1LjwvcD4KPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CjxwPjxlbT48c3Ryb25nPk9saXZpZXI8L3N0cm9uZz48L2VtPiw8YnI+CjxlbT5sZSAyIHNlcHRlbWJyZSAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTM2Ij5NaXNlIMOgIGpvdXIgMzYgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0zNiI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5Bam91dCBkZSBsJzxhIGhyZWY9Ii9iZXN0aWFpcmUvYXplciI+QXplcjwvYT4gZXQgZGUgbCc8YSBocmVmPSIvYmVzdGlhaXJlL2VzcHJpdC1kdS1mZXUiPkVzcHJpdCBkdSBmZXU8L2E+IGRhbnMgbGUgYmVzdGlhaXJlIMOgIGxhIGRlbWFuZGUgZCdFbHJpYy48YnI+CkFqb3V0IGRlcyBzb3J0cyA8YSBocmVmPSIvZ3JpbW9pcmUvYW1waG9yZS1tYWdpcXVlIj5BbXBob3JlIG1hZ2lxdWU8L2E+IGV0IDxhIGhyZWY9Ii9ncmltb2lyZS9hdGF4aWUtZGVzYWZmZXJlbnRhdGlvbiI+QXRheGllLWTDqXNhZmbDqXJlbnRhdGlvbjwvYT4gZCdhcHLDqHMgbGVzIGlkw6llcyBkJ0VscmljLjxicj4KQm9uIGpldS48L3A+CjxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgo8cD48ZW0+PHN0cm9uZz5PbGl2aWVyPC9zdHJvbmc+PC9lbT4sPGJyPgo8ZW0+bGUgMSBzZXB0ZW1icmUgMjAyMTwvZW0+PC9wPgo8L2Rpdj4KPGgyIGlkPSJtaXNlLWEtam91ci0zNSI+TWlzZSDDoCBqb3VyIDM1IDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWlzZS1hLWpvdXItMzUiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+U3VpdGUgw6AgbGEgcsOoZ2xlIGR1IDEgcXVpIGFtw6lsaW9yZSBsYSBuYXJyYXRpb24gZHUgamV1LCBsZXMgcsOoZ2xlcyBkZXMgY291cHMgY3JpdGlxdWVzIG9udCDDqXTDqSBham91dMOpIGV0IGxlcyB0YWJsZXMgbWlzZXMgw6Agam91ci4gTm91cyB0ZXN0ZXJvbnMgY2VsYSBlbiByw6llbCBkw6lzIGRlbWFpbiBhdmVjIGxlIGdyb3VwZS4KRCdhdXRyZXMgcGxhbnRlcyBzZXJvbnQgYWpvdXTDqWVzIHByb2NoYWluZW1lbnQuPGJyPgpCb24gamV1LjwvcD4KPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CjxwPjxlbT48c3Ryb25nPk9saXZpZXI8L3N0cm9uZz48L2VtPiw8YnI+CjxlbT5sZSAyNyBhb8O7dCAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTM0Ij5NaXNlIMOgIGpvdXIgMzQgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0zNCI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5EZXB1aXMgcXVlIGxlIHN5c3TDqG1lIGRlcyBibGVzc3VyZXMgZ3JhdmVzIGV0IGRlIGxldXIgZ3XDqXJpc29uIGEgw6l0w6kgYW3DqWxpb3LDqSBkYW5zIGxhIHBhcnRpZSA8Um91dGVyTGluayB0bz0iL2dlcmVyLWxhLXNhbnRlLWR1LXBlcnNvbm5hZ2UvI2JsZXNzdXJlcy1ncmF2ZXMiPmfDqXJlciBsYSBzYW50w6kgZHUgcGVyc29ubmFnZTwvUm91dGVyTGluaz4gLCBsJ3VzYWdlIGRlcyBwbGFudGVzIGRldmllbmRyYSBpbmRpc3BlbnNhYmxlLiBMYSByw6hnbGUgZHUgMSBzJ2Ftw6lsaW9yZSBhdmVjIGwnYXBwbGljYXRpb24gYXV0b21hdGlxdWUgZGUgbCdhbm51bGF0aW9uIGR1IDYgZW4gY2FzIGRlIDEgc3VyIGxlIGpldCBkJ3VuIGFkdmVyc2FpcmUuIENvbmNlcm5hbnQgbGUgYmVzdGlhaXJlLCBsZXMgdmFsZXVycyBkZSA8c3Ryb25nPjx2LWljb24+bWRpLXNrdWxsLWNyb3NzYm9uZXM8L3YtaWNvbj4gU2V1aWwgZGUgY3JpdGlxdWU8L3N0cm9uZz4gZXQgZGUgPHN0cm9uZz48di1pY29uPm1kaS1zaGllbGQ8L3YtaWNvbj5WYWxldXIgb2ZmZW5zaXZlIGdsb2JhbGU8L3N0cm9uZz4gc29udCBham91dMOpZXMgYXUgZnVyIGV0IMOgIG1lc3VyZS4gTCdhcHBsaWNhdGlvbiBkZXMgYmxlc3N1cmVzIGdyYXZlcyBlbiBjYXMgZGUgY3JpdGlxdWUgc2UgcHLDqWNpc2UgKHNlIHLDqWbDqXJlciBhdSB0YWJsZWF1IGRhbnMgbGEgc2VjdGlvbiA8Um91dGVyTGluayB0bz0iL2dlcmVyLWxhLXNhbnRlLWR1LXBlcnNvbm5hZ2UvI2JsZXNzdXJlcy1ncmF2ZXMiPmfDqXJlciBsYSBzYW50w6kgZHUgcGVyc29ubmFnZTwvUm91dGVyTGluaz4pIGV0IGTDqXNvcm1haXMgdW5lIGNvbmRpdGlvbiBzdXBwbMOpbWVudGFpcmUgYXBwYXJhaXQgcG91ciBsZSBjb3VwIGNyaXRpcXVlLCBsZXMgdHJvaXMgNiBzdXIgdW4gamV0IGQnYXR0YXF1ZS4gRCdhdXRyZXMgcGxhbnRlcyBvbnQgw6l0w6kgYWpvdXTDqWVzIHBvdXIgc29pZ25lciBsZXMgYnLDu2x1cmVzIDogPFJvdXRlckxpbmsgdG89Ii9oZXJiaWVyL3NvaW5zLWJydWx1cmVzLWdlbHVyZXMvI2F0aGFsYXMiPkF0aGFsYXM8L1JvdXRlckxpbms+ICZhbXA7IDxSb3V0ZXJMaW5rIHRvPSIvaGVyYmllci9zb2lucy1icnVsdXJlcy1nZWx1cmVzLyNhbG9hIj5BbG9hPC9Sb3V0ZXJMaW5rPi4KQm9uIGpldS48L3A+CjxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgo8cD48ZW0+PHN0cm9uZz5PbGl2aWVyPC9zdHJvbmc+PC9lbT4sPGJyPgo8ZW0+bGUgMTIgYW/Du3QgMjAyMTwvZW0+PC9wPgo8L2Rpdj4KPGgyIGlkPSJtaXNlLWEtam91ci0zMyI+TWlzZSDDoCBqb3VyIDMzIDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWlzZS1hLWpvdXItMzMiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+RGVwdWlzIHF1ZSBsZSBzeXN0w6htZSBkZXMgYmxlc3N1cmVzIGdyYXZlcyBldCBkZSBsZXVyIGd1w6lyaXNvbiBhIMOpdMOpIGFtw6lsaW9yw6kgZGFucyBsYSBwYXJ0aWUgPFJvdXRlckxpbmsgdG89Ii9nZXJlci1sYS1zYW50ZS1kdS1wZXJzb25uYWdlLyNibGVzc3VyZXMtZ3JhdmVzIj5nw6lyZXIgbGEgc2FudMOpIGR1IHBlcnNvbm5hZ2U8L1JvdXRlckxpbms+ICwgbCd1c2FnZSBkZXMgcGxhbnRlcyBwcmVuZCB1biBwZXUgcGx1cyBzb24gc2VucyBwb3VyIGFtw6lsaW9yZXIgbGEgZ3XDqXJpc29uIGRlIGNlcnRhaW5zIG1hdXguCkFqb3V0IGRhbnMgbCdoZXJiaWVyIGRlIHBsYW50ZXMgdHJhaXRhbnQgbGVzIGZyYWN0dXJlcyBvc3NldXNlcyBhdmVjIGwnPFJvdXRlckxpbmsgdG89Ii9oZXJiaWVyL3NvaW5zLWZyYWN0dXJlcy8jYWZhbmEiPmFmYW5hPC9Sb3V0ZXJMaW5rPiwgcm9zZWF1IGRlcyB6b25lcyBmcm9pZGVzLCBsZSA8Um91dGVyTGluayB0bz0iL2hlcmJpZXIvc29pbnMtZnJhY3R1cmVzLyNiYWxhaG0iPmJhbGFobTwvUm91dGVyTGluaz4sIHJvc2VhdSBkZXMgem9uZXMgY2hhdWRlcyBldCBodW1pZGVzLCBsYSA8Um91dGVyTGluayB0bz0iL2hlcmJpZXIvc29pbnMtZnJhY3R1cmVzLyNib3Vyc3NlbGF0aCI+Ym91cnNzZWxhdGg8L1JvdXRlckxpbms+LCBoZXJiZSDDoCBpbmfDqXJlciBkZXMgem9uZXMgdGVtcMOpcsOpZXMsICBsJzxSb3V0ZXJMaW5rIHRvPSIvaGVyYmllci9zb2lucy1mcmFjdHVyZXMvI2VkZXJsYW5lIj5lZGVybGFuZTwvUm91dGVyTGluaz4sIHBsYW50ZSBtb3Vzc3VlIGRlcyByw6lnaW9ucyBmcm9pZGVzIGV0IGxhIDxSb3V0ZXJMaW5rIHRvPSIvaGVyYmllci9zb2lucy1mcmFjdHVyZXMvI2dvdXJ0aGFtZWxsZSI+Z291cnRoYW1lbGxlPC9Sb3V0ZXJMaW5rPiwgaGVyYmFjw6llIGRlcyB6b25lcyB0ZW1ww6lyw6llcy48YnI+CkplIG0naW5zcGlyZSBmb3J0ZW1lbnQgZGVzIHJlc3NvdXJjZXMgZGUgcm9sZW1hc3RlciBxdWkgZm9udCBSw6lmw6lyZW5jZSBkYW5zIGxlIGRvbWFpbmUuPGJyPgpCb24gamV1LjwvcD4KPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CjxwPjxlbT48c3Ryb25nPk9saXZpZXI8L3N0cm9uZz48L2VtPiw8YnI+CjxlbT5sZSAwNiBhb8O7dCAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTMyIj5NaXNlIMOgIGpvdXIgMzIgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0zMiI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5MZSBkw6l2ZWxvcHBlbWVudCBkdSBzaXRlIHNlIHBvdXJzdWl0IGF2ZWMgcHJpbmNpcGFsZW1lbnQgbGEgY29ycmVjdGlvbiBkZSBsaWVucyBjYXNzw6lzLiBKJ2FpIHJham91dMOpIHBsdXNpZXVycyBydWJyaXF1ZXMgcXVpIHNvbnQgYWN0dWVsbGVtZW50IGVuIHRlc3QuIERhbnMgbGUgbWVudSwgaWwgeSBhIGTDqXNvcm1haXMgdW5lIHJ1YnJpcXVlIDxhIGhyZWY9Ii9pbnNwaW11c2ljIj5JbnNwaXJhdGlvbiBtdXNpY2FsZTwvYT4gZXQgdW5lIDxhIGhyZWY9Ii9jaHJvbm9sb2dpZSI+Y2hyb25vbG9naWU8L2E+LgpMZSBzeXN0w6htZSBkZXMgYmxlc3N1cmVzIGdyYXZlcyBldCBkZSBsZXVyIGd1w6lyaXNvbiBhIMOpdMOpIGFtw6lsaW9yw6kgZGFucyBsYSBwYXJ0aWUgPFJvdXRlckxpbmsgdG89Ii9nZXJlci1sYS1zYW50ZS1kdS1wZXJzb25uYWdlLyNibGVzc3VyZXMtZ3JhdmVzIj5nw6lyZXIgbGEgc2FudMOpIGR1IHBlcnNvbm5hZ2U8L1JvdXRlckxpbms+LiBMZXMgPGEgaHJlZj0iL3BvaXNvbnMiPnBvaXNvbnM8L2E+IG9udCBhdXNzaSDDqXTDqSByZXZpc2l0w6lzIGV0IHNlcm9udCBjb21wbMOpdMOpcyBkYW5zIGxlcyBqb3VycyDDoCB2ZW5pci4KQm9uIGpldS48L3A+CjxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgo8cD48ZW0+PHN0cm9uZz5PbGl2aWVyPC9zdHJvbmc+PC9lbT4sPGJyPgo8ZW0+bGUgMzAganVpbGxldCAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTMxIj5NaXNlIMOgIGpvdXIgMzEgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0zMSI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5MZSBkw6l2ZWxvcHBlbWVudCBkZSBsJ0FyY2jDqXR5cGUgZHUgPFJvdXRlckxpbmsgdG89Ii9hcmNoZXR5cGVzL3NvcnNlci8iPlNvcnNlcjwvUm91dGVyTGluaz4gc2UgcG91cnN1aXQgZG91Y2VtZW50IGV0IGxlcyBpZMOpZXMgdmllbm5lbnQgc2UgcmFqb3V0ZXIgcHJvZ3Jlc3NpdmVtZW50LiBFbHJpYyB0cmF2YWlsbGUgc3VyIGRlcyBzb3J0cyBldCBhIHByb3Bvc8OpIHVuIG5vdXZlbCBBcmNow6l0eXBlIHRyw6hzIGludMOpcmVzc2FudCBtYWlzIHF1ZSBqZSBkb2lzIGFqdXN0ZXIuIEdlb3JnZXMgYW3DqG5lIHNvbiByZW5mb3J0IHBvdXIgbGEgcsOpZGFjdGlvbiBkZSBsYSBjaHJvbmlxdWUgcXVpIG1lIHByZW5haXQgdnJhaW1lbnQgYmVhdWNvdXAgZGUgdGVtcHMuIFF1YW50IMOgIGxhIHZlcnNpb24gcGFwaWVyLCBqZSBuZSBkw6lzZXNww6hyZSBwYXMuIEonYWkgbcOqbWUgcmVwcmlzIGVzcG9pciBncsOiY2UgYXV4IGNvbXDDqXRlbmNlcyBkZSBKb3JkYW4gcXVpIGEgcsOpZGlnw6kgdW4gc2NyaXB0IHF1aSB2YSBtZSBwZXJtZXR0cmUgZCdleHRyYWlyZSBsZXMgcGFnZXMgZGUgbW9uIHNpdGUuIExlIGdhaW4gZGUgdGVtcHMgZXQgbGEgbWFpbnRlbmFuY2UgZGVzIHZlcnNpb25zIHMnZW4gdHJvdXZlcm9udCBmYWNpbGl0w6lzLjxicj4KQWpvdXQgZGVzIHNvcnRzICA8YSBocmVmPSIvZ3JpbW9pcmUvY29udm9jYXRpb24tYWlnbGUiPkNvbnZvY2F0aW9uIGQndW4gYWlnbGU8L2E+LCA8YSBocmVmPSIvZ3JpbW9pcmUvY29udm9jYXRpb24tY2hvdWV0dGUiPkNvbnZvY2F0aW9uIGQndW5lIGNob3VldHRlPC9hPiwgPGEgaHJlZj0iL2dyaW1vaXJlL2NvbnZvY2F0aW9uLXJhdCI+Q29udm9jYXRpb24gZCd1biByYXQ8L2E+LgpBam91dCBkYW5zIGxlIGJlc3RpYWlyZSBkdSA8YSBocmVmPSIvYmVzdGlhaXJlL3Zlci1waXF1ZXVyIj5WZXIgcGlxdWV1cjwvYT4uCkFqb3V0IGRhbnMgbCdoZXJiaWVyIGQndW5lIGxpc3RlIGQnYW50aWRvdGUgY29tbWUgbCc8Um91dGVyTGluayB0bz0iL2hlcmJpZXIvYW50aWRvdGVzLyNhc2dhcmJpZSI+YXNiYXJnaWU8L1JvdXRlckxpbms+LCB1biBwdWlzc2FudCBhbnRpZG90ZSBjb250cmUgbGVzIHBvaXNvbnMgbXVzY3VsYWlyZXMsICBsJzxSb3V0ZXJMaW5rIHRvPSIvaGVyYmllci9hbnRpZG90ZXMvI2VsaGVhbnVuZyI+ZWxoZWFudW5nPC9Sb3V0ZXJMaW5rPiwgYW50aWRvdGUgY29udHJlIGxlcyBwb2lzb25zIGRlIHLDqWR1Y3Rpb24sIGxlIDxSb3V0ZXJMaW5rIHRvPSIvaGVyYmllci9hbnRpZG90ZXMvI21lbmVsYXRoIj5tZW5lbGF0aDwvUm91dGVyTGluaz4sIGFudGlkb3RlIGNvbnRyZSBsZXMgcG9pc29ucyBjaXJjdWxhdG9pcnMsIGxhIDxSb3V0ZXJMaW5rIHRvPSIvaGVyYmllci9hbnRpZG90ZXMvI21va2h0Ij5iYWllIGRlIG1va2h0PC9Sb3V0ZXJMaW5rPiwgYW50aWRvdGUgY29udHJlIGxlcyBwb2lzb25zIHJlc3BpcmF0b2lyZXMsIGxhIDxSb3V0ZXJMaW5rIHRvPSIvaGVyYmllci9hbnRpZG90ZXMvI3F1aWx1bSI+cmFjaW5lIGRlIHF1aWx1bTwvUm91dGVyTGluaz4sIGFudGlkb3RlIGNvbnRyZSBsZXMgcG9pc29ucyBkZSBjb252ZXJzaW9uIGV0IGxlIDxSb3V0ZXJMaW5rIHRvPSIvaGVyYmllci9hbnRpZG90ZXMvI3VsLXRoYXphaCI+dWwndGhhemFoPC9Sb3V0ZXJMaW5rPiwgYW50aWRvdGUgdW5pdmVyc2VsIMOgIGhhdXRlIGNhcGFjaXTDqSBhZGRpY3RpdmUuPGJyPgpBam91dCBkYW5zIGwnaGVyYmllciBkZSBwbGFudGVzIHF1aSBzb2lnbmVudCBsZXMgb3MgYXZlYyAgPFJvdXRlckxpbmsgdG89Ii9oZXJiaWVyL3NvaW5zLWZyYWN0dXJlcy8jYWZhbmEiPmxhIHRpZ2UgZCdhZmFuYTwvUm91dGVyTGluaz4sIGxhIDxSb3V0ZXJMaW5rIHRvPSIvaGVyYmllci9zb2lucy1mcmFjdHVyZXMvI2JhbGFobSI+bWl4dHVyZSBkZSBiYWxhaG08L1JvdXRlckxpbms+LgpBam91dCBkZXMgcsOoZ2xlcyBkJzxSb3V0ZXJMaW5rIHRvPSIvaGVyYmllci8jYWRkaWN0aW9uIj5hZGRpY3Rpb248L1JvdXRlckxpbms+IGF1eCBwbGFudGVzLjxicj4KQm9uIGpldS48L3A+CjxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgo8cD48ZW0+PHN0cm9uZz5PbGl2aWVyPC9zdHJvbmc+PC9lbT4sPGJyPgo8ZW0+bGUgMjkganVpbGxldCAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTMwIj5NaXNlIMOgIGpvdXIgMzAgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0zMCI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5FbiBjZXR0ZSBww6lyaW9kZSBzaSBwYXJ0aWN1bGnDqHJlLCBhdmVjIGxlcyBjb250cmFpbnRlcyBzYW5pdGFpcmVzIGV0IGxlcyBhbMOpYXMgY2xpbWF0aXF1ZXMsIGplIHZvdXMgc291aGFpdGUgdG91dCBkZSBtw6ptZSB1biBiZWwgw6l0w6kuIERlIG5vbWJyZXV4IGFqdXN0ZW1lbnRzIGF1IGpldSBvbnQgw6l0w6kgZWZmZWN0dcOpcyBldCBkZXMgY29ycmVjdGlvbnMgYXBwb3J0w6llcyBhdSBmdXIgZXQgw6AgbWVzdXJlIGRlIGxhIGTDqWNvdXZlcnRlcyBkJ2VycmV1ci5MYSB2b2llIGRlIGxhIG1hZ2llIGEgw6l0w6kgcmVtYW5pw6llIHBvdXIgdW5lIHBsdXMgZ3JhbmRlIGNvaMOpcmVuY2UgYXZlYyBsJ3VzYWdlIGRlIGxhIG1hZ2llIGV0IGluc2lzdGVyIHN1ciBsYSBkaWZmw6lyZW5jZSBlbnRyZSBsZXMgdXRpbGlzYXRldXJzIGRlIGxhIG1hZ2llIGRlIGNldHRlIHZvaWUgZXQgZGUgY2VsbGVzIGRlcyBhdXRyZXMgdm9pZXMuPGJyPgpMYSBjYW1wYWduZSBkZSBqZXUgY29udGludWUgZXQgamUgc291aGFpdGUgcmVtZXJjaWVyIG1lcyBqb3VldXJzIHBvdXIgbGV1ciBpbnZlc3Rpc3NlbWVudCwgcGFydGljdWxpw6hyZW1lbnQgQmFzdGlhbiwgR2VvcmdlcyBldCBFbHJpYyBxdWkgbSdhaWRlbnQgw6AgYWpvdXRlciBkZXMgY29udGVudXMgcsOpZ3VsacOocmVtZW50Ljxicj4KQm9uIGpldS48L3A+CjxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgo8cD48ZW0+PHN0cm9uZz5PbGl2aWVyPC9zdHJvbmc+PC9lbT4sPGJyPgo8ZW0+bGUgMjUganVpbGxldCAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTI5Ij5NaXNlIMOgIGpvdXIgMjkgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0yOSI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5Wb2ljaSBsZXMgZGVybmllcnMgYWpvdXRzIGRvbnQgbGUgU29yc2VyIHF1aSBhdmFuY2UgZG91Y2VtZW50IG1haXMgcXVpIG4nZXN0IHBhcyBkdSB0b3V0IHRlcm1pbsOpLgpBam91dCBkYW5zIGxlIGJlc3RpYWlyZSBkZSBsJzxhIGhyZWY9Ii9iZXN0aWFpcmUvYW1lLWVuLXBlaW5lIj7Dom1lIGVuIHBlaW5lPC9hPiw8YSBocmVmPSIvYmVzdGlhaXJlL2dvdWxlIj5Hb3VsZTwvYT4gZXQgbGUgPGEgaHJlZj0iL2Jlc3RpYWlyZS9mYW50b21lIj5GYW50b21lPC9hPiBldCBkYW5zIGxlIGdyaW1vaXJlIGxlIHNvcnQgPGEgaHJlZj0iL2dyaW1vaXJlL2RvdWxldXItbmVydmV1c2UiPkRvdWxldXIgbmVydmV1c2U8L2E+CkJvbiBqZXUuPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDE4IGp1aW4gMjAyMTwvZW0+PC9wPgo8L2Rpdj4KPGgyIGlkPSJtaXNlLWEtam91ci0yOCI+TWlzZSDDoCBqb3VyIDI4IDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWlzZS1hLWpvdXItMjgiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+SmUgdHJhdmFpbGxlIGFjdHVlbGxlbWVudCBzdXIgdW4gbm91dmVsIEFyY2jDqXR5cGUgbWFnaXF1ZSBwdWlzc2FudCwgbGUgU29yc2VyLCBkb250IGwndW4gZGVzIHBsdXMgY29ubnVzIGEgw6l0w6kgTW9ycmluZ2VyLjxicj4KRGFucyBsZSBiZXN0aWFpcmUsIGFqb3V0IGR1IDxhIGhyZWY9Ii9iZXN0aWFpcmUvc3BlY3RyZSI+U3BlY3RyZTwvYT4uPGJyPgpKJ2FpIGF1c3NpIGFqb3V0w6kgZGUgbm91dmVhdXggc29ydHMgOiA8YSBocmVmPSIvZ3JpbW9pcmUvaW52b3F1ZXItbGVzLWZhbnRvbWVzIj5pbnZvcXVlciBsZXMgZmFudMO0bWVzPC9hPiwgPGEgaHJlZj0iL2dyaW1vaXJlL3B1aXNzYW5jZS1ndWVycmllcmUiPlB1aXNzYW5jZSBndWVycmnDqHJlPC9hPiw8YSBocmVmPSIvZ3JpbW9pcmUvYnJpc2Utb3MiPkJyaXNlIG9zPC9hPiwgPGEgaHJlZj0iL2dyaW1vaXJlL2JydWx1cmUtZGUtbC1hbWUiPkJyw7tsdXJlIGRlIGwnw6JtZTwvYT4sIDxhIGhyZWY9Ii9ncmltb2lyZS9icnVsdXJlLWRlLWxhLXBlYXUiPkJyw7tsdXJlIGRlIGxhIHBlYXU8L2E+LCA8YSBocmVmPSIvZ3JpbW9pcmUvY2F1Y2hlbWFycyI+Q2F1Y2hlbWFyczwvYT4sIDxhIGhyZWY9Ii9ncmltb2lyZS9jaGFpbmVzLW1lbnRhbGVzIj5DaGHDrm5lcyBtZW50YWxlczwvYT4sIDxhIGhyZWY9Ii9ncmltb2lyZS9jcmFpbnRlIj5DcmFpbnRlPC9hPiwKQm9uIGpldS48L3A+CjxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgo8cD48ZW0+PHN0cm9uZz5PbGl2aWVyPC9zdHJvbmc+PC9lbT4sPGJyPgo8ZW0+bGUgMTQganVpbiAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTI3Ij5NaXNlIMOgIGpvdXIgMjcgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0yNyI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5Wb3VzIHRyb3V2ZXJleiBlbiBtaXNlIMOgIGpvdXIgbCdham91dCBkZSBsJ0FyY2jDqXR5cGUgZHUgPGEgaHJlZj0iL2FyY2hldHlwZXMvam9yZ2hhbCI+SsO2cmdoYWw8L2E+LCB1biB0ZXJyaWJsZSBjaGFtcGlvbiBtZWxnIGF1IHNlcnZpY2UgZGUgc29uIFJvbGYuIExhIGNocm9uaXF1ZSBhIGF1c3NpIMOpdMOpIG1pc2Ugw6Agam91ciBkZXB1aXMgbGEgZGVybmnDqHJlIHBhcnRpZSBkdSA1IGp1aW4uCkJvbiBqZXUuPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDExIGp1aW4gMjAyMTwvZW0+PC9wPgo8L2Rpdj4KPGgyIGlkPSJtaXNlLWEtam91ci0yNiI+TWlzZSDDoCBqb3VyIDI2IDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWlzZS1hLWpvdXItMjYiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+SidhaSBham91dMOpIGxhIGRlc2NyaXB0aW9uIGRlIERpbmFzIE1vci1sZWlkciBkYW5zIGxhIHNlY3Rpb24gZGUgbCdhdGxhcyBkZSBEb3VhcmF0aWwuIExlcyBjaHJvbmlxdWVzIG9udCDDqXTDqSBtaXNlcyBhdXNzaSDDoCBqb3VyLCBub3VzIHZvaWNpIGTDqXNvcm1haXMgZW4gTWl6IEV2ZW4uIExlcyB0ZXJyaWJsZXMgVXInaHMgc29udCB2ZW51cyBnYXJuaXIgbGUgYmVzdGlhaXJlLiBMZXMgam91ZXVycyBuZSB0YXJkZXJvbnQgcGFzIMOgIHJlbmNvbnRyZXIgY2VzIMOpdHJhbmdlcyB0cmlidXMgcHJpbWl0aXZlcyBkZXMgZm9yw6p0cyBwcm9mb25kZXMgZXQgZGVzIG1vbnRzIGR1IE1lbmV6bGF0YXIuPGJyPgpCb24gamV1LjwvcD4KPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CjxwPjxlbT48c3Ryb25nPk9saXZpZXI8L3N0cm9uZz48L2VtPiw8YnI+CjxlbT5sZSAyIGp1aW4gMjAyMTwvZW0+PC9wPgo8L2Rpdj4KPGgyIGlkPSJtaXNlLWEtam91ci0yNSI+TWlzZSDDoCBqb3VyIDI1IDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWlzZS1hLWpvdXItMjUiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+SidhaSBham91dMOpIHF1ZWxxdWVzIG5vdXZlYXV4IHNvcnRzIGZvcnRzIHV0aWxlcyBxdWkgc29udCA8YSBocmVmPSIvZ3JpbW9pcmUvbXVybXVyZS1hcXVhdGlxdWUiPk11cm11cmUgYXF1YXRpcXVlPC9hPiwgPGEgaHJlZj0iL2dyaW1vaXJlL3NhY3JlbWVudC1kZS1sLWFyYnJlLWZydWl0aWVyIj5TYWNyZW1lbnQgZGUgbCdhcmJyZSBmcnVpdGllcjwvYT4sIDxhIGhyZWY9Ii9ncmltb2lyZS9zb3VmZmxlLWR1LW1lc3NhZ2VyIj5Tb3VmZmxlIGR1IG1lc3NhZ2VyPC9hPi48YnI+CkJvbiBqZXUuPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDIganVpbiAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTI0Ij5NaXNlIMOgIGpvdXIgMjQgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0yNCI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5MZSBwYW50aMOpb24gZGVzIGRpZXV4IHByaW1haXJlcywgaW52ZW50w6lzIHBhciBFbHJpYywgZXN0IGVuZmluIHRlcm1pbsOpIGF2ZWMgbCdhcnJpdsOpZSBkZSBzb24gZGVybmllciBiw6liw6kgPGEgaHJlZj0iL2Jlc3RpYWlyZS9lbWh5aHJ1aWdkcnV4Ij5FbWh5aHJ1aWdkcnV4PC9hPi4gSidlbiBhaSBwcm9maXTDqSBwb3VyIHLDqW9yZ2FuaXNlciBsYSBwYWdlcyBkZXMgPGEgaHJlZj0iL2RpZXV4LWRpdmluaXRlcyI+ZGlldXggZXQgZGVzIGRpdm5pdMOpczwvYT4gZXQgeSBkw6lwbGFjZXIgbGVzIG15dGhlcyBraGVybmHDq3MgZXQgT3lub3Vycy4gSmUgZMOpY3JpZXJhaSBsZXVycyBkaXZpbml0w6kgdGVjaG5pcXVlbWVudCBwbHVzIHRhcmQuPGJyPgpKJ2FpIHJham91dMOpIHVuZSBwYWdlIDxhIGhyZWY9Ii9GQVEiPnF1ZXN0aW9ucyBmcsOpcXVlbnRlczwvYT4uIEplIGxhIGNvbXBsw6h0ZXJhaSBhdSBmdXIgZXQgw6AgbWVzdXJlLjxicj4KQm9uIGpldS48L3A+CjxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgo8cD48ZW0+PHN0cm9uZz5PbGl2aWVyPC9zdHJvbmc+PC9lbT4sPGJyPgo8ZW0+bGUgMSBqdWluIDIwMjE8L2VtPjwvcD4KPC9kaXY+CjxoMiBpZD0ibWlzZS1hLWpvdXItMjMiPk1pc2Ugw6Agam91ciAyMyA8YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI21pc2UtYS1qb3VyLTIzIj48aSBjbGFzcz0idi1pY29uIG5vdHJhbnNsYXRlIG1kaSBtZGktbGluay12YXJpYW50Ij48L2k+PC9hPjwvaDI+CjxwPkxlIHBhbnRow6lvbiBkZXMgZGlldXggcHJpbWFpcmVzLCBpbnZlbnTDqXMgcGFyIEVscmljLCBhIMOpdMOpIGNvbXBsw6l0w6kgZW4gbGlnbmUgYXZlYyBsJ2Fqb3V0IGR1IGRpZXUgPGEgaHJlZj0iL2Jlc3RpYWlyZS9saGFvdGhsYXN0aG9sbyI+TGhhb3RobGFzdGhvbG88L2E+LCBEaWV1IGRlcyBwcm9waMOpdGllcywgZGVzIG1hbMOpZGljdGlvbnMsIGRlcyBiw6luw6lkaWN0aW9ucyBldCBkZXMgc2VjcmV0cyBldCBkZSBsYSBkw6llc3NlIDxhIGhyZWY9Ii9iZXN0aWFpcmUvdmhheHJyaXh6Ij5WaGF4cnJpeHo8L2E+LCBEw6llc3NlIGRlIGxhIHbDqXJpdMOpLCBkZXMgcsOqdmVzIGV0IGRlcyBjaG9peC4KTCdoZXJiaWVyIChzZWN0aW9uIHBsYW50ZXMpIGEgw6l0w6kgYXVzc2kgY29tcGzDqXTDqWUgZW4gYWpvdXRhbnQgdW5lIG1vZHVsYXRpb24gZGVzIEREIGRlIGRpZmZpY3VsdMOpIGRlIGN1ZWlsbGV0dGUgc3VpdmFudCBsZXMgc2Fpc29ucy48YnI+CkJvbiBqZXUuPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDMxIG1haSAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTIyIj5NaXNlIMOgIGpvdXIgMjIgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0yMiI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5Wb2ljaSBsZXMgZW4gZ3JvcyBsZXMgZGVybmnDqHJlcyBub3V2ZWxsZXMuIEplIHZhaXMgc8O7cmVtZW50IGVuIG91YmxpZXIgY2FyIGlsIHkgYSBldSBiZWF1Y291cCBkZSBjaG9zZXMgY2UgbW9pcy1jaS48YnI+CkNyw6lhdGlvbiBkJ3VuZSBwYWdlIGRlIHLDqGdsZXMgb3B0aW9ubmVsbGVzIHN1ciBsZSA8Um91dGVyTGluayB0bz0iL2NvbW1lcmNlLyI+Y29tbWVyY2U8L1JvdXRlckxpbms+IGQnYXByw6hzIHVuZSBpZMOpZSBkZSBHZW9yZ2VzLjxicj4KQ3LDqWF0aW9uIGQndW5lIHBhZ2Ugc3VyIGxlcyA8Um91dGVyTGluayB0bz0iL2RpZXV4LWRpdmluaXRlcy8iPkRpZXV4LCBkaXZpbml0w6lzICZhbXA7IGF1dHJlcyBmb3JjZXM8L1JvdXRlckxpbms+IGV0IGRhbnMgbGUgYmVzdGlhaXJlIGF2ZWMgbCdhcnJpdsOpZSBkZSBwdWlzc2FudGVzIChkaXZpbmU/KSBhYmVycmF0aW9ucyB0ZWxsZSA8Um91dGVyTGluayB0bz0iL2Jlc3RpYWlyZS9kYXJ0aGVudHJodWkvIj5EYXJ0aGVudHJodWk8L1JvdXRlckxpbms+LCA8Um91dGVyTGluayB0bz0iL2Jlc3RpYWlyZS9raG91bGdnb3RhdGVlbGxlLyI+S2hvdWxnZ290YXRlZWxsZTwvUm91dGVyTGluaz4sIDxSb3V0ZXJMaW5rIHRvPSIvYmVzdGlhaXJlL3NhdGh5YWt1cm0tZGUvIj5TYXRoeWFrdXJt4oCZZGU8L1JvdXRlckxpbms+LCAgPFJvdXRlckxpbmsgdG89Ii9iZXN0aWFpcmUvc2hhbmRvdGgvIj5TaGFuZG90aDwvUm91dGVyTGluaz4gZXQgIDxSb3V0ZXJMaW5rIHRvPSIvYmVzdGlhaXJlL3NoZWdnb3RobGlsLyI+U2hlZ2dvdGhsaWw8L1JvdXRlckxpbms+Ljxicj4KVW5lIG5vdXZlbGxlIHNlY3Rpb24gZXN0IGFwcGFydWUgZGFucyBsZSBtZW51IGR1IG1vbmRlIGRlIGRvdWFyYXRpbCBwb3VyIGTDqWNyaXJlIGxlcyBwZXVwbGVzLCBhdmVjIGxhIGRlc2NyaXB0aW9uIGR1IHBldXBsZSA8Um91dGVyTGluayB0bz0iL3BldXBsZXMvb3lub3Vycy8iPk95bm91cnM8L1JvdXRlckxpbms+IGQnYXByw6hzIHVuZSBsaWJyZSBpbnRlcnByw6l0YXRpb24gZGVzIHBldXBsZXMgZGVzIHN0ZXBwZXMgZGUgRGF2aWQgZXQgbGEgZGVzY3JpcHRpb24gZHUgcGV1cGxlIDxSb3V0ZXJMaW5rIHRvPSIvcGV1cGxlcy9raGVybmFlcy8iPktoZXJuYcOrPC9Sb3V0ZXJMaW5rPi48YnI+ClN1ciBsZSBmcm9udCBkZXMgQXJjaMOpdHlwZXMgZGUgcGVyc29ubmFnZXMsIGxhIGRlc2NyaXB0aW9uIGR1IDxSb3V0ZXJMaW5rIHRvPSIvYXJjaGV0eXBlcy9zb2hvdGVuLyI+U29ob3RlbjwvUm91dGVyTGluaz4gZXQgbGEgcsOpdmlzaW9uIGVuIHByb2ZvbmRldXIgZHUgPFJvdXRlckxpbmsgdG89Ii9hcmNoZXR5cGVzL2RhbGwtZGF3bnNlci8iPkRhbGwgRGF3bnNlcjwvUm91dGVyTGluaz4uIEonYWkgcHJvY8OpZMOpIGF1c3NpIMOgIHF1ZWxxdWVzIHJldG91Y2hlcyBkdSA8Um91dGVyTGluayB0bz0iL2FyY2hldHlwZXMvc2VpYmFoa2FtaS8iPlNlaWJhaGthbWk8L1JvdXRlckxpbms+Ljxicj4KRXQgcG91ciByZW5kcmUgw6AgQ8Opc2FyIGNlIHF1aSBsdWkgcmV2aWVudCwgRW0tc3F1YXJlZCBlc3QgaW50ZXJ2ZW51IHN1ciBsZSBzaXRlIChhcHLDqHMgZGVzIGVzc2FpcyBpbmZydWN0dWV1eCBkZSBtYSBwYXJ0KSBwb3VyIHBlcm1ldHRyZSBkJ2FmZmljaGVyIGxlcyAmcXVvdDtzb3VyY2VzJnF1b3Q7IHN1ciBsZXMgcGFnZXMgc3RhbmRhcmRzLiBMZXMgYXV0ZXVycyBxdWkgc29udCBwdWJsacOpcyBuZSBzZXJvbnQgcGx1cyBvdWJsacOpcy48YnI+CkJvbiBqZXUuPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDI3IG1haSAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTIxIj5NaXNlIMOgIGpvdXIgMjEgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0yMSI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5MZSBzaXRlIGF2YW5jZSByw6lndWxpw6hyZW1lbnQgbcOqbWUgc2kgamUgbmUgY29tbXVuaXF1ZSBwYXMgZm9yY8OpbWVudCBzdXIgY2hhcXVlIGTDqXRhaWwuIExlcyByw6hnbGVzIGRlIHBhdHJpbW9pbmUgZXQgZGUgZ2VzdGlvbiBkZXMgZmFtaWxsZXMgc29udCBtYWludGVuYW50IGJpZW4gaW50w6lncsOpZXMgcGFyIG1lcyBqb3VldXJzIGV0IGNlbGEgcmFqb3V0ZSB2cmFpbWVudCBkYW5zIGxlcyBwcm9qZXRzIGV0IGxlcyBwbGFucyBxdSdpbHMgw6lsYWJvcmVudC4gTGEgY2FtcGFnbmUgY29udGludWUgc29uIGNvdXJzIGV0IHByZW5kIGRlcyBhbGx1cmVzIGRyYW1hdGlxdWVzLgpDw7R0w6kgZGVzIHLDqGdsZXMsIHZvdXMgdHJvdXZlcmV6IHNvdXMgcGV1IGwnYXJjaMOpdHlwZSBZb3Rha2HDryBkdSBTb2hvdGVuIGV0IEtoZXJuYcOrZSBkZSBsYSBTZXJtYXpsb3RoLgpCb24gamV1LjwvcD4KPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CjxwPjxlbT48c3Ryb25nPk9saXZpZXI8L3N0cm9uZz48L2VtPiwKPGVtPmxlIDE2IG1haSAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTIwIj5NaXNlIMOgIGpvdXIgMjAgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0yMCI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5EZXMgc2VtYWluZXMgcGx1cyBjaGFyZ8OpZXMgZXQgbGUgcmV0b3VyIGRlcyBiZWF1eCBqb3VycyBsYWlzc2VudCBtb2lucyBkZSB0ZW1wcyBwb3VyIGxlIHNpdGUuIEplIHRyYXZhaWxsZSAoZW5maW4gc3VydG91dCBsdWkgcG91ciBsJ2luc3RhbnQpIGF2ZWMgbGUgam91ZXVyIGRlIFJ1ZG9sZiBwb3VyIGxhIGNyw6lhdGlvbiBkJ3VuZSBmZXVpbGxlIGRlIHBlcnNvbm5hZ2Ugw6lkaXRhYmxlLiBKJ2FpIG1pcyBlbiBsaWduZSB1bmUgZmV1aWxsZSBkZSBwZXJzb25uYWdlIHLDqWVsbGVtZW50IHZpZGUgY2FyIGVsbGUgbifDqXRhaXQgcGFzIHV0aWxpc2FibGUgZW4gbCdlc3DDqGNlLjxicj4KRGFucyBsYSBzZWN0aW9uIGRlIGxhIGdlc3Rpb24gZGUgbGEgc2FudMOpIGRlcyBwZXJzb25uYWdlcywgbGEgc2VjdGlvbiBsb2NhbGlzYXRpb24gZGVzIGJsZXNzdXJlcyBhIMOpdMOpIHLDqW9yZ2FuaXPDqWUgZW4gdGFibGVhdS48YnI+CkVuZmluLCBjw7R0w6kgdmllIHByaXbDqWUsIGxlcyBjb29raWVzIGRlIG5hdmlnYXRpb24gZ29vZ2xlIGFuYWx5dGljcyBvbnQgw6l0w6kgcmV0aXLDqXMuIFNldWxzIGxlcyBjb29raWVzIG7DqWNlc3NhaXJlIMOgIGxhIG5hdmlnYXRpb24gZHUgc2l0ZSBvbiDDqXTDqSBnYXJkw6kgZXQgbGUgbWVzc2FnZSBkJ2FjY3VlaWwgYSDDqXTDqSBtaXMgw6Agam91ciBlbiBjZSBzZW5zLjxicj4KQm9uIGpldS48L3A+CjxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgo8cD48ZW0+PHN0cm9uZz5PbGl2aWVyPC9zdHJvbmc+PC9lbT4sPGJyPgo8ZW0+bGUgMjcgbWFycyAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTE5Ij5NaXNlIMOgIGpvdXIgMTkgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0xOSI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5VbmUgbm91dmVsbGUgcGFnZSBlc3QgZW4gY291cnMgZGUgY29uc3RydWN0aW9uIGV0IHByb3Bvc2VyYSBkZXMgcsOoZ2xlcyBwb3VyIGfDqXJlciBsZXMgPGEgaHJlZj0iL2JhdGFpbGxlcyI+YmF0YWlsbGVzPC9hPi4gUGFybWkgbGVzIGFqb3V0cywgdW4gbm91dmVsIEFyY2jDqXR5cGUgZGUgbGEgY3VsdHVyZSBhbGNhbnRlIGVzdCBkw6lzb3JtYWlzIGRpc3BvbmlibGUgOiBsZSA8YSBocmVmPSIvYXJjaGV0eXBlcy9sZWdhdG9zIj5MZWdhdG9zPC9hPi4gQ2UgdHlwZSBkZSBwZXJzb25uYWdlIGF1cmEgdW5lIGdyYW5kZSBpbmZsdWVuY2UgZXQgcGFybGVyYSBhdmVjIGF1dG9yaXTDqS48YnI+CkPDtHTDqSBQSiwgbGUgcGVyc29ubmFnZSA8YSBocmVmPSIvYmVzdGlhaXJlL21hbGFsYS1zb2EiPk1hbGFsYSBTb2E8L2E+IGEgw6l0w6kgZW5maW4gZMOpY3JpdC48L3A+CjxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgo8cD48ZW0+PHN0cm9uZz5PbGl2aWVyPC9zdHJvbmc+PC9lbT4sPGJyPgo8ZW0+bGUgMTQgbWFycyAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTE4Ij5NaXNlIMOgIGpvdXIgMTggPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0xOCI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5MYSBwYWdlIGRlIGdlc3Rpb24gZGVzIGRvbWFpbmVzIGVzdCBkw6lzb3JtYWlzIGVuIGxpZ25lLiBFbGxlIHBlcm1ldHRyYSBhdXggam91ZXVycyBxdWkgbGUgZMOpc2lyZW50LCBkJ2FwcHJvZm9uZGlyIGxlIGJhY2tncm91bmQgZXQgbCdlbnJhY2luZW1lbnQgZGFucyBsZSBtb25kZSBkZSBEb3VhcmF0aWwuIEV2aWRlbW1lbnQsIGNlIHR5cGUgZGUgbcOpY2FuaXNtZSBkZSBqZXUgcydpbnTDqGdyZSBwYXJmYWl0ZW1lbnQgZGFucyB1bmUgY2FtcGFnbmUuIEVsbGUgZXN0IHBhcnRpY3VsacOocmVtZW50IGFkYXB0w6llIHBvdXIgaW50cmlndWVudCBwb2xpdGlxdWVzIGV0IGRvbm5lcmEgcGx1cyBkZSBwcm9mb25kZXVyIGF1IHBlcnNvbm5hZ2UgZHUgam91ZXVycy4gQm9ubmUgZMOpY291dmVydGUgZXQgYm9uIGpldS48L3A+CjxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgo8cD48ZW0+PHN0cm9uZz5PbGl2aWVyPC9zdHJvbmc+PC9lbT4sPGJyPgo8ZW0+bGUgNiBtYXJzIDIwMjE8L2VtPjwvcD4KPC9kaXY+CjxoMiBpZD0ibWlzZS1hLWpvdXItMTciPk1pc2Ugw6Agam91ciAxNyA8YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI21pc2UtYS1qb3VyLTE3Ij48aSBjbGFzcz0idi1pY29uIG5vdHJhbnNsYXRlIG1kaSBtZGktbGluay12YXJpYW50Ij48L2k+PC9hPjwvaDI+CjxwPkonYWkgZmFpdCBsZSBjb21wdGUuIExlIHNpdGUgY29udGllbnQgZMOpc29ybWFpcyAzNDIgc29ydHMgYXZlYyBsYSBmb3VybsOpZSBkZSBHd2lvbiwgdHLDqHMgaW5zcGlyw6kgZW4gc2UgbW9tZW50LiBKZSB2YWlzIG1ldHRyZSDDoCBqb3VyIGxhIENocm9uaXF1ZSAoaidhaSBwcmlzIHVuIHBldSBkZSByZXRhcmQpIG1haXMgbGUgbW9pcyBkZSBGYXZyb3MgZXN0IGZpbmkuIEplIHRlcm1pbmVyYWkgbGEgc2VjdGlvbiBzdXIgbGEgZ2VzdGlvbiBkZXMgZG9tYWluZXMgZGVtYWluLiBFbiBhdHRlbmRhbnQgOiBCb24gamV1LjwvcD4KPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CjxwPjxlbT48c3Ryb25nPk9saXZpZXI8L3N0cm9uZz48L2VtPiw8YnI+CjxlbT5sZSA0IG1hcnMgMjAyMTwvZW0+PC9wPgo8L2Rpdj4KPGgyIGlkPSJtaXNlLWEtam91ci0xNiI+TWlzZSDDoCBqb3VyIDE2IDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWlzZS1hLWpvdXItMTYiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+TCdham91dCBkZSB0b3VzIGxlcyBzb3J0cyAmcXVvdDtjbGFzc2lxdWVzJnF1b3Q7IGVzdCBkw6lzb3JtYWlzIHRlcm1pbsOpLiBMZXMgc3VpdmFudHMgc2Vyb250IHLDqWVsbGVtZW50IGRlcyBub3V2ZWF1dMOpcy4gSidhaSByYWpvdXTDqSBzdXIgY2VydGFpbnMgc29ydHMgdW5lIG9wdGlvbiAmcXVvdDtzb3VyY2VzJnF1b3Q7IHBvdXIgeSBtZXR0cmUgbGUgbm9tIGRlcyBhdXRldXJzIGNhciBqdXNxdSfDoCBtYWludGVuYW50LCBpbHMgw6l0YWllbnQgYW5vbnltZXMgYWxvcnMgcXVlIEd3aW9uIGEgYmVhdWNvdXAgcGFydGljaXDDqSwgYWluc2kgcXVlIEzDtGNoZXRvcyBwb3VyIHVuIHNvcnQuIEMnZXN0IGNob3NlIHLDqXBhcsOpZS4gTGEgQ2hyb25pcXVlIGRlIEZhdnJvcyBzZSB0ZXJtaW5lIGV0IHMnb3V2cmUgc3VyIHVuIG5vdXZlYXUgbW9pcyA6IE1peiBNb3J6LgpCb24gamV1LjwvcD4KPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CjxwPjxlbT48c3Ryb25nPk9saXZpZXI8L3N0cm9uZz48L2VtPiw8YnI+CjxlbT5sZSAyIG1hcnMgMjAyMTwvZW0+PC9wPgo8L2Rpdj4KPGgyIGlkPSJtaXNlLWEtam91ci0xNSI+TWlzZSDDoCBqb3VyIDE1IDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWlzZS1hLWpvdXItMTUiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+TGVzIDxhIGhyZWY9Ii9wYXNzaW9uLWhvbm5ldXItZXQtaW50ZXJhY3Rpb25zLXNvY2lhbGVzIj5yw6hnbGVzIGQnaG9ubmV1cjwvYT4gb250IMOpdMOpIGNvbXBsw6l0w6llcyBhZmluIGRlIHBvdXZvaXIgZW5nYWdlciBlbmZpbiBkZXMgYWZmcm9udGVtZW50cyBzb2NpYXV4IGV0IGludHJvZHVpc2FudCBhaW5zaSBkZSBub3V2ZWxsZXMgbcOpY2FuaXF1ZXMgZGUgZ2FtZXBsYXkuIExlcyByw6hnbGVzIGRlIGdlc3Rpb24gZHUgRG9tYWluZSwgZHUgJnF1b3Q7SG91c2luZyZxdW90OyBkZXZyYWllbnQgc3VpdnJlLiBMZXMgY2hyb25pcXVlcyBvbnQgZCdhdXRyZSBwYXJ0IMOpdMOpIG1pc2VzIMOgIGpvdXIgYXZlYyBsZXMgw6l2w6huZW1lbnRzIGRlIDxhIGhyZWY9Ii9jaHJvbmlxdWVzL21pei1mYXZyb3MtNzIxIj5NaXogRmF2cm9zPC9hPi4gQydlc3QgYXVzc2kgbCdhcnJpdsOpZSBkJ3VuIG5vdXZlbCBhcmNow6l0eXBlIDogbGEgPGEgaHJlZj0iL2FyY2hldHlwZXMvZnVydGFuZSI+RsO8cnRhbmU8L2E+LiBMYSBkZXNjcmlwdGlvbiBkJ3VuIG5vdXZlYXUgUE5KLCA8YSBocmVmPSIvYmVzdGlhaXJlL3NoYW1hc2gtZXJpYmEiPlNoYW1hc2ggRXJpYmE8L2E+IGEgw6l0w6kgYWpvdXTDqWUgYXUgQmVzdGlhaXJlOiAgdW4gZnV0dXIgYWR2ZXJzYWlyZSBvdSBhbGxpw6k/PGJyPgpCb24gamV1LjwvcD4KPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CjxwPjxlbT48c3Ryb25nPk9saXZpZXI8L3N0cm9uZz48L2VtPiw8YnI+CjxlbT5sZSAyNyBmw6l2cmllciAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTE0Ij5NaXNlIMOgIGpvdXIgMTQgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0xNCI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5MZSBtZW51IGRlIGdhdWNoZSBkdSBzaXRlIGEgw6l0w6kgcsOpb3JnYW5pc8OpIGV0IGRlIHNsaWVucyBtYW5xdWFudCBvbnQgw6l0w6kgcmFqb3V0w6lzLiBKJ2FpIHNvdWhhaXTDqSByZWdyb3VwZXIgY2VydGFpbmVzIGNhdMOpZ29yaWVzIHBvdXIgcGx1cyBkZSBsaXNpYmlsaXTDqS48YnI+CkR1IGPDtHTDqSBkZXMgcsOoZ2xlcywgdW5lIHBhZ2Ugc3VyIGxhIGdlc3Rpb24gZGUgbCc8YSBocmVmPSIvZXhwZXJpZW5jZSI+ZXhww6lyaWVuY2U8L2E+IGEgw6l0w6kgcsOpZGlnw6llLiBEJ2F1dHJlIHBhcnQsIGdyw6JjZSDDoCBsJ29laWwgYXR0ZW50aWYgZGUgPGEgaHJlZj0iL2Jlc3RpYWlyZS9nd2lvbi1nb3Jub2MiPkd3aW9uPC9hPiwgZGUgbm9tYnJldXNlcyBlcnJldXJzIGR1IGdyaW1vaXJlIG9udCDDqXTDqSBjb3JyaWfDqWVzLCBub3RhbW1lbnQgZGFucyBsYSBjbGFzc2lmaWNhdGlvbiBkZSBjZXJ0YWlucyBzb3J0cyBldCBsZXVyIGNvw7t0IGVuIE1hZ2llIG91IGVuIEZvaS4gRGFucyBsZXMgaGV1cmVzIHF1aSB2aWVubmVudCwgbGVzIGNocm9uaXF1ZXMgZGV2cmFpZW50IMOqdHJlIG1pc2VzIMOgIGpvdXIuPGJyPgpCb24gamV1LjwvcD4KPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CjxwPjxlbT48c3Ryb25nPk9saXZpZXI8L3N0cm9uZz48L2VtPiw8YnI+CjxlbT5sZSAxOSBmw6l2cmllciAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTEzIj5NaXNlIMOgIGpvdXIgMTMgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0xMyI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5VbiBtb2lzIGJlYXVjb3VwIHBsdXMgY2FsbWUgcXVpIGEgYXVzc2kgcGVybWlzIGRlIGZhaXJlIHVuZSBwZXRpdGUgcGF1c2UuIGpvdXMgYXZvbnMgYXBwcmlzIGF2ZWMgdHJpc3Rlc3NlIGxhIGZpbiBkZSBsYSBnYW1tZSBIJmFtcDtEIHN1aXRlIMOgIHVuIGNvbmZsaXQgY29tbWVyY2lhbCBhdmVjIFdvdGMuIExlIHByb2pldCBuJ2VzdCBwYXMgaW1wYWN0w6kgbm9ybWFsZW1lbnQgZXQgamUgY29udGludWVyYWlzLCBhdmVjIG1lcyBqb3VldXJzLCBkZSBkw6l2ZWxvcHBlciBsZSBtb25kZSBkZSBEb3VhcmF0aWwuICBEZSBub3V2ZWF1eCBwZXJzb25uYWdlcyBzb250IGludMOpZ3LDqXMgZGFucyBsZSBiZXN0aWFpcmUuIGplIHZvdXMgaW52aXRlIGFpbnNpIMOgIGNoZXJjaGVyIDxhIGhyZWY9Ii9iZXN0aWFpcmUvZ3dpb24tZ29ybm9jIj5Hd2lvbjwvYT4sIDxhIGhyZWY9Ii9iZXN0aWFpcmUvbG9jaGV0b3MtdmxhdGNhbm8iPkzDtGNoZXRvczwvYT4sIDxhIGhyZWY9Ii9iZXN0aWFpcmUvbWFyZ3MtbWFlbmthbG9uIj5NYXJnczwvYT4sIDxhIGhyZWY9Ii9iZXN0aWFpcmUvcnVkb2xmLWZhcmVnIj5SdWRvbGY8L2E+LCA8YSBocmVmPSIvYmVzdGlhaXJlL3Nhd3JpbmEtc2VtaXJhbWlzIj5TYXdyaW5hPC9hPiwgPGEgaHJlZj0iL2Jlc3RpYWlyZS90aWJlcml1cy1kb24tYWxvbnpvIj5UaWJlcml1czwvYT4gJmFtcDsgPGEgaHJlZj0iL2Jlc3RpYWlyZS95YW4temluIj5ZYW4gWmluPC9hPiwgZGFucyBsYSBiYXJyZSBkZXMgdMOiY2hlcy48YnI+CkJvbiBqZXUuPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDE4IGbDqXZyaWVyIDIwMjE8L2VtPjwvcD4KPC9kaXY+CjxoMiBpZD0ibWlzZS1hLWpvdXItMTIiPk1pc2Ugw6Agam91ciAxMiA8YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI21pc2UtYS1qb3VyLTEyIj48aSBjbGFzcz0idi1pY29uIG5vdHJhbnNsYXRlIG1kaSBtZGktbGluay12YXJpYW50Ij48L2k+PC9hPjwvaDI+CjxwPkNldHRlIHNlbWFpbmUgYSDDqXTDqSBjaGFyZ8OpZSBldCBsYSBtaXNlIMOgIGpvdXIgZHUgc2l0ZSBlbiBhIHVuIHBldSBzb3VmZmVydC4gTGUgMjMgamFudmllciwgdW5lIHBhcnRpZSBkZSBEb3VhcmF0aWwgcydlc3QgZMOpcm91bMOpZSBhdmVjIG1vbiBncm91cGUgZGUgam91ZXVyIGhhYml0dWVsLiBDZWxhIGEgw6l0w6kgbCdvY2Nhc2lvbiBkJ2V4cGxvcmVyIGRlIG5vdXZlYXV4IG3DqWNhbmlzbWVzIGRlIGpldS4gTGUgYmVzdGlhaXJlIHZhIHMnZW5yaWNoaXIgZGVzIFBOSiBxdWkgYXBwYXJhaXNzZW50IGRhbnMgbGEgY2hyb25pcXVlIG1haXMgYXVzc2kgZGVzIFBKIHF1aSBzZXJvbnQgbWlzIMOgIGpvdXIgYXUgZnVyIGV0IMOgIG1lc3VyZSBkZSBsZXVyIHByb2dyZXNzaW9uLiBEZXMgZXhlbXBsZXMgc29udCBkaXNwb25pYmxlcyBkYW5zIGxlIGJlc3RpYWlyZSBhdmVjIGxhIGJlbGxlIDxhIGhyZWY9Ii9iZXN0aWFpcmUvbW9yd2VubmEtbW9pc2FuIj5Nb3J3ZW5hIE1vaXNhbjwvYT4gZXQgbGUgYmVhdSA8YSBocmVmPSIvYmVzdGlhaXJlL293YWluLW1hY2FybyI+T3dhaW4gTWFjYXJvPC9hPi4gTGUgdmlsbGFnZSBkZSA8YSBocmVmPSIvYXRsYXMtZHUtbW9uZGUvZG91YXJhdGlsL2Nhb2hheWRoYW4iPmNhb2hheWRoYW48L2E+IGEgw6l0w6kgZMOpdGFpbGzDqS48YnI+CkRlIG5vdXZlbGxlcyByw6hnbGVzIGRlIDxhIGhyZWY9Ii9wYXNzaW9uLWhvbm5ldXItZXQtaW50ZXJhY3Rpb25zLXNvY2lhbGVzIj5wYXNzaW9uLCBob25uZXVyICZhbXA7IGludGVyYWN0aW9ucyBzb2NpYWxlczwvYT4gc29udCBlbiBjb3VycyBkJ8OpbGFib3JhdGlvbi48YnI+CkJvbiBqZXUuPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDMwIGphbnZpZXIgMjAyMTwvZW0+PC9wPgo8L2Rpdj4KPGgyIGlkPSJtaXNlLWEtam91ci0xMSI+TWlzZSDDoCBqb3VyIDExIDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWlzZS1hLWpvdXItMTEiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+TGEgY29udmVyc2lvbiBkZXMgc29ydHMgY29udGludWUgZXQgYydlc3QgZMOpc29ybWFpcyAxODEgc29ydHMgcXVpIHNvbnQgZGlzcG9uaWJsZXMuIENlcnRhaW5zIGNob2l4IHNvbnQgZMOpbGljYXRzIGNhciBqZSBkb2lzIMOpdmluY2VyIGNlcnRhaW5zIHNvcnRzIGFtdXNhbnRzIG1haXMgcXVpIG5lIHNvbnQgcGFzIGRhbnMgbCdlc3ByaXQgZHUgbW9uZGUgZGUgRG91YXJhdGlsLiBVbiBub3V2ZWwgQXJjaMOpdHlwZSBlc3QgZMOpc29ybWFpcyBhdXNzaSBkaXNwb25pYmxlIDogTGUgSW9yLiBJbCBzJ2FnaXQgZCd1biBndWVycmllciBiZXJzZXJrIGR1IHBldXBsZSBtZWxkw6h0ZS4gQ2Ugc2VyYSB1biBhbGxpw6kgb3UgdW4gYWR2ZXJzYWlyZSByZWRvdXRhYmxlLjxicj4KQm9uIGpldS48L3A+CjxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgo8cD48ZW0+PHN0cm9uZz5PbGl2aWVyPC9zdHJvbmc+PC9lbT4sPGJyPgo8ZW0+bGUgMjAgamFudmllciAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTEwIj5NaXNlIMOgIGpvdXIgMTAgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci0xMCI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5KJ2FpIHJham91dMOpIHF1ZWxxdWVzIHNvcnRzIGF1eCBzaXRlIHBvdXIgdW4gdG90YWwgZMOpc29ybWFpcyBkZSA3NyBldCB0cm9pcyBub3V2ZWxsZXMgYsOqdGVzIChsZSBNYWxhYWssIGxlIE1hbmRyaWxsIGRlcyBNb250YWduZXMgJmFtcDsgbCdvdXJzIGNoYXJvZ25hcmQpIHBvdXIgdW4gdG90YWwgZGUgOTcgYWR2ZXJzYWlyZXMuCkJvbiBqZXUuPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDE1IGphbnZpZXIgMjAyMTwvZW0+PC9wPgo8L2Rpdj4KPGgyIGlkPSJtaXNlLWEtam91ci05Ij5NaXNlIMOgIGpvdXIgOSA8YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI21pc2UtYS1qb3VyLTkiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+TGUgc2l0ZSBjb250aW51ZSBwcm9ncmVzc2l2ZW1lbnQgZGUgcydlbnJpY2hpci4gTGVzIHLDqGdsZXMgZGVzIHNvcnRzIG9udCDDqXTDqSBwcsOpY2lzw6llcy4gRMOpc29ybWFpcywgNTkgc29ydHMgc29udCBjb252ZXJ0aXMgcG91ciBsZXMgcmF0cyBkZSBiaWJsaW90aMOocXVlLiBQb3VyIGxlcyBkw6lmaXMsIGMnZXN0IGF1c3NpIDk0IGFkdmVyc2FpcmVzIChkZXMgYsOqdGVzIGV0IGRlcyBtb25zdHJlcyBwb3VyIGxlIG1vbWVudCkgcXVpIG9udCDDqXTDqSBjb252ZXJ0aXMgYXZlYyBsJ2Fqb3V0IHBvdXIgY2VydGFpbnMgZGUgZGVzY3JpcHRpb25zLjxicj4KQydlc3QgYXVzc2kgbCdham91dCBkZSBsYSBjYXJ0ZSBkdSBtb25kZSBkZSBEb3VhcmF0aWwgOiBlbiA4SyBzJ2lsIHZvdXMgcGxhaXQuIENldHRlIGNhcnRlIGVzdCBhbWVuw6llIMOgIMOqdHJlIGNvbXBsw6l0w6llLCBlbGxlIHNlcmEgbWlzZSDDoCBqb3VyIHLDqWd1bGnDqHJlbWVudC4KQSBiaWVudMO0dCBwb3VyIHBsdXMgZGUgbm91dmVsbGVzIGV0IHByZW5leiBzb2luIGRlIHZvdXMuPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDcgamFudmllciAyMDIxPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTgiPk1pc2Ugw6Agam91ciA4IDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWlzZS1hLWpvdXItOCI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5FbiBjZSBkw6lidXQgZCdhbm7DqWUsIGxlcyBib25uZXMgcsOpc29sdXRpb25zIHNvbnQgZGUgbWlzZXMuIEVuIGNlIHNlbnMsIGonYWkgYmllbiBsJ2ludGVudGlvbiBkZSBjb250aW51ZXIgw6AgbSdpbnZlc3RpciBwb3VyIGNlIHNpdGUsIHBvdXIgbWVzIGpvdWV1cnMgZXQgcG91ciB0b3V0ZXMgbGVzIHBlcnNvbm5lcyBxdWkgcG91cnJhaWVudCDDqnRyZSBpbnTDqXJlc3PDqWVzIHBhciBsZSBtb25kZSBkZSBEb3VhcmF0aWwuIEplIGRvaXMgYXVzc2kgdGVybWluZXIgbGUgNMKwIHJvbWFuIGRlIERvdWFyYXRpbC4gSidhdmFpcyByZXByaXMgbCfDqWNyaXR1cmUgZGUgY2UgcHJvamV0IHF1aSBhIHVuZSBhbGx1cmUgZGUgc2VycGVudCBkZSBtZXIgKG9uIGVuIHBhcmxlIG1haXMgb24gbmUgbGUgdm9pdCBqYW1haXMpIGV0IGplIGRldmFpcyB0ZXJtaW5lciBmaW4gMjAyMC4gQ2Ugc2VyYSBwb3VyIDIwMjEuCkNlIG1hdGluLCBzdXIgbGVzIGV4cGxpY2F0aW9ucyBqdWRpY2lldXNlcyBkJ0VtLXNxdWFyZWQsIGonYWkgcHUgcsOpZ2xlciB1biBwb2ludCBibG9xdWFudCBwb3VyIGxlIGJlc3RpYWlyZS4gTGVzIGNyw6lhdHVyZXMgdm9udCBkb25jIGNvbW1lbmNlciDDoCBhcnJpdmVyIHN1ciBsZSBzaXRlIGV0IGRlIG5vdXZlYXV4IHNvcnRzIHNlcm9udCBham91dMOpcyBwcm9jaGFpbmVtZW50LgpBIGJpZW50w7R0LjwvcD4KPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CjxwPjxlbT48c3Ryb25nPk9saXZpZXI8L3N0cm9uZz48L2VtPiw8YnI+CjxlbT5sZSA3IGphbnZpZXIgMjAyMTwvZW0+PC9wPgo8L2Rpdj4KPGgyIGlkPSJtaXNlLWEtam91ci03Ij5NaXNlIMOgIGpvdXIgNyA8YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI21pc2UtYS1qb3VyLTciPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+TGUgcHJvamV0IGRlIGNlIHNpdGUgZXN0IGVuY29yZSBqZXVuZSBtYWlzIHBlcm1ldCBkw6lqw6AgZCfDqnRyZSB1dGlsaXPDqS4gSmUgcmVtZXJjaWUgZW5jb3JlIEVtLXNxdWFyZWQgcG91ciBsZSB0cmF2YWlsIGVmZmVjdHXDqSBldCBqZSB2b3VzIGludml0ZSDDqXZpZGVtbWVudCDDoCB2aXNpdGVyIGxlIHNpdGUgb3JpZ2luYWwgPGEgaHJlZj0iaHR0cHM6Ly9oZXJvcy1ldC1kcmFnb25zLmZyLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+SMOpcm9zICZhbXA7IERyYWdvbnMgRFJTPE91dGJvdW5kTGluay8+PC9hPi48YnI+CkxlIHNpdGUgZGUgRG91YXJhdGlsIHMnZXN0IMOpdG9mZsOpIGRlIG5vbWJyZXV4IEFyY2jDqXR5cGVzIGV0IGRlIFNvcnRzLiBDaGFxdWUgbm91dmVsbGUgcnVicmlxdWUgZXN0IGwnb2NjYXNpb24gZGUgZmFpcmUgZGVzIGFqdXN0ZW1lbnRzLCBkZXMgbW9kaWZpY2F0aW9ucyBhdXNzaSBkYW5zIGxlIGNvZGUgZGVzIHBhZ2VzLiBKZSByZW1lcmNpZSBkJ2FpbGxldXJzIHRvdWpvdXJzIGxlIG3Dqm1lLCAgRW0tc3F1YXJlZCBwb3VyIGxlIHN1cHBvcnQgcsOpZ3VsaWVyIHF1J2lsIG0nYWNjb3JkZSBwb3VyIGNvbXBlbnNlciBsZXMgbGFjdW5lcyBpbmZvcm1hdGlxdWVzLjxicj4KTGEgcHJvY2hhaW5lIGdyYW5kZSDDqXRhcGUgZXN0IGxhIG1vZGlmaWNhdGlvbiBkdSBiZXN0aWFpcmUsIGNhciBsZXMgcsOoZ2xlcyBtb2RpZmllbnQgcXVlbHF1ZXMgbcOpY2FuaXNtZXMgZXQgamUgZG9pcyBwb3VyIGNlbGEgdW5lIG5vdXZlbGxlIGZvaXMgcmV0b3VybmVyIGRhbnMgbGUgY29kZS4gSmUgdm91cyBzb3VoYWl0ZSBkb25jIHVuZSBib25uZSBmaW4gZCdhbm7DqWUsIGF2ZWMgcGxlaW4gZCdlc3DDqXJhbmNlIHBvdXIgbGEgbm91dmVsbGUgYW5uw6llIHF1aSBzZSBwcsOpcGFyZS4gQSBsJ2FubsOpZSBwcm9jaGFpbmUuPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDMxIGTDqWNlbWJyZSAyMDIwPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTYiPk1pc2Ugw6Agam91ciA2IDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWlzZS1hLWpvdXItNiI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5DZXMgZGVybmllcnMgam91cnMgb250IMOpdMOpIGwnb2NjYXNpb24gZCdham91dGVyIGRlcyA8Um91dGVyTGluayB0bz0iL2FyY2hldHlwZXMvIj5hcmNow6l0eXBlczwvUm91dGVyTGluaz4gc3VyIGxlIHNpdGUgKEFzdGFydGVzLCBCaGFuZXIsIEJoZWdlbG0gJmFtcDsgR3d5bHdpcikuIERhbnMgbGEgcnVicmlxdWUgPFJvdXRlckxpbmsgdG89Ii9ncmltb2lyZS8iPmdyaW1vaXJlPC9Sb3V0ZXJMaW5rPiBvbnQgw6l0w6kgYWpvdXTDqXMgdHJlaXplIG5vdXZlYXV4IHNvcnRzIG1pbmV1cnMgb3JpZ2luYXV4IGludmVudMOpcyBwYXIgRWxyaWMgKEFpciBtYWdpcXVlLCBhcHBlbCBkZSBsYSBwbHVpZSwgYXRtb3NwaMOocmUgw6lsZWN0cmlxdWUsIGF0bW9zcGjDqHJlIHZlcnR1ZXVzZSwgYm91c3NvbGUgbWVudGFsZSwgY2hhcmdlIGQnw6lww6llLCBjb3VwIGRlIHBvaW5nIGRlIGN1aXZyZSwgZMOpcGVybGFuY2UsIG1haW4gYXUgZmVyIGJsYW5jLCBtYWluIGRlIGwnYWlyLCBtaXJvaXIgZHUgRG91YXJnd2FyLCBwb2luZyBwdXJpZmljYXRldXIgJmFtcDsgdG9yY2hlKS4gRW5maW4sIHVuZSBydWJyaXF1ZSA8Um91dGVyTGluayB0bz0iL2Nocm9uaXF1ZXMvIj5jaHJvbmlxdWVzPC9Sb3V0ZXJMaW5rPiBhIMOpdMOpIGFqb3V0w6llIGV0IHJhY29udGUgbGVzIGF2ZW50dXJlcyBkZXMgYXZlbnR1cmllcnMgcXVpIHBhcmNvdXJlbnQgYWN0dWVsbGVtZW50IGxlIG1vbmRlIGRlIERvdWFyYXRpbCBkYW5zIHVuZSBwYXJ0aWUgbWHDrnRyaXPDqWUgcGFyIHZvdHJlIHNlcnZpdGV1ci48L3A+CjxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgo8cD48ZW0+PHN0cm9uZz5PbGl2aWVyPC9zdHJvbmc+PC9lbT4sPGJyPgo8ZW0+bGUgMjIgZMOpY2VtYnJlIDIwMjA8L2VtPjwvcD4KPC9kaXY+CjxoMiBpZD0ibWlzZS1hLWpvdXItNSI+TWlzZSDDoCBqb3VyIDUgPGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaXNlLWEtam91ci01Ij48aSBjbGFzcz0idi1pY29uIG5vdHJhbnNsYXRlIG1kaSBtZGktbGluay12YXJpYW50Ij48L2k+PC9hPjwvaDI+CjxwPkxlcyBydWJyaXF1ZSA8YSBocmVmPSIvdm9pZXMiPkxlcyB0cm9pcyBWb2llczwvYT4gc29udCBtYWludGVuYW50IGNvbXBsw6h0ZXMgZXQgbGEgZGVzY3JpcHRpb24gZGVzIDxhIGhyZWY9Ii9hcmNoZXR5cGVzIj5BcmNow6l0eXBlczwvYT4gYSBkw6lidXTDqSBwb3VyIHVuZSBwbHVzIGdyYW5kZSBwZXJzb25uYWxpc2F0aW9uIGRlcyBwZXJzb25uYWdlcyBhdS1kZWzDoCBkdSBuaXZlYXUgMy4gR2xvYmFsZW1lbnQsIHRvdXRlIGxhIHNlY3Rpb24gam91ZXVyIGVzdCBkw6lzb3JtYWlzIHV0aWxpc2FibGUgZXQgZGVzIMOpbMOpbWVudHMgY29tbWUgbGVzIHNvcnRzIHNlcm9udCBham91dMOpZXMgYXUgZnVyIGV0IMOgIG1lc3VyZS4gSWwgYSBmYWxsdXQgZmFpcmUgcXVlbHF1ZXMgYW3DqW5hZ2VtZW50cyBzdXIgbGUgc2l0ZSwgcGFydGljdWxpw6hyZW1lbnQgY29uY2VybmFudCBsZSBncmltb2lyZSBldCBqZSBuJ3kgc2VyYWlzIHBhcyBhcnJpdsOpIHNhbnMgbCdhaWRlIGR1IGNyw6lhdGV1ciBkZSBjZSBzaXRlIEVtLVNxdWFyZWQsIGwnYXV0ZXVyIGR1IHNpdGUgSMOpcm9zICZhbXA7IERyYWdvbnMgRFJTIGh0dHBzOi8vaGVyb3MtZXQtZHJhZ29ucy5mciAuIElsIG0nYSBhaWTDqSBzdXIgbGUgcGxhbiB0ZWNobmlxdWUgZXQgamUgcHJvZml0ZSBwb3VyIGxlIHJlbWVyY2llciBkZSBzb24gdGVtcHMgZXQgZGUgc2EgcGF0aWVuY2UuPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDIwIGTDqWNlbWJyZSAyMDIwPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTQiPk1pc2Ugw6Agam91ciA0IDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWlzZS1hLWpvdXItNCI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5MYSBydWJyaXF1ZSA8YSBocmVmPSIvcGVyc29ubmFsaXRlLWV0LWhpc3RvcmlxdWUiPnBlcnNvbm5hbGl0w6lzICZhbXA7IGhpc3RvcmlxdWVzPC9hPiBlc3QgbWFpbnRlbmFudCBjb21wbMOodGUgYXZlYyBsJ2Fqb3V0IGRlOiBNZXJjZW5haXJlLCBNaWxpdGFpcmUsIE1pc8OpcmV1eCwgTm9ibGVzc2UgZCfDqXDDqWUsIE5vYmxlc3NlIGRlIHJvYmUsIE9mZmNpZXIsIE9ycGhlbGluLCBQYWxlZnJlbmllciwgUGF0cm91aWxsZXVyLCBQcsOpY2VwdGV1ciwgUGlsbGV1ciBkZSBydWluZXMsIFBpcmF0ZXMsIFByw6lkaWNhdGV1ciwgUmVib3V0ZXV4LCBSZXBlbnRpLCBTYWx0aW1iYW5xdWUsIFNhbmctYmxldSwgU2VydmV1ciwgU29saXRhaXJlLCBUcmFwcGV1ciwgVmFnYWJvbmQsIFZpbGxhZ2VvaXMgZXQgdm9sZXVyIMOgIGxhIHRpcmUuCkxhIHJ1YnJpcXVlIDxhIGhyZWY9Ii92b2llcyI+TGVzIHRyb2lzIFZvaWVzPC9hPnByw6lzZW50ZSBsZXMgdm9pZXMgZGUgZMOpcGFydCBkZXMgcGVyc29ubmFnZXMgcXVpIHZvbnQgcHJvZm9uZMOpbWVudCBpbmZsdWVyIHN1ciBsZSBzdHlsZSBkZSBqZXUgZHUgcGVyc29ubmFnZSBhdmVjIGxlIGNob2l4IGRlIHNvbiBBcmNow6l0eXBlIGF1IG5pdmVhdSAzLjwvcD4KPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CjxwPjxlbT48c3Ryb25nPk9saXZpZXI8L3N0cm9uZz48L2VtPiw8YnI+CjxlbT5sZSAxMyBkw6ljZW1icmUgMjAyMDwvZW0+PC9wPgo8L2Rpdj4KPGgyIGlkPSJtaXNlLWEtam91ci0zIj5NaXNlIMOgIGpvdXIgMyA8YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI21pc2UtYS1qb3VyLTMiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+TGEgcnVicmlxdWUgPGEgaHJlZj0iL3BlcnNvbm5hbGl0ZS1ldC1oaXN0b3JpcXVlIj5wZXJzb25uYWxpdMOpcyAmYW1wOyBoaXN0b3JpcXVlczwvYT4gY29udGludWUgZGUgcyfDqXRvZmZlciBhdmVjIGwnYWpvdXQgZGUgOiBCYW5kaXQgZGUgZ3JhbmQgY2hlbWluLCBCw6J0YXJkLCBkdSBCcmlnYW5kLCBDYW1icmlvbGV1ciwgQ2hhc3NldXIsIENvbHBvcnRldXIsIENvbW1lcsOnYW50LCBDdWlzaW5pZXIsIENyYXB1bGUsIETDqXZvdCwgRWNsYWlyZXVyPGJyPgpFcm1pdGUsIEVydWRpdCwgRXNjcm9jLCBFeHBsb3JhdGV1ciwgR2FyZGUsIEdhcmRpZW4gdHJpYmFsLCBHZW5zIGR1IHZveWFnZSwgR3VpZGUsIEhvbW1lIGRlIGxvaSwgSG9tbWUtbcOpZGVjaW5lLCBJbml0acOpLCBJbnF1aXNpdGV1ciwgSXRpbsOpcmFudCwgSm91cm5hbGllciwgSnVyaXN0ZSwgTGFib3VyZXVyLCBMaW1pZXIsIE1hbm91dnJpZXIsIE1hdGVsb3QsIE3DqWRlY2luLCBNZW1icmUgZGUgZ3VpbGRlLCBNZW5kaWFudC4KTGEgcnVicmlxdWUgdmEgw6p0cmUgcmFwaWRlbWVudCBjb21wbMOpdMOpZSBldCBmaW5hbGlzw6llLjwvcD4KPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CjxwPjxlbT48c3Ryb25nPk9saXZpZXI8L3N0cm9uZz48L2VtPiw8YnI+CjxlbT5sZSAxMiBkw6ljZW1icmUgMjAyMDwvZW0+PC9wPgo8L2Rpdj4KPGgyIGlkPSJtaXNlLWEtam91ci0yIj5NaXNlIMOgIGpvdXIgMiA8YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI21pc2UtYS1qb3VyLTIiPjxpIGNsYXNzPSJ2LWljb24gbm90cmFuc2xhdGUgbWRpIG1kaS1saW5rLXZhcmlhbnQiPjwvaT48L2E+PC9oMj4KPHA+TGUgc2l0ZSBzZSBtZXQgbGVudGVtZW50IGVuIHBsYWNlLiBMZSBzcHJlbWnDqHJlcyBwYXJ0aWUgY29uY2VybmFudCBsYSBjcsOpYXRpb24gZHUgcGVyc29ubmFnZSwgYXUgZGVsw6AgZHUgbml2ZWF1IDEgc29udCBkaXNwb25pYmxlcy4gSmUgdHJhdmFpbGxlIGFjdHVlbGxlbWVudCBzdXIgbGEgcGFydGllIGRlcyA8YSBocmVmPSIvcGVyc29ubmFsaXRlLWV0LWhpc3RvcmlxdWUiPnBlcnNvbm5hbGl0w6lzICZhbXA7IGhpc3RvcmlxdWVzPC9hPi4gT250IMOpdMOpIGFqb3V0w6lzIGwnQXJ0aXNhbiwgbCdhcnRpc2FuIGxvY2FsIGV0IGwnYXNzYXNzaW4uPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDExIGTDqWNlbWJyZSAyMDIwPC9lbT48L3A+CjwvZGl2Pgo8aDIgaWQ9Im1pc2UtYS1qb3VyLTEiPk1pc2Ugw6Agam91ciAxIDxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWlzZS1hLWpvdXItMSI+PGkgY2xhc3M9InYtaWNvbiBub3RyYW5zbGF0ZSBtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPjwvYT48L2gyPgo8cD5Wb2ljaSBxdWUgamUgbWUgbGFuY2UgZGFucyBjZSBncmFuZCBwcm9qZXQgZGUgbWV0dHJlIGVuIGxpZ25lIGxlcyByw6hnbGVzIGR1IGpldSBkZSBEb3VhcmF0aWwuIEMnZXN0IHBvdXIgbW9pIHVuIGTDqWZpIHRlY2huaXF1ZSBldCBsJ29jY2FzaW9uIGRlIHBhcnRhZ2VyIG1vbiBqZXUgZXQgbW9uIHVuaXZlcnMuIFRvdXQgZCdhYm9yZCwgamUgZG9pcyBwcsOpY2lzZXIgcXVlIGxlIGpldSBEb3VhcmF0aWwgZXN0IGwnYWRhcHRhdGlvbiBkZSBtZXMgcm9tYW5zIERvdWFyYXRpbCBldCBkZSBzb24gdW5pdmVycyBkZSBqZXUuIElsIGVzdCBiYXPDqSBzdXIgbGUgY29ycHVzIGRlIERENSBldCBkZSBzYSB2ZXJzaW9uIGZyYW7Dp2Fpc2UgSCZhbXA7RC4gQ2VwZW5kYW50LCBkZSBwcm9mb25kIGNoYW5nZW1lbnQgZHUgc3lzdMOobWUgZXQgZGVzIG3DqWNhbmlxdWVzIGRlIGpldSBuZSBwZXJtZXQgcGFzIGRlIHJlbmRyZSBjb21wYXRpYmxlIGF2ZWMgY2UgcXVpIGV4aXN0ZSBkw6lqw6AuIEplIGRvaXMgZG9uYyBzdWl2cmUgbW9uIHByb3ByZSBjaGVtaW4gZXQgcmVub25jZXIgw6AgdW5lIGNvbW11bmF1dMOpIHN5bXBhdGhpcXVlIGV0IGFjdGl2ZSBxdWkgZXhpc3RlIGTDqWrDoC4gSmUgbmUgcHLDqXRlbmQgcGFzIGludmVudGVyIHVuIHN5c3TDqG1lIG9yaWdpbmFsIGNhciBjJ2VzdCBsZSByw6lzdWx0YXQgZGUgbW9uIGV4cMOpcmllbmNlIGRlIGpvdWV1ciBldCBkZXMgamV1eCBxdWUgaidhaSBwdSBwcmF0aXF1ZXIgb3UgbGlyZTogcm9sZW1hc3RlciwgRCZhbXA7RCwgUGVuZHJhZ29uLCBIJmFtcDtELCBMZXMgNSByb3lhdW1lcyBldCBhdXRyZXMuCkNlIHNpdGUgZXN0IHN1cnRvdXQgcG9zc2libGUgZ3LDomNlIGF1IHRyYXZhaWwgZCdFbS1zcXVhcmVkIHF1aSBsJ2EgY29uc3RydWl0IGRlIHRvdXRlcyBwacOoY2VzLCBqZSBuZSBmYWlzIHF1ZSBtb2RpZmllciBsYSBzdHJ1Y3R1cmUuPC9wPgo8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KPHA+PGVtPjxzdHJvbmc+T2xpdmllcjwvc3Ryb25nPjwvZW0+LDxicj4KPGVtPmxlIDggZMOpY2VtYnJlIDIwMjA8L2VtPjwvcD4KPC9kaXY+Cjwvdi1jb2w+Cjwvdi1yb3c+CjwvZGl2Pgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}