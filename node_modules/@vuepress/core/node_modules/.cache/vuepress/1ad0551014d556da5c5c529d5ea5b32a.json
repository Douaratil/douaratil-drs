{"remainingRequest":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js??ref--1-1!/home/olivier/Documents/douaratil-drs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/olivier/Documents/douaratil-drs/docs/personnalite-et-historique/README.md?vue&type=template&id=763d202a&","dependencies":[{"path":"/home/olivier/Documents/douaratil-drs/docs/personnalite-et-historique/README.md","mtime":1634294763329},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
<ContentSlotsDistributor :slot-key="$parent.slotKey"><h1 id="personnalite-historique">Personnalité &amp; Historique <a class="header-anchor" href="#personnalite-historique"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h1>
<h2 id="alignement">Alignement <a class="header-anchor" href="#alignement"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p>Une créature typique de l'univers du jeu a un alignement qui permet de donner une idée générale de son point de vue moral et de ce qui dicte son attitude. L'alignement est une combinaison de deux facteurs : l'un identifie la morale (Bon, Mauvais ou Neutre) et l'autre son positionnement par rapport à la société et à l'ordre (Loyal, Chaotique ou Neutre). Il existe neuf combinaisons de ces deux critères, et donc neuf alignements possibles.</p>
<p>Voici ci-dessous un bref résumé du comportement typique que l'on peut attendre d'une créature en fonction de son alignement. Chaque individu peut avoir un comportement très différent des exemples proposés. Il se trouve en effet peu de créatures qui adhèrent et correspondent parfaitement à leur alignement.</p>
<h3 id="loyal-bon-lb">Loyal Bon (LB). <a class="header-anchor" href="#loyal-bon-lb"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>On peut compter sur cet alignement pour faire ce qui est considéré comme bien en société.</p>
<h3 id="neutre-bon-nb">Neutre Bon (NB). <a class="header-anchor" href="#neutre-bon-nb"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Ceux de cet alignement font de leur mieux pour aider les autres en fonction de leurs besoins.</p>
<h3 id="chaotique-bon-cb">Chaotique Bon (CB). <a class="header-anchor" href="#chaotique-bon-cb"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Ceux de cet alignement agissent en suivant leur conscience, sans tenir compte des attentes des autres, tout en conservant un grand respect pour la vie.</p>
<h3 id="loyal-neutre-ln">Loyal Neutre (LN). <a class="header-anchor" href="#loyal-neutre-ln"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Ces individus sont respectueux de la loi, d'une tradition ou de leur code de conduite personnel. C'est le cas de nombreux moines et magiciens.</p>
<h3 id="neutre-n">Neutre (N). <a class="header-anchor" href="#neutre-n"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>C'est l'alignement de ceux qui préfèrent se tenir à distance des dilemmes moraux et n'aiment pas prendre parti. Ils font ce qui leur paraît approprié sur le moment. La plupart des druides et de nombreux humains sont d'alignement Neutre.</p>
<h3 id="chaotique-neutre-cn">Chaotique Neutre (CN). <a class="header-anchor" href="#chaotique-neutre-cn"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Ceux de cet alignement écoutent leurs désirs et font passer leur propre liberté avant tout. On trouve parmi ceux d'alignement Chaotique Neutre de nombreux barbares et roublards et quelques bardes.</p>
<h3 id="neutre-mauvais-nm">Neutre Mauvais (NM) <a class="header-anchor" href="#neutre-mauvais-nm"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>C'est l'alignement des créatures qui font ce qu'elles veulent tant qu'elles peuvent s'en tirer.</p>
<h3 id="chaotique-mauvais-cm">Chaotique Mauvais (CM) <a class="header-anchor" href="#chaotique-mauvais-cm"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Ces personnes n'hésitent pas à être violentes de manière arbitraire. Elles se laissent mener par leur cupidité, leur haine ou leur soif de sang.</p>
<h2 id="langues">Langues <a class="header-anchor" href="#langues"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p>L'ethnie d'un personnage détermine la langue qu'il parle par défaut et son historique peut lui permettre de parler une ou deux langues supplémentaires au choix. Ces langues doivent être notées sur la fiche de personnage.</p>
<p>Choisissez vos langues dans le tableau ci-dessous, ou une langue couramment utilisée dans la campagne à laquelle vous participez. Si votre MJ vous en donne la permission, vous pouvez choisir à la place une langue sacrée ou un langage secret, comme l'argot des voleurs.</p>
<p>Certaines de ces langues sont en réalité une famille de langues comportant plusieurs dialectes.</p>
<h3 id="langues-imperiales">Langues impériales <a class="header-anchor" href="#langues-imperiales"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<table>
<thead>
<tr>
<th style="text-align:left">Langue</th>
<th style="text-align:left">Parlée par...</th>
<th style="text-align:left">Alphabet</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>Alcane</strong></td>
<td style="text-align:left">Ethnies impériales</td>
<td style="text-align:left">Alcath</td>
</tr>
<tr>
<td style="text-align:left"><strong>Avalinae</strong></td>
<td style="text-align:left">Peuple Avalin</td>
<td style="text-align:left">Alcath</td>
</tr>
<tr>
<td style="text-align:left"><strong>Alcante</strong></td>
<td style="text-align:left">Peuple Alycante</td>
<td style="text-align:left">Alcath</td>
</tr>
<tr>
<td style="text-align:left"><strong>Courdote</strong></td>
<td style="text-align:left">Peuple Courdo</td>
<td style="text-align:left">Alcath</td>
</tr>
<tr>
<td style="text-align:left"><strong>Cyrynith</strong></td>
<td style="text-align:left">Peuple Lacède</td>
<td style="text-align:left">Cyrynith</td>
</tr>
<tr>
<td style="text-align:left"><strong>Athos</strong></td>
<td style="text-align:left">Peuple Lacède</td>
<td style="text-align:left">Cyrynith</td>
</tr>
<tr>
<td style="text-align:left"><strong>Mécède</strong></td>
<td style="text-align:left">Peuple Lacède</td>
<td style="text-align:left">Cyrynith</td>
</tr>
<tr>
<td style="text-align:left"><strong>Thessal</strong></td>
<td style="text-align:left">Peuple Lacède</td>
<td style="text-align:left">Cyrynith</td>
</tr>
<tr>
<td style="text-align:left"><strong>Saramath</strong></td>
<td style="text-align:left">Peuple Saramath</td>
<td style="text-align:left">Saramath</td>
</tr>
</tbody>
</table>
<h3 id="langues-nordiques">Langues Nordiques <a class="header-anchor" href="#langues-nordiques"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<table>
<thead>
<tr>
<th style="text-align:left">Langue</th>
<th style="text-align:left">Parlée par...</th>
<th style="text-align:left">Alphabet</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>Weslèdh</strong></td>
<td style="text-align:left">Ethnies Nordiques</td>
<td style="text-align:left">Weslèdh</td>
</tr>
<tr>
<td style="text-align:left"><strong>Khern</strong></td>
<td style="text-align:left">Peuple khernaë</td>
<td style="text-align:left">Weslèdh</td>
</tr>
<tr>
<td style="text-align:left"><strong>Bena'ch</strong></td>
<td style="text-align:left">Peuple khernaë</td>
<td style="text-align:left">Weslèdh</td>
</tr>
<tr>
<td style="text-align:left"><strong>Mor'vron</strong></td>
<td style="text-align:left">Peuple khernaë</td>
<td style="text-align:left">Weslèdh</td>
</tr>
<tr>
<td style="text-align:left"><strong>Mèlde</strong></td>
<td style="text-align:left">Peuple Meldète</td>
<td style="text-align:left">Weslèdh</td>
</tr>
<tr>
<td style="text-align:left"><strong>Brèdète</strong></td>
<td style="text-align:left">Peuple Meldète</td>
<td style="text-align:left">Weslèdh</td>
</tr>
<tr>
<td style="text-align:left"><strong>Dorodane</strong></td>
<td style="text-align:left">Peuple Meldète</td>
<td style="text-align:left">Weslèdh</td>
</tr>
<tr>
<td style="text-align:left"><strong>Mèldon</strong></td>
<td style="text-align:left">Peuple Meldète</td>
<td style="text-align:left">Weslèdh</td>
</tr>
<tr>
<td style="text-align:left"><strong>Nordhème</strong></td>
<td style="text-align:left">Peuple Meldète</td>
<td style="text-align:left">Weslèdh</td>
</tr>
<tr>
<td style="text-align:left"><strong>Melg</strong></td>
<td style="text-align:left">Peuple Melg</td>
<td style="text-align:left">Bergaf</td>
</tr>
<tr>
<td style="text-align:left"><strong>Draükarn</strong></td>
<td style="text-align:left">Peuple Melg</td>
<td style="text-align:left">Bergaf</td>
</tr>
<tr>
<td style="text-align:left"><strong>Welkarn</strong></td>
<td style="text-align:left">Peuple Melg</td>
<td style="text-align:left">Bergaf</td>
</tr>
<tr>
<td style="text-align:left"><strong>Znorkarn</strong></td>
<td style="text-align:left">Peuple Melg</td>
<td style="text-align:left">Bergaf</td>
</tr>
</tbody>
</table>
<h3 id="langues-asiatiques">Langues Asiatiques <a class="header-anchor" href="#langues-asiatiques"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<table>
<thead>
<tr>
<th style="text-align:left">Langue</th>
<th style="text-align:left">Parlée par...</th>
<th style="text-align:left">Alphabet</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>Minghour</strong></td>
<td style="text-align:left">Ethnies Asiatiques</td>
<td style="text-align:left">Mingath</td>
</tr>
<tr>
<td style="text-align:left"><strong>Oynote</strong></td>
<td style="text-align:left">Peuple Oynour</td>
<td style="text-align:left">Oynote</td>
</tr>
<tr>
<td style="text-align:left"><strong>Ygouthy</strong></td>
<td style="text-align:left">Peuple Ygouth</td>
<td style="text-align:left">Ygh</td>
</tr>
<tr>
<td style="text-align:left"><strong>Yotaï</strong></td>
<td style="text-align:left">Peuple Yotakaï</td>
<td style="text-align:left">Yohaï</td>
</tr>
<tr>
<td style="text-align:left"><strong>Athaï</strong></td>
<td style="text-align:left">Peuple Yotakaï</td>
<td style="text-align:left">Yohaï</td>
</tr>
<tr>
<td style="text-align:left"><strong>Yoth</strong></td>
<td style="text-align:left">Peuple Meldète</td>
<td style="text-align:left">Yohaï</td>
</tr>
</tbody>
</table>
<h3 id="langues-des-royaumes-de-shahia">Langues des Royaumes de Shahia <a class="header-anchor" href="#langues-des-royaumes-de-shahia"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<table>
<thead>
<tr>
<th style="text-align:left">Langue</th>
<th style="text-align:left">Parlée par...</th>
<th style="text-align:left">Alphabet</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>Shahim</strong></td>
<td style="text-align:left">Ethnies Shahimas</td>
<td style="text-align:left">Shahiate</td>
</tr>
<tr>
<td style="text-align:left"><strong>Assyrhiote</strong></td>
<td style="text-align:left">Peuple Assyrhim</td>
<td style="text-align:left">Syride</td>
</tr>
<tr>
<td style="text-align:left"><strong>Assyrith</strong></td>
<td style="text-align:left">Peuple Assyrhim</td>
<td style="text-align:left">Syride</td>
</tr>
<tr>
<td style="text-align:left"><strong>Cyrènide</strong></td>
<td style="text-align:left">Peuple Assyrhim</td>
<td style="text-align:left">Syride</td>
</tr>
<tr>
<td style="text-align:left"><strong>Syrioth</strong></td>
<td style="text-align:left">Peuple Assyrhim</td>
<td style="text-align:left">Syride</td>
</tr>
<tr>
<td style="text-align:left"><strong>Lassym</strong></td>
<td style="text-align:left">Peuple Lassymide</td>
<td style="text-align:left">Lassyth</td>
</tr>
<tr>
<td style="text-align:left"><strong>Shèmide</strong></td>
<td style="text-align:left">Peuple Shème</td>
<td style="text-align:left">Shèm</td>
</tr>
<tr>
<td style="text-align:left"><strong>Ptolémique</strong></td>
<td style="text-align:left">Peuple Ptolème</td>
<td style="text-align:left">Ptolh</td>
</tr>
</tbody>
</table>
<h3 id="langues-sacrees-anciennes-et-secretes">Langues sacrées, anciennes et secrètes <a class="header-anchor" href="#langues-sacrees-anciennes-et-secretes"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<table>
<thead>
<tr>
<th style="text-align:left">Langue</th>
<th style="text-align:left">Parlée par...</th>
<th style="text-align:left">Alphabet</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>-</strong></td>
<td style="text-align:left">Bhegelm</td>
<td style="text-align:left">Omath</td>
</tr>
<tr>
<td style="text-align:left"><strong>-</strong></td>
<td style="text-align:left">Drodan</td>
<td style="text-align:left">Oghen</td>
</tr>
<tr>
<td style="text-align:left"><strong>-</strong></td>
<td style="text-align:left">Peuple Melg</td>
<td style="text-align:left">Holtar</td>
</tr>
<tr>
<td style="text-align:left"><strong>-</strong></td>
<td style="text-align:left">Mages, Sorcer</td>
<td style="text-align:left">Magus</td>
</tr>
<tr>
<td style="text-align:left"><strong>Nayanide</strong></td>
<td style="text-align:left">Nayane</td>
<td style="text-align:left">Naya</td>
</tr>
<tr>
<td style="text-align:left"><strong>Selmh</strong></td>
<td style="text-align:left">Selmonite</td>
<td style="text-align:left">Selmh</td>
</tr>
<tr>
<td style="text-align:left"><strong>Sogh</strong></td>
<td style="text-align:left">Peuple Sooghaï</td>
<td style="text-align:left">-</td>
</tr>
</tbody>
</table>
<h2 id="inspiration">Inspiration <a class="header-anchor" href="#inspiration"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p>L'inspiration est une règle que le Narrateur peut utiliser pour récompenser un joueur qui interprète son personnage de manière particulièrement juste, en restant fidèle à ses traits de personnalité, ses Idéaux, ses liens et ses défauts. L'inspiration vous permet par exemple d'exploiter la compassion dont fait preuve votre personnage pour les plus démunis pour avoir un ascendant lors d'une négociation avec le prince mendiant, ou encore d'utiliser votre promesse de défendre votre village natal pour vous délivrer des effets d'un sort qui vous a été lancé.</p>
<h3 id="gagner-de-l-inspiration">Gagner de l'inspiration <a class="header-anchor" href="#gagner-de-l-inspiration"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Votre Narrateur a de nombreuses excuses pour vous permettre d'utiliser l'inspiration. Généralement, il vous récompense ainsi quand vous avez su jouer les traits de personnalité de votre personnage, les inconvénients liés à ses défauts ou son lien, ou plus généralement si vous avez réussi à l'interpréter de manière convaincante. Il y a des façons différentes de gagner de l'inspiration pendant le jeu.<br>
Vous êtes soit inspiré, soit vous ne l'êtes pas. Ils est possible d'emmagasiner des « inspirations » que vous pourrez utiliser plus tard à votre convenance.<br>
Il est distingué les inspirations « bardiques » qui sont gagnées grâce aux capacités des bardes (Bhaner, Llawenos…).<br>
L’une des autres méthodes est la pratique religieuse en vénérants ses dieux. Une fois par tranche de 24h, cycle de jour et de la nuit, il est possible de prier pour un minimum de 10 minutes. Ainsi, le personnage dépense 5 points de Foi et gagne une inspiration de Foi. Il peut en avoir plusieurs pour un maximum de 1 par tranche de 5 points de sagesse soit 1 à 5, 2 à 10, 3 à 15 et 4 à 20. Les points de Foi se restaurent comme il est expliqué dans la section Repos ci-avant.<br>
Ces inspirations sont conférées en échanges de prières et d’offrandes. La valeur moyenne pour obtenir une inspiration est de 5po d’offrandes (en valeur).</p>
<h3 id="utiliser-l-inspiration">Utiliser l'inspiration <a class="header-anchor" href="#utiliser-l-inspiration"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Si vous êtes sous le coup de l'inspiration, vous pouvez l'utiliser pour faire un <RouterLink to="/combattre/#jets-d-attaque">jet d'attaque</RouterLink>, un <RouterLink to="/utiliser-les-caracteristiques/#jets-de-sauvegarde">jet de sauvegarde</RouterLink> ou un <RouterLink to="/utiliser-les-caracteristiques/#tests-de-caracteristique">test de caractéristique</RouterLink>. Si vous utilisez votre inspiration, vous obtenez l'<RouterLink to="/utiliser-les-caracteristiques/#avantage-et-desavantage"><em>avantage</em></RouterLink> sur ce lancer de dés.</p>
<p>De plus, si vous êtes sous le coup de l'inspiration, vous pouvez récompenser un autre joueur pour son jeu, sa perspicacité, ou simplement pour avoir rendu la partie plus intéressante par ses actions. Quand le personnage de ce joueur fait quelque chose qui contribue à l'histoire de manière intéressante et drôle, vous pouvez décider de lui céder votre inspiration.</p>
<h2 id="historique">Historique <a class="header-anchor" href="#historique"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p>Vous trouverez dans ce chapitre des exemples d'historiques de personnages concrets (aptitudes, maîtrises et langues) et des suggestions d'interprétation.</p>
<h3 id="maitrises">Maîtrises <a class="header-anchor" href="#maitrises"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Chaque historique confère à un personnage la maîtrise de deux compétences. Ces compétences sont décrites dans le <a href="/utiliser-les-caracteristiques">Utiliser les caractéristiques</a>. En plus de cela, la plupart des historiques permettent à un personnage d'acquérir la maîtrise d'un ou plusieurs outils. Ces outils sont décrits dans le chapitre <RouterLink to="/outils/">Équipement - Outils</RouterLink>. Si un personnage gagne une même maîtrise de deux sources différentes, il peut choisir une maîtrise différente du même type (compétence ou outil) à la place.</p>
<h3 id="langues-2">Langues <a class="header-anchor" href="#langues-2"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Le passé de certains personnages leur donne la capacité de pratiquer des langues supplémentaires à celles accordées par leur race. Reportez-vous à la section <RouterLink to="/personnalite-et-historique/#langues">Langues</RouterLink>.</p>
<h3 id="equipement">Équipement <a class="header-anchor" href="#equipement"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Chaque historique donne accès à un équipement de départ. Si vous utilisez la règle optionnelle qui vous permet à la place d'acheter votre propre équipement, vous ne recevez aucun équipement lié à votre historique. Cette option est décrite dans le chapitre <RouterLink to="/creation-du-personnage/#_5-equiper-le-personnage">Création du personnage</RouterLink>.</p>
<h3 id="personnaliser-votre-historique">Personnaliser votre historique <a class="header-anchor" href="#personnaliser-votre-historique"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous voudrez peut-être adapter certains détails d'un historique pour qu'il corresponde mieux à votre personnage ou au cadre de la campagne. Afin de le personnaliser, vous pouvez remplacer une aptitude par une autre, choisir deux compétences et un total de deux maîtrises d'outils ou de deux langues parmi les historiques qui vous sont proposés ici. Vous pouvez choisir d'utiliser l'équipement de départ proposé ou d'acheter vous-même votre équipement, comme expliqué au chapitre <RouterLink to="/creation-du-personnage/#_2-choisir-un-historique">Création du personnage</RouterLink>. Enfin, vous pouvez choisir deux traits de personnalité, un idéal, un lien et un défaut.</p>
<h1 id="les-historiques-de-douaratil">Les historiques de Douaratil <a class="header-anchor" href="#les-historiques-de-douaratil"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h1>
<p>Voici les historiques proposés dans <em><strong>Douaratil</strong></em>.</p>
<h2 id="artisan">Artisan <a class="header-anchor" href="#artisan"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p>Vous pouvez sélectionner ou déterminer au hasard le type d'artisanat dans lequel vous vous êtes spécialisé.</p>
<table>
<thead>
<tr>
<th style="text-align:center">2D6</th>
<th style="text-align:left">Artisanat</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>2</strong></td>
<td style="text-align:left">Travail du bois (charpentier, menuisier, tonnelier, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>3</strong></td>
<td style="text-align:left">Travail de la pierre (maçon, tailleur de pierre, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>4-5</strong></td>
<td style="text-align:left">Travail du cuir (maroquinier, tanneur, cordonnier, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>6-7</strong></td>
<td style="text-align:left">Travail du tissu (tisserand, teinturier, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>8-9</strong></td>
<td style="text-align:left">Travail du métal (armurier, forgeron, rétameur, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>10</strong></td>
<td style="text-align:left">Travail du verre (vitrier, verrier, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>11</strong></td>
<td style="text-align:left">Travail de précision (orfèvre, joaillier, enlumineur, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>12</strong></td>
<td style="text-align:left">Autre (potier, peintre, boulanger, apothicaire, etc.)</td>
</tr>
</tbody>
</table>
<p><strong>Compétences</strong> : Athlétisme, Perspicacité.<br>
<strong>Outils maîtrisés</strong> : Deux ensembles d'outils d'artisan au choix.<br>
<strong>Équipement</strong> : Habits de bonne qualité, insigne, emblème ou lettre de marque prouvant votre appartenance à votre guilde, deux ensembles d'outils d'artisan correspondant à votre métier, sceau de la guilde, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#reseau-de-guilde">Réseau de guilde</RouterLink></p>
<h2 id="artisan-local">Artisan local <a class="header-anchor" href="#artisan-local"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Athlétisme, Nature.<br>
<strong>Outils maîtrisés</strong> : Deux ensembles d'outils d'artisan au choix parmi les outils de forgeron, de menuisier, de maçon, de bricoleur, ou de charpentier.<br>
<strong>Équipement</strong> : Habits courants, deux ensembles d'outils d'artisan que vous maîtrisez, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#solidarite-populaire">Solidarité populaire</RouterLink></p>
<h2 id="assassin">Assassin <a class="header-anchor" href="#assassin"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Discrétion, Investigation ou Perspicacité.<br>
<strong>Outils maîtrisés</strong> : Matériel d'empoisonneur.<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Vêtements discrets, cape ou manteau à capuche, insigne, emblème ou lettre de marque prouvant votre appartenance à votre guilde, matériel d'empoisonneur, bourse contenant 20 po.
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#marque-de-la-mort">Marque de la mort</RouterLink></p>
<h2 id="bandit-de-grand-chemin">Bandit de grand chemin <a class="header-anchor" href="#bandit-de-grand-chemin"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Intimidation, Survie.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres).<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Couverture, vêtements de voyageur, quelques chausse-trappes, boîte à amadou, outre d'eau, bourse contenant 10 po.
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#signes-de-piste">Signes de piste</RouterLink></p>
<h2 id="batard">Bâtard <a class="header-anchor" href="#batard"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Histoire, Supercherie.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres), un ensemble d'outils d'artisan au choix.<br>
<strong>Équipement</strong> : Habits de bonne qualité, outils d'artisan, objet ou symbole appartenant à la famille de votre parent noble, bourse contenant 20 po.
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#Ni-noble,-ni-homme-du-peuple">Ni noble, ni homme du peuple</RouterLink></p>
<h2 id="brigand">Brigand <a class="header-anchor" href="#brigand"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Discrétion, Survie.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres), un type de jeu au choix.<br>
<strong>Équipement</strong> : Couverture, vêtements de voyageur, piège à mâchoires, boîte à amadou, matériel de pêche, outre d'eau, bourse contenant 10 po.
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#signes-de-piste">Signes de piste</RouterLink></p>
<h2 id="cambrioleur">Cambrioleur <a class="header-anchor" href="#cambrioleur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Acrobaties ou Athlétisme, Discrétion.<br>
<strong>Outils maîtrisés</strong> : Outils de voleur, accessoires de déguisement.<br>
<strong>Équipement</strong> : Vêtements discrets équipés d'une capuche, pied-de-biche, corde en soie (15 m), grappin, bourse contenant 10 po.
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#enfant-de-la-rue">Enfant de la rue</RouterLink></p>
<h2 id="chasseur">Chasseur <a class="header-anchor" href="#chasseur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Discrétion, Survie.<br>
<strong>Outils maîtrisés</strong> : Un type de jeu au choix, véhicules (terrestres).<br>
<strong>Équipement</strong> : Couverture, tenue de voyageur, quelques pièges, peau tannée d'un animal que vous avez tué de vos mains, sacoche contenant des pierres précieuses ou des morceaux d'ivoire pour une valeur de 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#fils-de-la-nature">Fils de la nature</RouterLink></p>
<h2 id="colporteur">Colporteur <a class="header-anchor" href="#colporteur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Persuasion, Survie.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres) ou véhicules (marins).<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Tenue de voyageur équipés d'une capuche, panier, tente pour une personne et couverture, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#voyageur">Voyageur</RouterLink></p>
<h2 id="commercant">Commerçant <a class="header-anchor" href="#commercant"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p>En accord avec votre MJ, sélectionnez ou déterminez au hasard une des catégories suivantes pour déterminer le négoce principal de votre guilde.</p>
<table>
<thead>
<tr>
<th style="text-align:center">2d6</th>
<th style="text-align:left">Négoce</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>2-3</strong></td>
<td style="text-align:left">Matériaux de construction (bois, pierres, fer, marbre, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>4-5</strong></td>
<td style="text-align:left">Aliments de première nécessité (céréales, viande, sel, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>6-7</strong></td>
<td style="text-align:left">Vin, bière et autres alcools</td>
</tr>
<tr>
<td style="text-align:center"><strong>8</strong></td>
<td style="text-align:left">Cuirs, peaux et tissus (laine, coton, soie, étoffes, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>9</strong></td>
<td style="text-align:left">Métaux précieux et joaillerie (or, gemmes, bijoux, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>10</strong></td>
<td style="text-align:left">Curiosités (porcelaine, fourrures, œuvres d'art, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>11</strong></td>
<td style="text-align:left">Aliments exotiques (cacao, thé, poivre, sucre, épices, etc.)</td>
</tr>
<tr>
<td style="text-align:center"><strong>12</strong></td>
<td style="text-align:left">Esclaves, contrebande, recel, produits interdits</td>
</tr>
</tbody>
</table>
<p><strong>Compétences</strong> : Perspicacité, Persuasion.<br>
<strong>Langues maîtrisées</strong> : Deux langues au choix.<br>
<strong>Équipement</strong> : Habits de bonne qualité, insigne, emblème ou lettre de marque prouvant votre appartenance à votre guilde, sceau de la guilde, balance de marchand, livre de comptes, plume et encre, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#reseau-de-guilde">Réseau de guilde</RouterLink></p>
<h2 id="cuisinier">Cuisinier <a class="header-anchor" href="#cuisinier"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Discrétion, Perspicacité.<br>
<strong>Outils maîtrisés</strong> : Ustensiles de cuisinier.<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Habits courants, ustensiles de cuisinier, colifichet signe de l'affection que vous portait votre employeur, outre de bon vin, bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#reconfort-du-foyer">Réconfort du foyer</RouterLink></p>
<h2 id="crapule">Crapule <a class="header-anchor" href="#crapule"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Escamotage, Intimidation.<br>
<strong>Outils maîtrisés</strong> : Outils de voleur, un type de jeu au choix.<br>
<strong>Équipement</strong> : Vêtements discrets équipés d'une capuche, quelques chausse-trappes, objet brillant mais de peu de valeur volé il y a longtemps à une personne importante, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#enfant-de-la-rue">Enfant de la rue</RouterLink></p>
<h2 id="devot">Dévot <a class="header-anchor" href="#devot"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Perspicacité, Religion.<br>
<strong>Langues maîtrisées</strong> : Deux langues au choix.<br>
<strong>Équipement</strong> : Symbole sacré (qui vous a été remis quand vous êtes entré dans les ordres), livre de prière ou moulin à prière, 5 bâtons d'encens, tenue de cérémonie, habits courants, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#refuge-du-pelerin">Refuge du pèlerin</RouterLink></p>
<h2 id="eclaireur">Éclaireur <a class="header-anchor" href="#eclaireur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Discrétion, Survie.<br>
<strong>Outils maîtrisés</strong> : Accessoires de déguisement.<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Tenue de voyageur, sac contenant couverture et tente, outre d'eau, accessoires de déguisement, bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#decouvreur">Découvreur</RouterLink></p>
<h2 id="ermite">Ermite <a class="header-anchor" href="#ermite"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Perspicacité ou Survie, Religion.<br>
<strong>Outils maîtrisés</strong> : Deux ensembles d'outils d'artisan au choix entre ustensiles de cuisinier, outils de tanneur, de potier, de forgeron, de tisserand ou de menuisier. Vous pouvez remplacer l'un de ces outils par un instrument de musique rituel ou du matériel d'herboriste.<br>
<strong>Équipement</strong> : Habits courants, ensemble d'outils ou instrument de musique parmi ceux maîtrisés, 5 bâtons d'encens, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#revelation">Révélation</RouterLink></p>
<h2 id="erudit">Érudit <a class="header-anchor" href="#erudit"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Arcanes, Histoire.<br>
<strong>Outils maîtrisés</strong> : Un au choix parmi : matériel de calligraphie, outils de cartographe ou matériel d'alchimiste.<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Habits de bonne qualité, deux bougies, matériel de calligraphie ou outils de cartographe ou matériel d'alchimiste, quelques lettres de correspondance avec un ou plusieurs confrères, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#culture-genérale">Culture générale</RouterLink></p>
<h2 id="escroc">Escroc <a class="header-anchor" href="#escroc"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Persuasion, Supercherie.<br>
<strong>Outils maîtrisés</strong> : Deux au choix parmi un type de jeu, accessoires de faussaire, accessoires de déguisement.<br>
<strong>Équipement</strong> : Accessoires de faussaire ou jeu, deux ensembles de d'habits courants, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#fausse-identite">Fausse identité</RouterLink></p>
<h2 id="explorateur">Explorateur <a class="header-anchor" href="#explorateur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Athlétisme, Survie.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres).<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Tenue de voyageur, sac contenant couverture et tente, outre d'eau, corde en soie (15  m), bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#decouvreur">Découvreur</RouterLink></p>
<h2 id="garde">Garde <a class="header-anchor" href="#garde"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Intimidation, Perspicacité.<br>
<strong>Outils maîtrisés</strong> : Un type de jeu au choix.<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Vêtements courants, paquet de cartes ou dés, insigne ou emblème de votre unité et de votre rang, pierre à affûter, outre de vin, bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#freres-d'armes">Frères d'armes</RouterLink></p>
<h2 id="gardien-tribal">Gardien tribal <a class="header-anchor" href="#gardien-tribal"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Perspicacité, Survie.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres), un instrument de musique au choix.<br>
<strong>Équipement</strong> : Sac contenant une tente et une couverture, bâton de marche, tenue de voyage grossiers, instrument de musique de votre tribu, amulette à l'effigie de votre gardien spirituel, sacoche contenant des pierres précieuses ou des fragments d'ivoire pour une valeur de 10 po.
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#esprit-protecteur">Esprit protecteur</RouterLink></p>
<h2 id="gens-du-voyage">Gens du voyage <a class="header-anchor" href="#gens-du-voyage"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Deux au choix parmi Intimidation, Représentation, Supercherie.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres), instrument de musique au choix.<br>
<strong>Équipement</strong> : Tenue de voyageur, instrument de musique, chien ou petit animal de compagnie, sac de voyage, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#voyageur">Voyageur</RouterLink></p>
<h2 id="guide">Guide <a class="header-anchor" href="#guide"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Athlétisme, Survie.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres), un type de jeu au choix.<br>
<strong>Équipement</strong> : Tenue de voyageur, sac contenant tente et couverture, boîte à amadou, bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#besoin-de-personne">Besoin de personne</RouterLink></p>
<h2 id="homme-de-loi">Homme de loi <a class="header-anchor" href="#homme-de-loi"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Investigation ou Persuasion, Perspicacité.<br>
<strong>Outils maîtrisés</strong> : Matériel de calligraphie, véhicules (terrestres).<br>
<strong>Équipement</strong> : Épais journal vierge pour consigner ses investigations, matériel de calligraphie, tenue de voyageur, symbole (sceau ou médaillon) représentant son office, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#position-d'autorite">Position d'autorité</RouterLink></p>
<h2 id="homme-medecine">Homme-médecine <a class="header-anchor" href="#homme-medecine"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Médecine, Nature.<br>
<strong>Outils maîtrisés</strong> : Matériel d'herboriste.<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Sac contenant une tente et une couverture, bâton de marche, tenue de voyageur, matériel d'herboriste, bourse contenant des bijoux et des morceaux d'ivoire pour une valeur de 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#fils-de-la-nature">Fils de la nature</RouterLink></p>
<h2 id="initie">Initié <a class="header-anchor" href="#initie"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Investigation, Religion.<br>
<strong>Outils maîtrisés</strong> : Un instrument de musique (utilisé dans les cérémonies de votre religion) ou un ensemble d'outils d'artisan.<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Symbole sacré (qui vous a été remis quand vous êtes entré dans les ordres), instrument de musique ou outils d'artisan, tenue de cérémonie, habits courants, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#refuge-du-pelerin">Refuge du pèlerin</RouterLink></p>
<h2 id="inquisiteur">Inquisiteur <a class="header-anchor" href="#inquisiteur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Intimidation, Religion.<br>
<strong>Outils maîtrisés</strong> : Matériel de calligraphie.<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Insigne représentant sa religion et sa fonction, habits de bonne qualité, épais journal vierge pour consigner ses investigations, matériel de calligraphie, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#position-d'autorite">Position d'autorité</RouterLink></p>
<h2 id="itinerant">Itinérant <a class="header-anchor" href="#itinerant"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Représentation, Survie.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres) ou véhicules (marins).<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Tenue de voyageur, costume ou vêtements tape-à-l'œil, tente pour une personne et couverture, sac de voyage, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#voyageur">Voyageur</RouterLink></p>
<h2 id="journalier">Journalier <a class="header-anchor" href="#journalier"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Athlétisme, Survie.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres), un ensemble d'outils au choix parmi : outils de charpentier, outils de cordonnier, outils de tanneur, outils de maçon, matériel de peintre, outils de potier, outils de forgeron, outils de menuisier.<br>
<strong>Équipement</strong> : Habits courants, outre de vin, ensemble d'outils dépendant de son métier, couverture, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#communaute">Communauté</RouterLink></p>
<h2 id="juriste">Juriste <a class="header-anchor" href="#juriste"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Histoire ou Religion, Persuasion<br>
<strong>Langues maîtrisées</strong> : Deux langues au choix.<br>
<strong>Équipement</strong> : Habits de bonne qualité, symbole ou emblème attestant de votre charge ou vos compétences, étui à parchemins avec 10 feuilles, plume et encre, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#rouages-de-la-justice">Rouages de la justice</RouterLink></p>
<h2 id="laboureur">Laboureur <a class="header-anchor" href="#laboureur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Athlétisme, Dressage.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres), un ensemble d'outils d'artisan au choix entre des outils de forgeron, de cordonnier, de tanneur, de menuisier, de maçon, de potier, de bricoleur, de brasseur ou de charpentier.<br>
<strong>Équipement</strong> : Ensemble d'outils d'artisan, habits courants, objet hérité de l'un de vos parents dont la valeur est sentimentale, pelle, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#solidarite-populaire">Solidarité populaire</RouterLink></p>
<h2 id="limier">Limier <a class="header-anchor" href="#limier"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Investigation ou Perspicacité, Supercherie.<br>
<strong>Outils maîtrisés</strong> : Accessoires de déguisement, outils de voleur.<br>
<strong>Équipement</strong> : Accessoires de déguisement, outils de voleur, vêtements discrets, insigne officiel, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#entre-deux-mondes">Entre deux mondes</RouterLink></p>
<h2 id="manouvrier">Manouvrier <a class="header-anchor" href="#manouvrier"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Athlétisme, Escamotage.<br>
<strong>Outils maîtrisés</strong> : Un type de jeu au choix, un ensemble d'outils au choix parmi : outils de charpentier, outils de cordonnier, outils de tanneur, outils de maçon, matériel de peintre, outils de potier, outils de forgeron, outils de menuisier.<br>
<strong>Équipement</strong> : Habits courants, outre de vin, ensemble d'outils dépendant de son métier, pot en fer, lettres de recommandation d'anciens employeurs, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#communaute">Communauté</RouterLink></p>
<h2 id="matelot">Matelot <a class="header-anchor" href="#matelot"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Acrobaties, Athlétisme.<br>
<strong>Outils maîtrisés</strong> : Véhicules (marins), ensemble d'outils au choix parmi outils de charpentier, outils de menuisier, instruments de navigation.<br>
<strong>Équipement</strong> : Tenue de voyageur, un ensemble d'outils parmi ceux maîtrisés, bouteille d'alcool fort, bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#decouvreur">Découvreur</RouterLink></p>
<h2 id="medecin">Médecin <a class="header-anchor" href="#medecin"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Médecine, Nature.<br>
<strong>Outils maîtrisés</strong> : Matériel d'herboriste, matériel d'empoisonneur.<br>
<strong>Équipement</strong> : Habits de bonne qualité, deux bougies, matériel d'herboriste, trousse de soins, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#culture-genérale">Culture générale</RouterLink></p>
<h2 id="membre-de-guilde">Membre de guilde <a class="header-anchor" href="#membre-de-guilde"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Perspicacité, Persuasion.<br>
<strong>Outils maîtrisés</strong> : Un ensemble d'outils d'artisan au choix.<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Habits de bonne qualité, insigne, emblème ou lettre de marque prouvant votre appartenance à votre guilde, outils d'artisan correspondant à votre métier, sceau de la guilde, étui avec quelques cartes terrestres ou maritimes, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#reseau-de-guilde">Réseau de guilde</RouterLink></p>
<h2 id="mendiant">Mendiant <a class="header-anchor" href="#mendiant"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Escamotage, Supercherie.<br>
<strong>Outils maîtrisés</strong> : Un instrument de musique (parmi tambours, flûte, chalumeau), un type de jeu au choix.<br>
<strong>Équipement</strong> : Couverture rapiécée, habits courants, instrument de musique parmi ceux maîtrisés, bourse contenant 5 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#refuge">Refuge</RouterLink></p>
<h2 id="mercenaire">Mercenaire <a class="header-anchor" href="#mercenaire"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Athlétisme, Supercherie.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres), un type de jeu au choix.<br>
<strong>Équipement</strong> : Habits courants, paquet de cartes ou dés, objet de valeur récupéré sur un champ de bataille ou lors d'un siège, pierre à affûter, outre de vin, bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#freres-d'armes">Frères d'armes</RouterLink></p>
<h2 id="militaire">Militaire <a class="header-anchor" href="#militaire"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Athlétisme, Intimidation.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres), un type de jeu au choix.<br>
<strong>Équipement</strong> : Couverture, habits courants, paquet de cartes ou dés, insigne ou emblème de votre unité et de votre rang, pierre à affûter, bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#freres-d'armes">Frères d'armes</RouterLink></p>
<p><strong>Unité</strong>
Vous avez passé une large part de votre temps dans une unité en particulier. Établissez avec votre MJ le type d'unité et son rôle, ainsi que d'éventuelles batailles ou sièges auxquels vous avez participé. Vous pouvez vous inspirer de la liste suivante, ou déterminer aléatoirement le rôle de votre unité.</p>
<table>
<thead>
<tr>
<th style="text-align:center">D6</th>
<th>Type d'unité</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>1</strong></td>
<td>Fantassins/Piquiers</td>
</tr>
<tr>
<td style="text-align:center"><strong>2</strong></td>
<td>Archers/Arbalétriers</td>
</tr>
<tr>
<td style="text-align:center"><strong>3</strong></td>
<td>Ravitaillement/Soutien</td>
</tr>
<tr>
<td style="text-align:center"><strong>4</strong></td>
<td>Cavalerie légère</td>
</tr>
<tr>
<td style="text-align:center"><strong>5</strong></td>
<td>Irréguliers/Éclaireurs</td>
</tr>
<tr>
<td style="text-align:center"><strong>6</strong></td>
<td>Sapeurs/Ingénieurs</td>
</tr>
</tbody>
</table>
<h2 id="misereux">Miséreux <a class="header-anchor" href="#misereux"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Discrétion, Escamotage.<br>
<strong>Outils maîtrisés</strong> : Un type de jeu au choix, outils de voleur.<br>
<strong>Équipement</strong> : Couverture rapiécée, vêtements courants, paquet de cartes ou dés, bourse contenant 5 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#refuge">Refuge</RouterLink></p>
<h2 id="noblesse-d-epee">Noblesse d'épée <a class="header-anchor" href="#noblesse-d-epee"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Athlétisme ou Dressage, Histoire.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres).<br>
<strong>Langue</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Vêtements de qualité, monture, chevalière portant le sceau familial, pierre à affûter, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#de-la-haute">De la haute</RouterLink></p>
<h2 id="noblesse-de-robe">Noblesse de robe <a class="header-anchor" href="#noblesse-de-robe"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Histoire, Perspicacité ou Persuasion.<br>
<strong>Outils maîtrisés</strong> : Un instrument de musique au choix, un ensemble d'outils d'artisan au choix parmi matériel d'alchimiste, outils de cartographe, matériel de peintre et outils de tisserand.<br>
<strong>Langues maîtrisées</strong> : Chaque outil peut être remplacé par une langue au choix.<br>
<strong>Équipement</strong> : Habits de bonne qualité, instrument de musique ou ensemble d'outils d'artisan, emblème ou symbole familial, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#de-la-haute">De la haute</RouterLink></p>
<h2 id="officier">Officier <a class="header-anchor" href="#officier"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Athlétisme ou Dressage, Persuasion.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres).<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Monture, habits de bonne qualité, insigne ou emblème de votre unité et de votre rang, bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#position-d'autorite">Position d'autorité</RouterLink></p>
<h2 id="orphelin">Orphelin <a class="header-anchor" href="#orphelin"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Acrobaties ou Discrétion, Escamotage.<br>
<strong>Outils maîtrisés</strong> : Un type de jeu au choix, accessoires de déguisement.<br>
<strong>Équipement</strong> : Habits courants, paquet de cartes ou dés, quelques chausse-trappes, colifichet vous rappelant votre enfance et – si vous les avez connus – vos parents, bourse contenant 5 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#mouches-des-rues">Mouches des rues</RouterLink></p>
<h2 id="palefrenier">Palefrenier <a class="header-anchor" href="#palefrenier"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Dressage, Perspicacité.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres), outils de tanneur.<br>
<strong>Équipement</strong> : Habits courants, outils de tanneur, colifichet signe de l'affection que vous portait votre employeur, bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#domesticite">Domesticité</RouterLink></p>
<h2 id="patrouilleur">Patrouilleur <a class="header-anchor" href="#patrouilleur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Perspicacité, Survie.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres).<br>
<strong>Langue</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Monture, tenue de voyageur, tente, boîte à amadou, insigne officiel, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#position-d'autorite">Position d'autorité</RouterLink></p>
<h2 id="precepteur">Précepteur <a class="header-anchor" href="#precepteur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Histoire, Perspicacité.<br>
<strong>Langues maîtrisées</strong> : Deux langues au choix.<br>
<strong>Équipement</strong> : Habits de bonne qualité, 2 bougies, livre d'histoire ou de langue ancienne, plume et encre, étui avec 10 feuilles de parchemin, bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#domesticite">Domesticité</RouterLink></p>
<h2 id="pilleur-de-ruines">Pilleur de ruines <a class="header-anchor" href="#pilleur-de-ruines"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Histoire, Investigation.<br>
<strong>Outils maîtrisés</strong> : Outils de voleur.<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Tenue de voyageur, outre d'eau, pelle, pied-de-biche, bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#estimation">Estimation</RouterLink></p>
<h2 id="pirate">Pirate <a class="header-anchor" href="#pirate"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Athlétisme, Supercherie.<br>
<strong>Outils maîtrisés</strong> : Instruments de navigation, véhicules (marins).<br>
<strong>Équipement</strong> : Couverture, vêtements de voyageur, longue-vue, instruments de navigation, matériel de pêche, bouteille d'alcool fort, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#confrerie">Confrérie</RouterLink></p>
<h2 id="predicateur">Prédicateur <a class="header-anchor" href="#predicateur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Religion, Représentation.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres) ou véhicules (marins).<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Symbole sacré, livre de prière ou moulin à prière, 5 bâtons d'encens, tenue de cérémonie, fiole d'eau bénite, tenue de voyageur, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#refuge-du-pelerin">Refuge du pèlerin</RouterLink></p>
<h2 id="rebouteux">Rebouteux <a class="header-anchor" href="#rebouteux"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Médecine, Nature ou Religion.<br>
<strong>Outils maîtrisés</strong> : Deux au choix parmi matériel d'herboriste, d'empoisonneur et d'alchimiste.<br>
<strong>Équipement</strong> : Habits courants, bâton, des grisgris ou des fioles contenant d'étranges décoctions, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#aime-et-deteste">Aimé et Détesté</RouterLink></p>
<h2 id="repenti">Repenti <a class="header-anchor" href="#repenti"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Religion, Supercherie.<br>
<strong>Outils maîtrisés</strong> : Accessoires de déguisement, Véhicules (terrestres).<br>
<strong>Équipement</strong> : Symbole sacré (qui vous a été remis quand vous êtes entré dans les ordres), livre de prière ou moulin à prière, habits courants, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#ancienne-vie">Ancienne vie</RouterLink></p>
<h2 id="saltimbanque">Saltimbanque <a class="header-anchor" href="#saltimbanque"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Spécialité</strong>
Vous maîtrisez un art en particulier, avec lequel vous avez appris à gagner votre vie. Ce dernier vous ouvre l'accès à la maîtrise d'une compétence spécifique.</p>
<table>
<thead>
<tr>
<th style="text-align:center">D6</th>
<th style="text-align:left">Spécialité</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>1</strong></td>
<td style="text-align:left">Musicien/Conteur (Histoire ou Religion)</td>
</tr>
<tr>
<td style="text-align:center"><strong>2</strong></td>
<td style="text-align:left">Acteur (Persuasion ou Supercherie)</td>
</tr>
<tr>
<td style="text-align:center"><strong>3</strong></td>
<td style="text-align:left">Acrobate (Acrobaties)</td>
</tr>
<tr>
<td style="text-align:center"><strong>4</strong></td>
<td style="text-align:left">Jongleur (Escamotage)</td>
</tr>
<tr>
<td style="text-align:center"><strong>5</strong></td>
<td style="text-align:left">Montreur d'animaux (Dressage)</td>
</tr>
<tr>
<td style="text-align:center"><strong>6</strong></td>
<td style="text-align:left">Diseuse de bonne aventure (Perspicacité)</td>
</tr>
</tbody>
</table>
<p><strong>Compétences</strong> : Une compétence dépendant de la spécialité, Représentation.<br>
<strong>Outils maîtrisés</strong> : Un instrument de musique au choix, véhicules (terrestres).<br>
<strong>Langues maîtrisées</strong> : Vous pouvez remplacer l'instrument de musique par une langue au choix.<br>
<strong>Équipement</strong> : Tenue de voyageur, costume ou vêtements tape à l'œil, outils nécessaires à votre art (instrument, animal dressé, outils pour vos jongleries, etc.), sac de voyage, bourse contenant 15 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#spectacle-ambulant">Spectacle ambulant</RouterLink></p>
<h2 id="sang-bleu">Sang-bleu <a class="header-anchor" href="#sang-bleu"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Histoire, Persuasion.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres).<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Habits de bonne qualité, monture, chevalière portant le sceau familial, bourse contenant 20 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#de-la-haute">De la haute</RouterLink></p>
<h2 id="serveur">Serveur <a class="header-anchor" href="#serveur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Athlétisme, Représentation.<br>
<strong>Outils maîtrisés</strong> : Ustensiles de cuisinier ou un type de jeu au choix.<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Habits courants, dés ou paquet de cartes ou ustensiles de cuisinier, bouteille d'alcool fort, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#histoires-de-terres-lointaines">Histoires de terres lointaines</RouterLink></p>
<h2 id="solitaire">Solitaire <a class="header-anchor" href="#solitaire"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Nature, Survie.<br>
<strong>Outils maîtrisés</strong> : Deux ensembles d'outils d'artisan au choix entre ustensiles de cuisinier, outils de tanneur, de potier, de forgeron, de tisserand ou de menuisier.<br>
<strong>Équipement</strong> : Tenue de voyageur, couverture, boîte à amadou, bout de bois taillé ou pierre étrange portée comme un talisman, matériel de pêche, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#besoin-de-personne">Besoin de personne</RouterLink></p>
<h2 id="trappeur">Trappeur <a class="header-anchor" href="#trappeur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Discrétion, Survie.<br>
<strong>Outils maîtrisés</strong> : Un type de jeu, un ensemble d'outils d'artisans au choix entre ustensiles de cuisinier, outils de tanneur, de potier, de forgeron, de tisserand ou de menuisier.<br>
<strong>Équipement</strong> : Tenue de voyageur, couverture, boîte à amadou, fourrure d'un animal que vous avez tué et qui vous sert de couverture, piège à mâchoires, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#besoin-de-personne">Besoin de personne</RouterLink></p>
<h2 id="vagabond">Vagabond <a class="header-anchor" href="#vagabond"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Escamotage, Survie.<br>
<strong>Outils maîtrisés</strong> : Matériel d'herboriste.<br>
<strong>Langues maîtrisées</strong> : Une langue au choix.<br>
<strong>Équipement</strong> : Couverture, habits courants, matériel d'herboriste, bourse contenant 5 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#refuge">Refuge</RouterLink></p>
<h2 id="villageois">Villageois <a class="header-anchor" href="#villageois"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Dressage, Nature.<br>
<strong>Outils maîtrisés</strong> : Véhicules (terrestres), un ensemble d'outils d'artisan au choix entre des outils de forgeron, de cordonnier, de tanneur, de menuisier, de maçon, de potier, de bricoleur, de brasseur ou de charpentier.<br>
<strong>Équipement</strong> : Ensemble d'outils d'artisan, vêtements courants, objet hérité de l'un de vos parents et dont la valeur est sentimentale, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#solidarite-populaire">Solidarité populaire</RouterLink></p>
<h2 id="voleur-a-la-tire">Voleur à la tire <a class="header-anchor" href="#voleur-a-la-tire"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<p><strong>Compétences</strong> : Escamotage, Supercherie.<br>
<strong>Outils maîtrisés</strong> : Accessoires de déguisement.<br>
<strong>Langues maîtrisées</strong> : Argot des voleurs.<br>
<strong>Équipement</strong> : Vêtements discrets équipés d'une capuche, objet brillant mais de peu de valeur volé il y a longtemps à une personne importante, bourse contenant 10 po.<br>
<strong>Aptitude</strong> : <RouterLink to="/personnalite-et-historique/#enfant-de-la-rue">Enfant de la rue</RouterLink></p>
<h2 id="les-aptitudes">Les Aptitudes <a class="header-anchor" href="#les-aptitudes"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h2>
<h3 id="aime-et-deteste">Aimé et Détesté <a class="header-anchor" href="#aime-et-deteste"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous exercez à la fois fascination et répulsion sur les gens du commun. Lorsque vous êtes en leur présence, vous avez la capacité d'attirer leur regard. Quand vous choisissez de le faire, vous êtes alors, l'espace d'un instant, le centre de l'attention. Les personnes réagissent en fonction de leurs personnalités respectives (pouvant ainsi vous rejeter, voire se montrer grossières ou violentes), mais, pendant un court moment, elles ne se préoccupent plus de ce qui les entoure (à moins qu'on les agresse ou leur porte ouvertement tort).</p>
<h3 id="ancienne-vie">Ancienne vie <a class="header-anchor" href="#ancienne-vie"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous étiez autre chose, avant. En plus de l'aptitude de dévot, choisissez l'aptitude d'un historique approprié à refléter votre passé. Quand vous le désirez, vous pouvez reprendre momentanément votre ancienne vie et votre ancienne identité afin de pouvoir l'utiliser en plus de l'aptitude de base de dévot. Mais si votre nouvelle vie devait être découverte par l'un de vos ennemis, ou si le temple qui vous a accueilli devait se rendre compte de votre rechute, vous ne pourriez plus utiliser cette aptitude. De plus, vous ne pourrez plus non plus utiliser votre aptitude de dévot tant que vous n'aurez pas fait sincère pénitence aux yeux de ceux qui ont accepté de vous accueillir pour que vous changiez de vie.</p>
<h3 id="besoin-de-personne">Besoin de personne <a class="header-anchor" href="#besoin-de-personne"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous avez appris à vous débrouiller seul. Vous savez toujours où trouver un abri discret où se reposer et faire du feu la nuit tombée. De plus, vous repérez facilement les zones contenant des herbes médicinales ou des champignons comestibles.</p>
<h3 id="confrerie">Confrérie <a class="header-anchor" href="#confrerie"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous appartenez à une confrérie universelle qui possède ses propres usages et ses propres codes. Quel que soit le port dans lequel vous vous trouvez, vous êtes capables de dénicher une auberge ou une taverne fréquentée par les vôtres, qui en cas de besoin peut servir de refuge ou d'endroit idéal pour dénicher des informations.</p>
<h3 id="communaute">Communauté <a class="header-anchor" href="#communaute"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Les manouvriers et journaliers forment une communauté soudée qui se serre les coudes en période de vaches maigres, et qui sait que les quelques pièces obtenues du travail d'une journée peuvent parfois faire la différence entre la vie et la mort. En cas de besoin, vous savez faire appel à la solidarité de vos anciens collègues pour obtenir des informations, un peu d'aide ou l'hospitalité.</p>
<h3 id="culture-generale">Culture générale <a class="header-anchor" href="#culture-generale"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Même si vous avez une spécialité, vous avez dû appréhender de multiples sujets d'études pour atteindre votre niveau d'érudition actuel. Vous disposez de connaissances de base dans la plupart des domaines, même les plus inaccessibles. Et lorsque vous ne disposez pas vous-même d'une connaissance, vous savez où l'obtenir et êtes capables d'identifier une personne ou un lieu auprès duquel vous renseigner. Il peut s'agir d'une bibliothèque, d'un monastère, d'un autre érudit, mais aussi d'un endroit perdu ou inaccessible.</p>
<h3 id="decouvreur">Découvreur <a class="header-anchor" href="#decouvreur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Même dans une région qui vous est inconnue, vous êtes capable de déterminer la meilleure route à suivre pour relier un point à un autre, en fonction du climat et du terrain. Toutefois, vos choix ne tiennent pas forcément compte des particularités locales, comme des prédateurs ou des tribus hostiles. Dans un territoire déjà visité, vous êtes capable de dénicher une solution de transport qui vous permet de rallier votre destination. Selon les cas, il peut s'agir d'une caravane, d'un bateau, ou d'un simple chariot emprunté à un paysan. Ce ne sera pas forcément la solution la plus rapide ou la plus confortable, mais elle sera généralement sûre et vous mènera à bon port.</p>
<h3 id="de-la-haute">De la haute <a class="header-anchor" href="#de-la-haute"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous êtes à l'aise dans les cercles de la haute société, et votre statut est aisément reconnaissable. Dès que l'on sait que vous êtes de noble lignage, les gens du peuple ont tendance à vous traiter avec déférence et respect, par devant tout du moins. Les miliciens et les gardes vous laissent tranquille, et les portes des grandes maisons et des cercles de pouvoir s'ouvrent plus facilement, pour peu que vous y mettiez les formes.</p>
<h3 id="domesticite">Domesticité <a class="header-anchor" href="#domesticite"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous avez l'habitude du fonctionnement général des maisons avec domestiques. De ce fait, vous êtes capable de dénicher facilement certaines informations à propos de la maîtresse ou du maître de maison sans alerter qui que ce soit sur vos intentions. De plus, dans votre région d'origine et le milieu social dans lequel vous travailliez, vous connaissez la plupart des individus importants, au moins de nom.</p>
<h3 id="enfant-de-la-rue">Enfant de la rue <a class="header-anchor" href="#enfant-de-la-rue"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous avez toujours évolué dans les rues des bas-fonds. Vous avez l'œil, vous savez reconnaître les lieux fréquentés par les personnes de votre genre. Si vous cherchez un lieu fréquenté par les crapules de la cité, vous arrivez toujours à le trouver sans trop d'effort. Vous ne pouvez découvrir automatiquement les lieux cachés et les bases d'opérations secrètes ou autres, mais vous trouvez toujours à qui poser la bonne question. Cette recherche ne vous prend jamais plus d'une ou deux heures. De plus, vous connaissez les codes et les manières des bas-fonds, et savez toujours comment vous comporter afin que l'on comprenne que vous appartenez au même milieu, ce qui rend votre intégration plus aisée.</p>
<h3 id="entre-deux-mondes">Entre deux mondes <a class="header-anchor" href="#entre-deux-mondes"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous évoluez autant au sein des cercles officiels qu'en dehors. Cela fait que les autorités de la ville vous voient comme un atout que l'on peut sacrifier. Vous avez accès aux locaux de votre organisation et on vous laisse tranquille quand on connaît votre véritable identité. Dans tout autre cas, vous êtes traité comme tout un chacun. Cependant, vous disposez d'un contact dans le monde de la pègre ou dans les bas-fonds capable de vous obtenir des renseignements et des services auxquels les autres n'ont pas accès. Et s'il ne peut vous aider, peut-être connaissez-vous l'un de ses amis, prêt à louer ses talents.</p>
<h3 id="esprit-protecteur">Esprit protecteur <a class="header-anchor" href="#esprit-protecteur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous avez un gardien spirituel qui vous suit, invisible, et vous aide parfois. Il incarne la puissance naturelle et animale. Les animaux vous sont rarement hostiles, à moins que vous les menaciez. Au pire ils préfèrent vous éviter. Quand un animal sauvage se présente, il ne prend que rarement la peine de s'enfuir et ne vous agresse que dans des cas extrêmes. De plus, vous êtes toujours capable de retrouver votre chemin en pleine nature.</p>
<h3 id="estimation">Estimation <a class="header-anchor" href="#estimation"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous êtes capable d'évaluer en quelques secondes la valeur approximative d'un trésor, d'un artefact ancien ou de pierres précieuses. Vous ne disposez pas d'une évaluation précise, et il vous arrive exceptionnellement de vous tromper, mais vous avez assez l'habitude de ce genre de choses pour distinguer en très peu de temps les objets qui ont une réelle valeur, et séparer le bon grain de l'ivraie.</p>
<h3 id="fausse-identite">Fausse identité <a class="header-anchor" href="#fausse-identite"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous disposez d'une seconde identité afin d'éviter que l'on puisse vous retrouver. Vous possédez tous les documents et les objets nécessaires à l'entretenir et vous y recourez quand le besoin se fait sentir.</p>
<h3 id="fils-de-la-nature">Fils de la nature <a class="header-anchor" href="#fils-de-la-nature"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous savez survivre dans la nature. Vous trouvez toujours les points d'eau, les buissons de baies et les lieux propices à la chasse. Vous savez lire la nature et n'êtes jamais vraiment perdu. De plus, vous savez identifier les indices attestant de la présence d'autres clans primitifs : si un tel clan, ou une tribu (ou même un individu) est présent, vous savez remonter la trace jusqu'à son campement.</p>
<h3 id="freres-d-armes">Frères d'armes <a class="header-anchor" href="#freres-d-armes"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous avez une longue pratique des codes et du vocabulaire soldatesque, et vous savez intuitivement à qui vous adresser et de quelle manière au sein d'une unité militaire. Vous avez aussi une connaissance approfondie des rivalités seigneuriales dans votre région d'origine, et savez parfaitement reconnaître d'éventuels soldats « amis », auprès de qui vous pouvez solliciter de l'aide en cas de nécessité.</p>
<h3 id="histoires-de-terres-lointaines">Histoires de terres lointaines <a class="header-anchor" href="#histoires-de-terres-lointaines"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous ne comptez plus le nombre d'histoires de terres inconnues et lointaines que vous avez entendues alors que vous alliez et veniez entre les tables. Même si vous n'avez jamais vu aucune de ces régions mystérieuses, vous avez l'impression d'en connaître certaines intimement. Lorsque vous voyagez vers une contrée inconnue, vous pouvez demander au MJ de vous fournir des informations de base sur votre destination. De plus, lorsque vous et vos compagnons vous trouvez dans une taverne ou une auberge, vous pouvez vous attirer les faveurs du tenancier et de quelques clients en racontant vos histoires ou en profitant de votre expérience. Cela peut vous permettre de glaner quelques informations ou une aide ponctuelle.</p>
<h3 id="marque-de-la-mort">Marque de la mort <a class="header-anchor" href="#marque-de-la-mort"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Par le truchement de votre guilde, vous savez avec qui prendre contact dans la plupart des villes de votre région d'origine, au cas où vous voudriez vous débarrasser d'un indésirable pour une somme modique, ou bien si vous souhaitez vous procurer du poison. Votre guilde entretient en outre une aura de mystère et de menace par une subtile manipulation de l'information, qui vous permet de vous prévaloir, grâce à quelques menaces voilées, d'aide ou d'information auprès de la population des cités où la guilde opère.</p>
<h3 id="mouches-des-rues">Mouches des rues <a class="header-anchor" href="#mouches-des-rues"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous avez une connexion particulière avec les gamins des rues qui traînent dans toutes les cités et les villes du monde. Vous savez comment vous adresser à eux et les récompenser de quelques pièces pour obtenir de l'aide ou des informations. Ils ne risqueront pas leur peau pour vous, mais ils peuvent rendre de précieux services à qui sait utiliser leurs talents avec discernement.</p>
<h3 id="ni-noble-ni-homme-du-peuple">Ni noble, ni homme du peuple <a class="header-anchor" href="#ni-noble-ni-homme-du-peuple"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous êtes à l'aise auprès des gens du peuple, et savez comment vous faire passer pour l'un d'entre eux. Mais vous pouvez aussi vous faire passer pour un homme de noble lignage si nécessaire. Les gardes, soldats, miliciens et sous-fifres vous considèrent toujours comme un noble si vous le désirez. Mais vous savez aussi toujours où trouver une personne à qui parler parmi les serviteurs afin de découvrir l'information de votre choix (avec l'aval du MJ).</p>
<h3 id="position-d-autorite">Position d'autorité <a class="header-anchor" href="#position-d-autorite"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Votre rang dans les forces de l'ordre ou dans votre communauté vous accorde des privilèges tout particuliers. Ainsi, les forces de l'ordre des communautés alliées ou en bon terme avec la vôtre ont toujours un a priori positif sur vous (sauf cas particulier). De plus, si vous vous trouvez dans votre propre juridiction, vous exercez les droits et prérogatives liés à votre rang. Vous pouvez ainsi arrêter ou demander la détention d'un suspect, ou agir de la manière la plus appropriée à votre fonction. Vous avez aussi plus facilement accès aux bâtiments officiels liés à votre activité ainsi qu'aux archives et lieux de détention. De plus, dans votre juridiction, on vous offre le gîte et le couvert. Si vous n'occupez plus votre fonction, l'octroi de cette aide nécessitera peut-être de convaincre vos interlocuteurs, mais ils seront considérés comme neutres ou amicaux.</p>
<h3 id="reconfort-du-foyer">Réconfort du foyer <a class="header-anchor" href="#reconfort-du-foyer"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>À partir du moment où vous disposez d'un feu et de quelques aliments et ustensiles de base, vous êtes capable de préparer un repas revigorant qui saura contenter les estomacs vides et faire oublier les rigueurs d'un long voyage. Vous avez toujours sur vous les quelques épices indispensables pour ce faire.</p>
<h3 id="refuge">Refuge <a class="header-anchor" href="#refuge"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous avez une connaissance intime des zones urbaines, qui vous permet de dénicher un refuge sûr pour vous et vos compagnons. Ce n'est pas un endroit particulièrement confortable ou accueillant, mais vous pouvez gratuitement y trouver un peu de repos sans être inquiété par les intempéries ou les autorités.</p>
<h3 id="refuge-du-pelerin">Refuge du pèlerin <a class="header-anchor" href="#refuge-du-pelerin"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous êtes un acolyte et recevez le respect de ceux qui partagent votre foi. Vous pouvez accomplir les cérémonies religieuses liées à votre déité. Vous et vos compagnons d'aventure pouvez espérer recevoir des soins gratuits dans les temples, autels et autres endroits dédiés à la divinité que vous vénérez. Cela ne vous dispense par contre pas de fournir les ingrédients nécessaires au lancement des sorts. Ceux qui partagent votre religion peuvent aussi vous donner (mais seulement à vous) de quoi mener un train de vie modeste. Vous pouvez être lié à un temple spécifique dédié à votre déité ou votre panthéon et dans lequel vous avez un logement. Cela peut être le temple dans lequel vous officiez, si vous êtes resté en bons termes avec ses occupants, ou un temple qui est devenu votre nouvelle maison. Quand vous vous trouvez à proximité de votre temple, vous pouvez demander l'assistance des clercs qui s'y trouvent, dans la mesure où l'aide qu'ils vous apportent ne les met pas en danger et que vous êtes en bons termes avec eux.</p>
<h3 id="reseau-de-guilde">Réseau de guilde <a class="header-anchor" href="#reseau-de-guilde"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>En se positionnant comme intermédiaire privilégié dans une catégorie de biens ou de service, chaque guilde s'assure de contrôler au maximum le commerce et les échanges dans sa zone d'opération. De fait, les membres bénéficient d'un traitement de faveur partout où la guilde est installée. Outre des tarifs préférentiels pour le négoce, cela vous permet aussi d'accéder aux bâtiments de la guilde, d'y trouver éventuellement un abri confortable et de quoi vous approvisionner, ainsi que des informations via les membres locaux. Cela vous permet aussi d'accéder à certains services privilégiés, par des intermédiaires clandestins faisant affaire avec la guilde : contrebande, prostitution et trafics en tous genres.</p>
<h3 id="revelation">Révélation <a class="header-anchor" href="#revelation"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous avez eu une révélation. Votre vie solitaire et votre méditation vous ont donné les clés d'un secret dont vous ne comprenez pas encore tous les tenants et les aboutissants. Mais c'est elle qui vous a encouragé à sortir de votre réclusion volontaire. Déterminez un secret ou une révélation avec votre MJ. Il doit être assez flou pour vous pousser à l'aventure afin d'en savoir plus et, qui sait, de le contrer ou de le réaliser.</p>
<h3 id="rouages-de-la-justice">Rouages de la justice <a class="header-anchor" href="#rouages-de-la-justice"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous connaissez les rouages de la justice telle qu'elle est pratiquée dans votre région d'origine. Vous savez exploiter ces connaissances et votre propre influence pour garantir une peine réduite si jamais vous ou un de vos compagnons êtes la cible des foudres judiciaires.</p>
<h3 id="signes-de-piste">Signes de piste <a class="header-anchor" href="#signes-de-piste"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Lorsque vous évoluez dans votre milieu naturel de prédilection, vous savez lire les multiples signes de la nature qui sont invisibles à un œil moins averti que le vôtre. De plus, vous pratiquez un langage codé qui permet de laisser des indices à ceux qui, comme vous, ont embrassé le brigandage. Cela vous permet d'éviter la plupart des dangers et des embûches qui guettent souvent le voyageur dans les régions les moins civilisées du monde, et de communiquer avec d'autres brigands sans attirer l'attention.</p>
<h3 id="solidarite-populaire">Solidarité populaire <a class="header-anchor" href="#solidarite-populaire"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Les gens du commun se reconnaissent facilement entre eux et se serrent les coudes. Dans n'importe quelle communauté rurale, vous recevez facilement le gîte et le couvert chez l'habitant, souvent en échange de menus travaux. De plus, quand vous en avez besoin, vous trouvez toujours une tâche pouvant vous rapporter quelques pièces durement gagnées dans une ferme des environs. vous savez aussi reconnaître des signes indiquant la proximité d'une ferme, d'un village ou d'un hameau à quelques kilomètres à la ronde, et pouvez le trouver sans effort.</p>
<h3 id="spectacle-ambulant">Spectacle ambulant <a class="header-anchor" href="#spectacle-ambulant"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Votre art vous apporte bien des inconvénients, mais il a aussi ses bénéfices. Vous trouvez toujours un lieu où l'on vous offre le gîte et le couvert en échange d'une représentation pour égayer l'ambiance. Tant que vous prenez la peine de vous produire au moins une fois par jour (quand les clients sont nombreux), on vous fournit un logement et une nourriture aussi décente que possible. De plus, vous vous attirez les bonnes grâces de la foule, qui vous perçoit avec un excellent a priori. Cependant, vous ne passez jamais vraiment inaperçu, et plus vous restez dans une ville, plus on vous reconnaît.</p>
<h3 id="voyageur">Voyageur <a class="header-anchor" href="#voyageur"><i class="v-icon notranslate mdi mdi-link-variant"></i></a></h3>
<p>Vous connaissez les coutumes des petites communautés et des villages que vous traversez. Vous avez compris comment faire en sorte que l'on vous accepte sans pour autant vous imposer trop longtemps. Vous êtes capable de repérer la présence d'une communauté civilisée à plusieurs kilomètres, sachant où en trouver les traces. De plus, on vous offre toujours le gîte et le couvert, pour une nuit tout du moins.</p>
</ContentSlotsDistributor>
"},null]}