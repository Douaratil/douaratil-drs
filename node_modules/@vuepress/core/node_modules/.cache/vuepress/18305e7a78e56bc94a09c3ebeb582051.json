{"remainingRequest":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/olivier/Documents/douaratil-drs/docs/.vuepress/theme/layouts/GlobalLayout.vue?vue&type=template&id=60ca979a&","dependencies":[{"path":"/home/olivier/Documents/douaratil-drs/docs/.vuepress/theme/layouts/GlobalLayout.vue","mtime":1640161622032},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":1640785878621},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1640785880897},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":1640785878621},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js","mtime":1640785880897}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgInYtYXBwIiwKICAgIHsgc3RhdGljQ2xhc3M6ICJzcmQiIH0sCiAgICBbCiAgICAgIF9jKAogICAgICAgICJ2LW92ZXJsYXkiLAogICAgICAgIHsgYXR0cnM6IHsgdmFsdWU6IF92bS4kc3RvcmUuc3RhdGUubG9hZGluZyB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoInYtcHJvZ3Jlc3MtY2lyY3VsYXIiLCB7CiAgICAgICAgICAgIGF0dHJzOiB7IGluZGV0ZXJtaW5hdGU6ICIiLCBzaXplOiAiNjQiIH0KICAgICAgICAgIH0pCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiTmF2RHJhd2VyIiwgeyBzdGF0aWNDbGFzczogImQtcHJpbnQtbm9uZSIgfSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfdm0uaGFzUmlnaHREcmF3ZXIKICAgICAgICA/IF9jKCJSaWdodERyYXdlciIsIHsgc3RhdGljQ2xhc3M6ICJkLXByaW50LW5vbmUiIH0pCiAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJOYXZiYXIiLCB7IHN0YXRpY0NsYXNzOiAiZC1wcmludC1ub25lIiB9KSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKAogICAgICAgICJ2LWNvbnRlbnQiLAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAidi1jb250YWluZXIiLAogICAgICAgICAgICB7IHJlZjogImNvbnRhaW5lciIsIGF0dHJzOiB7IGZsdWlkOiAiIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LXJvdyIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGFsaWduOiAic3RhcnQiLCBqdXN0aWZ5OiAiY2VudGVyIiB9IH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBjb2xzOiAiMTIiIH0gfSwKICAgICAgICAgICAgICAgICAgICBbX2MoIkRlZmF1bHRHbG9iYWxMYXlvdXQiKV0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgIHZhbHVlOgogICAgICAgICAgICAgICAgICAgIF92bS4kdnVldGlmeS5icmVha3BvaW50LmxnQW5kVXAgJiYKICAgICAgICAgICAgICAgICAgICBfdm0uJHN0b3JlLnN0YXRlLmhhc1JpZ2h0RHJhd2VyLAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOgogICAgICAgICAgICAgICAgICAgICIkdnVldGlmeS5icmVha3BvaW50LmxnQW5kVXAgJiYgJHN0b3JlLnN0YXRlLmhhc1JpZ2h0RHJhd2VyIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgY2xhc3M6IF92bS5yaWdodERyYXdlckJ1dHRvbkNTUygpLAogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogInByaW1hcnkiLAogICAgICAgICAgICAgICAgc21hbGw6ICIiLAogICAgICAgICAgICAgICAgdG9wOiAiIiwKICAgICAgICAgICAgICAgIHJpZ2h0OiAiIiwKICAgICAgICAgICAgICAgIGZpeGVkOiAiIiwKICAgICAgICAgICAgICAgIGZhYjogIiIKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKQogICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNldFJpZ2h0RHJhd2VyLmFwcGx5KG51bGwsIGFyZ3VtZW50cykKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfdm0uJHN0b3JlLnN0YXRlLnJpZ2h0RHJhd2VyCiAgICAgICAgICAgICAgICA/IF9jKCJ2LWljb24iLCBbX3ZtLl92KCJtZGktY2hldnJvbi1yaWdodCIpXSkKICAgICAgICAgICAgICAgIDogX2MoInYtaWNvbiIsIHsgYXR0cnM6IHsgbGVmdDogIiIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJtZGktY2hldnJvbi1sZWZ0IikKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWZhYi10cmFuc2l0aW9uIiwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS50b1RvcEJ1dHRvbiwKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJ0b1RvcEJ1dHRvbiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzY3JvbGwiLAogICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2Nyb2xsIiwKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ub25TY3JvbGwsCiAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAib25TY3JvbGwiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImQtcHJpbnQtbm9uZSIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJwcmltYXJ5IiwKICAgICAgICAgICAgICAgICAgICBmYWI6ICIiLAogICAgICAgICAgICAgICAgICAgIGJvdHRvbTogIiIsCiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6ICIiLAogICAgICAgICAgICAgICAgICAgIGZpeGVkOiAiIgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLnRvVG9wIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJ2LWljb24iLCB7IHN0YXRpY0NsYXNzOiAiZC1wcmludC1ub25lIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJtZGktY2hldnJvbi11cCIpCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoCiAgICAgICAgInYtYm90dG9tLXNoZWV0IiwKICAgICAgICB7CiAgICAgICAgICBhdHRyczogeyAiaGlkZS1vdmVybGF5IjogIiIgfSwKICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgIHZhbHVlOiBfdm0uY29va2llQ29uc2VudERpYWxvZywKICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgIF92bS5jb29raWVDb25zZW50RGlhbG9nID0gJCR2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGV4cHJlc3Npb246ICJjb29raWVDb25zZW50RGlhbG9nIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoInYtc2hlZXQiLCB7IGF0dHJzOiB7IHRpbGU6ICIiIH0gfSwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICAgImNvbnRhaW5lciB0ZXh0LWNlbnRlciB0ZXh0LW1kLWxlZnQgZC1tZC1mbGV4IGFsaWduLW1kLWNlbnRlciBqdXN0aWZ5LW1kLXNwYWNlLWJldHdlZW4gcHktMyBib2R5LTIiCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgIkNlIHNpdGUgdXRpbGlzZSBkZXMgY29va2llcyBwb3VyIHNvbiBib24gZm9uY3Rpb25uZW1lbnQgdW5pcXVlbWVudCBldCBuJ3V0aWxpc2UgcGFzIHZvcyBkb25uw6llcyDDoCBkJ2F1dHJlcyBmaW5zIHF1ZSBsYSBzaW1wbGUgbmF2aWdhdGlvbi4gIgogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm15LTQgbXktbWQtMCIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgY29sb3I6ICJwcmltYXJ5IiB9LAogICAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uc2V0Q29va2llQ29uc2VudCB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkNvbXByaXMiKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKQogICAgICAgICAgXSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKAogICAgICAgICJ2LXNuYWNrYmFyIiwKICAgICAgICB7CiAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICB2YWx1ZTogX3ZtLiRzdG9yZS5zdGF0ZS5pc09wZW5TbmFja2JhciwKICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgIF92bS4kc2V0KF92bS4kc3RvcmUuc3RhdGUsICJpc09wZW5TbmFja2JhciIsICQkdikKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZXhwcmVzc2lvbjogIiRzdG9yZS5zdGF0ZS5pc09wZW5TbmFja2JhciIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF92bS5fdigiXG4gICAgIiArIF92bS5fcyhfdm0uJHN0b3JlLnN0YXRlLnNuYWNrYmFyVGV4dCkgKyAiXG4gICAgIiksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7IGNvbG9yOiAicmVkIiwgdGV4dDogIiIgfSwKICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLiRzdG9yZS5jb21taXQoInNldElzT3BlblNuYWNrYmFyIiwgZmFsc2UpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCJcbiAgICAgIEZlcm1lclxuICAgICIpXQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoCiAgICAgICAgInYtZGlhbG9nIiwKICAgICAgICB7CiAgICAgICAgICBhdHRyczogeyAibWF4LXdpZHRoIjogIjYwMCIgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJjbGljazpvdXRzaWRlIjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgcmV0dXJuIF92bS4kc3RvcmUuY29tbWl0KAogICAgICAgICAgICAgICAgInNldElzT3BlblNoYXJlSG9tZWJyZXdEaWFsb2ciLAogICAgICAgICAgICAgICAgIV92bS4kc3RvcmUuc3RhdGUuaXNPcGVuU2hhcmVIb21lYnJld0RpYWxvZwogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgIHZhbHVlOiBfdm0uJHN0b3JlLnN0YXRlLmlzT3BlblNoYXJlSG9tZWJyZXdEaWFsb2csCiAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICBfdm0uJHNldChfdm0uJHN0b3JlLnN0YXRlLCAiaXNPcGVuU2hhcmVIb21lYnJld0RpYWxvZyIsICQkdikKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZXhwcmVzc2lvbjogIiRzdG9yZS5zdGF0ZS5pc09wZW5TaGFyZUhvbWVicmV3RGlhbG9nIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWNhcmQiLAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1jYXJkLXRpdGxlIiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkbGluZSBkLWZsZXgganVzdGlmeS1zcGFjZS1iZXR3ZWVuIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoIlBhcnRhZ2UiKV0pLAogICAgICAgICAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBjb2xvcjogInByaW1hcnkiLCBpY29uOiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uJHN0b3JlLmNvbW1pdCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZXRJc09wZW5TaGFyZUhvbWVicmV3RGlhbG9nIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICFfdm0uJHN0b3JlLnN0YXRlLmlzT3BlblNoYXJlSG9tZWJyZXdEaWFsb2cKICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFtfYygidi1pY29uIiwgW192bS5fdigibWRpLWNsb3NlIildKV0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1jYXJkLXRleHQiLAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygidi10ZXh0LWZpZWxkIiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICBpZDogImNvcHktdXJpIiwKICAgICAgICAgICAgICAgICAgICAgIG91dGxpbmVkOiAiIiwKICAgICAgICAgICAgICAgICAgICAgIHJlYWRvbmx5OiAiIiwKICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAiQ29waWV6IGxlIGxpZW4gcG91ciBwYXJ0YWdlciIsCiAgICAgICAgICAgICAgICAgICAgICBoaW50OiBfdm0uaGludENvcGllZCwKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOgogICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNpdGUudGhlbWVDb25maWcuZG9tYWluICsKICAgICAgICAgICAgICAgICAgICAgICAgIi9ob21lYnJldy8/aD0iICsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzdG9yZS5zdGF0ZS5zaGFyZVVSSSwKICAgICAgICAgICAgICAgICAgICAgICJhcHBlbmQtb3V0ZXItaWNvbiI6ICJtZGktY29udGVudC1jb3B5IgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICJjbGljazphcHBlbmQtb3V0ZXIiOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5jb3B5VVJJKCJjb3B5LXVyaSIpCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciIgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogImFjY2VudCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXByZXNzZWQ6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluazogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bzogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiAiL2hvbWVicmV3LyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5OiB7IGg6IF92bS4kc3RvcmUuc3RhdGUuc2hhcmVVUkkgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kc3RvcmUuY29tbWl0KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzZXRJc09wZW5TaGFyZUhvbWVicmV3RGlhbG9nIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhX3ZtLiRzdG9yZS5zdGF0ZS5pc09wZW5TaGFyZUhvbWVicmV3RGlhbG9nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIlZvaXIgbGEgcGFnZSIpXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}