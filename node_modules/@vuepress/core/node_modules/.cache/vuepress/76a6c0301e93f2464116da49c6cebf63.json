{"remainingRequest":"/home/olivier/Documents/douaratil-drs/node_modules/babel-loader/lib/index.js??ref--3-1!/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/olivier/Documents/douaratil-drs/docs/.vuepress/theme/components/AbilityCalculator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/olivier/Documents/douaratil-drs/docs/.vuepress/theme/components/AbilityCalculator.vue","mtime":1634294763185},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AbilityCalculator.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"ability-scores-calculator\">\n    <v-row>\n      <v-col :cols=\"12\">\n        <v-row>\n          <v-col>\n            <v-btn color=\"primary\" @click.stop=\"reset\"><v-icon>mdi-eraser</v-icon> Réinitialiser</v-btn>\n          </v-col>\n        </v-row>\n\n        <v-row>\n          <v-col>\n            <v-select dense :items=\"races\" label=\"Race\" item-text=\"label\" v-model=\"selectedRace\" return-object outlined @change=\"selectRace(true, true)\"></v-select>\n          </v-col>\n          <v-col v-if=\"selectedRace && selectedRace.variants\">\n            <v-select dense :items=\"selectedRace.variants\" label=\"Variantes\" item-text=\"label\" v-model=\"selectedSubrace\" return-object outlined @change=\"selectRace(true)\"></v-select>\n          </v-col>\n          <v-col v-if=\"race && race.freeAbilityBonuses\">\n            <v-select dense :items=\"abilityScoresChoices\" multiple label=\"Bonus aux caractéristiques\" v-model=\"abilityBonuses\" outlined @change=\"selectAbilityBonus\"></v-select>\n          </v-col>\n        </v-row>\n\n        <v-row>\n          <v-col>\n            <v-select dense :items=\"generationMethodChoices\" label=\"Méthode d'attribution\" v-model=\"generationMethod\" outlined @change=\"selectGenerationMethod\"></v-select>\n          </v-col>\n          <v-col>\n            <v-select dense :items=\"powerTiers\" return-object label=\"Niveau de puissance\" v-model=\"powerTier\" outlined :hint=\"hintPowerTier\" persistent-hint @change=\"selectPowerTier\"></v-select>\n          </v-col>\n        </v-row>\n\n        <v-row>\n          <v-col>\n            <v-simple-table>\n              <template v-slot:default>\n                <thead>\n                  <tr>\n                    <th class=\"text-center\">Caractéristique</th>\n                    <th class=\"text-center\">Base</th>\n                    <th class=\"text-center\"></th>\n                    <th class=\"text-center\">Bonus racial</th>\n                    <th class=\"text-center\"></th>\n                    <th class=\"text-center\"><strong>Total</strong></th>\n                    <th class=\"text-center\"><strong>Mod.</strong></th>\n                    <th v-if=\"generationMethod == 'pointBuy'\" class=\"text-center\">Coût</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"ability in abilityScores\" :key=\"ability.key\">\n                    <td class=\"text-center\"><span class=\"subtitle-2\">{{ ability.label }}</span></td>\n                    <td class=\"text-center ability-field\">\n                      <div v-if=\"generationMethod == 'pointBuy'\" class=\"d-flex align-center\">\n                        <v-text-field class=\"text-center\" readonly outlined hide-details dense :value=\"ability.value\">\n                          <template v-slot:prepend>\n                            <v-btn icon dense color=\"accent\" :disabled=\"ability.value <= powerTier.min\" @click.stop=\"ability.value--\"><v-icon>mdi-minus-circle</v-icon></v-btn>\n                          </template>\n                          <template v-slot:append-outer>\n                            <v-btn icon dense color=\"accent\" :disabled=\"ability.value >= powerTier.max\" @click.stop=\"ability.value++\"><v-icon>mdi-plus-circle</v-icon></v-btn>\n                          </template>\n                        </v-text-field>\n                      </div>\n                      <template v-else-if=\"generationMethod == 'standardArray'\">\n                        <v-select v-if=\"!ability.value\" dense :items=\"standardArrayValues\" v-model=\"ability.value\" outlined hide-details clearable @change=\"selectAbilityValue(ability)\"></v-select>\n                        <v-text-field v-else class=\"text-center\" outlined hide-details dense readonly clearable v-model=\"ability.value\"></v-text-field>\n                      </template>\n                    </td>\n                    <td class=\"text-center\">+</td>\n                    <td class=\"text-center\">{{ ability.racialBonus }}</td>\n                    <td class=\"text-center\">=</td>\n                    <td class=\"text-center\"><strong>{{ getTotal(ability) }}</strong></td>\n                    <td class=\"text-center\"><strong>{{ displayBonus(getModifier(getTotal(ability))) }}</strong></td>\n                    <td v-if=\"generationMethod == 'pointBuy'\" class=\"text-center\">{{ getAbilityScoreCost(ability) }}</td>\n                  </tr>\n                  <tr v-if=\"generationMethod == 'pointBuy' && powerTier\"><td class=\"text-right\" colspan=\"8\">Points restants : {{ pointsRemaining }}/{{ powerTier.pointBuy }}</td></tr>\n                </tbody>\n              </template>\n            </v-simple-table>\n          </v-col>\n        </v-row>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport { getModifier, displayBonus, displayAbilityScore } from '@theme/util/monsterHelpers'\nimport { ABILITYSCORECOSTS, ABILITYSCORES, POWERTIERS } from '../../data/abilityScores'\nimport { races } from '../../data/races'\n\nconst GENERATION_METHOD_CHOICES = [\n  { text: 'Méthode fixe', value: 'standardArray' },\n  { text: 'Méthode par répartition', value: 'pointBuy' }\n]\n\nexport default {\n  data () {\n    return {\n      generationMethodChoices: GENERATION_METHOD_CHOICES,\n      generationMethod: GENERATION_METHOD_CHOICES[1].value,\n      abilityScoreCosts: ABILITYSCORECOSTS,\n      powerTiers: POWERTIERS,\n      abilityScoresChoices: null,\n      races: races,\n      selectedSubrace: null,\n      selectedRace: null,\n      race: null,\n      powerTier: POWERTIERS[1],\n      abilityScores: [\n        { key: 'for', label: 'Force', value: 8, racialBonus: 0},\n        { key: 'dex', label: 'Dextérité', value: 8, racialBonus: 0},\n        { key: 'con', label: 'Constitution', value: 8, racialBonus: 0},\n        { key: 'int', label: 'Intelligence', value: 8, racialBonus: 0},\n        { key: 'sag', label: 'Sagesse', value: 8, racialBonus: 0},\n        { key: 'cha', label: 'Charisme', value: 8, racialBonus: 0}\n      ],\n      abilityBonuses: []\n    }\n  },\n\n  computed: {\n    hintPowerTier () {\n      if (this.generationMethod && this.powerTier) {\n        if (this.generationMethod == 'standardArray') {\n          return 'Valeurs fixes : ' + this.powerTier.standardArray\n        } else if (this.generationMethod == 'pointBuy') {\n          return 'Points disponibles : ' + this.powerTier.pointBuy\n        }\n      }\n      return ''\n    },\n\n    pointsRemaining () {\n      if (!this.powerTier) {\n        return 0\n      }\n      let pointSpent = 0\n      for (let ability of this.abilityScores) {\n        if (ABILITYSCORECOSTS[ability.value]) {\n          pointSpent += ABILITYSCORECOSTS[ability.value].cost\n        }\n      }\n      return this.powerTier.pointBuy - pointSpent\n    },\n\n    standardArrayValues () {\n      let values = Array.from(this.powerTier.standardArray)\n      for (let ability of this.abilityScores) {\n        if (ability.value) {\n          values.splice(values.indexOf(ability.value), 1)\n        }\n      }\n      return values\n    }\n  },\n\n  methods: {\n    getTotal (ability) {\n      let total = 0\n      if (!ability.value) {\n        return '--'\n      }\n      return parseInt(ability.value) + parseInt(ability.racialBonus)\n    },\n\n    getAbilityScoreCost (ability) {\n      if (ABILITYSCORECOSTS[ability.value]) {\n        return ABILITYSCORECOSTS[ability.value].cost\n      }\n      return null\n    },\n\n    getModifier (value) {\n      if (value == '--') {\n        return '--'\n      }\n      return getModifier(value)\n    },\n\n    displayBonus (score) {\n      return displayBonus(score)\n    },\n\n    selectRace (clearAbilities = false, clearSubrace = false) {\n      if (clearSubrace) {\n        this.selectedSubrace = null\n      }\n\n      if (this.selectedSubrace) {\n        this.race = this.selectedSubrace\n      } else {\n        this.race = this.selectedRace\n      }\n\n      for (let ability of this.abilityScores) {\n        ability.racialBonus = 0\n        if (this.race.abilityBonuses) {\n          for (var bonus of this.race.abilityBonuses) {\n            if (bonus.ability == ability.key) {\n              ability.racialBonus = bonus.value\n            }\n          }\n        }\n      }\n\n      if (clearAbilities) {\n        this.abilityBonuses = []\n      }\n\n      let choices = Array.from(ABILITYSCORES)\n      if (this.race && this.race.abilityBonuses) {\n        for (let abilityBonus of this.race.abilityBonuses) {\n          choices.splice(choices.findIndex(item => item.value == abilityBonus.key), 1)\n        }\n      }\n      this.abilityScoresChoices = choices\n    },\n\n    selectAbilityBonus (e) {\n      if(e.length > this.race.freeAbilityBonuses.qty) {\n        e.pop()\n      } else {\n        this.selectRace()\n        for (let bonus of this.abilityBonuses) {\n          this.abilityScores[this.abilityScores.findIndex(item => item.key == bonus)].racialBonus = this.race.freeAbilityBonuses.value\n        }\n      }\n    },\n\n    selectGenerationMethod () {\n      // Réinitialisation des valeurs au changement de la méthode d'attribution\n      if (this.generationMethod) {\n        if (this.generationMethod == 'pointBuy') {\n          for (let ability of this.abilityScores) {\n            ability.value = 8\n          }\n        } else if (this.generationMethod == 'standardArray') {\n          for (let ability of this.abilityScores) {\n            ability.value = null\n          }\n        }\n      }\n    },\n\n    selectPowerTier () {\n      if (this.generationMethod == 'standardArray') {\n        for (let ability of this.abilityScores) {\n          ability.value = null\n        }\n      }\n    },\n\n    selectAbilityValue (ability) {\n      // console.log(ability)\n    },\n\n    reset () {\n      this.selectedRace = null\n      this.selectedSubrace = null\n      this.race = null\n      this.generationMethod = GENERATION_METHOD_CHOICES[1].value\n      this.powerTier = POWERTIERS[1]\n      this.abilityScores = [\n        { key: 'for', label: 'Force', value: 8, racialBonus: 0},\n        { key: 'dex', label: 'Dextérité', value: 8, racialBonus: 0},\n        { key: 'con', label: 'Constitution', value: 8, racialBonus: 0},\n        { key: 'int', label: 'Intelligence', value: 8, racialBonus: 0},\n        { key: 'sag', label: 'Sagesse', value: 8, racialBonus: 0},\n        { key: 'cha', label: 'Charisme', value: 8, racialBonus: 0}\n      ]\n      this.abilityBonuses = []\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.v-input.text-center {\n  input {\n    text-align: center;\n  }\n}\n.ability-field {\n  width: 180px;\n  .v-input__prepend-outer, .v-input__append-outer {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n}\n</style>\n"],"sourceRoot":"docs/.vuepress/theme/components"}]}