{"remainingRequest":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js??ref--1-1!/home/olivier/Documents/douaratil-drs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/olivier/Documents/douaratil-drs/docs/archetypes/drodan/README.md?vue&type=template&id=2d6fdf5f&","dependencies":[{"path":"/home/olivier/Documents/douaratil-drs/docs/archetypes/drodan/README.md","mtime":1640161622036},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":1640785878621},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1640785880897},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":1640785878621},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js","mtime":1640785880897},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/@vuepress/markdown-loader/index.js","mtime":1640785878349}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}