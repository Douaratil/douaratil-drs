{"remainingRequest":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/olivier/Documents/douaratil-drs/docs/.vuepress/theme/components/MonsterFilters.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/olivier/Documents/douaratil-drs/docs/.vuepress/theme/components/MonsterFilters.vue","mtime":1634294763185},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MonsterFilters.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"MonsterFilters.vue","sourceRoot":"docs/.vuepress/theme/components","sourcesContent":["<template>\n  <div class=\"monster-filters pa-1\">\n\n    <v-text-field\n      class=\"mb-1 mx-2\"\n      v-model=\"search\"\n      label=\"Filtrer\"\n      single-line\n      hide-details\n      clearable\n      color=\"accent\"\n      ></v-text-field>\n\n    <v-expansion-panels multiple flat hover v-model=\"panels\">\n\n      <v-expansion-panel>\n        <v-expansion-panel-header>Tranche d'ID</v-expansion-panel-header>\n        <v-expansion-panel-content class=\"pt-4\">\n          <v-range-slider\n            class=\"mt-6\"\n            v-model=\"challengeRange\"\n            min=\"0\"\n            :max=\"challenges.length-1\"\n            thumb-size=\"24\"\n            thumb-label=\"always\"\n            hide-details\n            @end=\"onEndChallengeRange\"\n            >\n            <template v-slot:thumb-label=\"{ value }\">\n              {{ challenges[value].label }}\n            </template>\n          </v-range-slider>\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-header>Types</v-expansion-panel-header>\n        <v-expansion-panel-content>\n          <v-btn class=\"mb-2 mt-2\" small color=\"primary\" @click=\"resetTypes\" dark>Réinitialiser</v-btn>\n          <v-switch v-for=\"(type, idx) in types\" v-model=\"type.value\" :label=\"type.label\" dense class=\"ma-0\" @change=\"switchType\" color=\"accent\"></v-switch>\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-header>Tailles</v-expansion-panel-header>\n        <v-expansion-panel-content>\n          <v-btn class=\"mb-2 mt-2\" small color=\"primary\" @click=\"resetSizes\" dark>Réinitialiser</v-btn>\n          <v-switch v-for=\"size in sizes\" v-model=\"size.value\" :label=\"size.label\" dense class=\"ma-0\" @change=\"switchSize\" color=\"accent\"></v-switch>\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-header>Environnements</v-expansion-panel-header>\n        <v-expansion-panel-content>\n          <v-btn class=\"mb-2 mt-2\" small color=\"primary\" @click=\"resetEnvironments\" dark>Réinitialiser</v-btn>\n          <v-switch v-for=\"(environment, idx) in environments\" v-model=\"environment.value\" :label=\"environment.label\" dense class=\"ma-0\" @change=\"switchEnvironment\" color=\"accent\"></v-switch>\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-header>Types de donjons</v-expansion-panel-header>\n        <v-expansion-panel-content>\n          <v-btn class=\"mb-2 mt-2\" small color=\"primary\" @click=\"resetDungeonTypes\" dark>Réinitialiser</v-btn>\n          <v-switch v-for=\"(dungeonType, idx) in dungeonTypes\" v-model=\"dungeonType.value\" :label=\"dungeonType.label\" dense class=\"ma-0\" @change=\"switchDungeonType\" color=\"accent\"></v-switch>\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-header>Categories</v-expansion-panel-header>\n        <v-expansion-panel-content>\n          <v-btn class=\"mb-2 mt-2\" small color=\"primary\" @click=\"resetCategories\" dark>Réinitialiser</v-btn>\n          <v-switch v-for=\"category in categories\" v-model=\"category.value\" :label=\"category.label\" dense class=\"ma-0\" @change=\"switchCategory\" color=\"accent\"></v-switch>\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n\n    </v-expansion-panels>\n\n  </div>\n</template>\n\n<script>\n// import { mapMutations } from 'vuex'\nimport { setUrlParams, getUrlParameter, setBooleanMutation, setListMutation } from '@theme/util/filterHelpers'\nimport { CHALLENGES } from '../../data/monsters'\n\nexport default {\n  name: 'MonsterFilters',\n\n  data () {\n    return {\n      panels: [],\n      challenges: CHALLENGES\n    }\n  },\n\n  computed: {\n    search: {\n      get () {\n        return this.$store.state.monsterFilters.search\n      },\n      set (newValue) {\n        this.$store.commit('monsterFilters/setSearch', newValue)\n      }\n    },\n\n    challengeRange: {\n      get () {\n        return this.$store.state.monsterFilters.challengeRange\n      },\n      set (newValue) {\n        this.$store.commit('monsterFilters/setChallengeRange', newValue)\n      }\n    },\n\n    types: {\n      get () {\n        return this.$store.state.monsterFilters.types\n      },\n      set (newValue) {\n        this.$store.commit('monsterFilters/setTypes', newValue)\n      }\n    },\n\n    sizes: {\n      get () {\n        return this.$store.state.monsterFilters.sizes\n      },\n      set (newValue) {\n        this.$store.commit('monsterFilters/setSizes', newValue)\n      }\n    },\n\n    environments: {\n      get () {\n        return this.$store.state.monsterFilters.environments\n      },\n      set (newValue) {\n        this.$store.commit('monsterFilters/setEnvironments', newValue)\n      }\n    },\n\n    dungeonTypes: {\n      get () {\n        return this.$store.state.monsterFilters.dungeonTypes\n      },\n      set (newValue) {\n        this.$store.commit('monsterFilters/setDungeonTypes', newValue)\n      }\n    },\n\n    categories: {\n      get () {\n        return this.$store.state.monsterFilters.categories\n      },\n      set (newValue) {\n        this.$store.commit('monsterFilters/setCategories', newValue)\n      }\n    },\n  },\n\n  methods: {\n\n    onEndChallengeRange () {\n      if (this.challengeRange[0] > this.challengeRange[1]) {\n        let min = range[1]\n        let max = range[0]\n        this.challengeRange[0] = min\n        this.challengeRange[1] = max\n      }\n      let range = [Number(CHALLENGES[this.challengeRange[0]].value), Number(CHALLENGES[this.challengeRange[1]].value)]\n      setUrlParams('trancheID', range)\n    },\n\n    switchType () {\n      let list = []\n      for (var i = 0; i < this.types.length; i++) {\n        if (this.types[i].value) {\n          list.push(this.types[i].label)\n        }\n      }\n      setUrlParams('types', list)\n    },\n\n    switchSize () {\n      let list = []\n      for (var i = 0; i < this.sizes.length; i++) {\n        if (this.sizes[i].value) {\n          list.push(this.sizes[i].label)\n        }\n      }\n      setUrlParams('tailles', list)\n    },\n\n    switchEnvironment () {\n      let list = []\n      for (var i = 0; i < this.environments.length; i++) {\n        if (this.environments[i].value) {\n          list.push(this.environments[i].label)\n        }\n      }\n      setUrlParams('environnements', list)\n    },\n\n    switchDungeonType () {\n      let list = []\n      for (var i = 0; i < this.dungeonTypes.length; i++) {\n        if (this.dungeonTypes[i].value) {\n          list.push(this.dungeonTypes[i].label)\n        }\n      }\n      setUrlParams('donjons', list)\n    },\n\n    switchCategory () {\n      let list = []\n      for (var i = 0; i < this.categories.length; i++) {\n        if (this.categories[i].value) {\n          list.push(this.categories[i].label)\n        }\n      }\n      setUrlParams('categories', list)\n    },\n\n    setColor (value, compare, color) {\n      if (value === compare) {\n        return color\n      }\n      return this.$site.themeConfig.primaryColor\n    },\n\n    resetTypes () {\n      this.$store.commit('monsterFilters/resetTypes')\n      this.switchType()\n    },\n\n    resetSizes () {\n      this.$store.commit('monsterFilters/resetSizes')\n      this.switchSize()\n    },\n\n    resetEnvironments () {\n      this.$store.commit('monsterFilters/resetEnvironments')\n      this.switchEnvironment()\n    },\n\n    resetDungeonTypes () {\n      this.$store.commit('monsterFilters/resetDungeonTypes')\n      this.switchDungeonType()\n    },\n\n    resetCategories () {\n      this.$store.commit('monsterFilters/resetCategories')\n      this.switchCategory()\n    },\n  },\n\n  mounted () {\n    this.$store.dispatch('monsterFilters/reset')\n\n    let challengeRange = getUrlParameter(window.location.href, \"trancheID\").split(\",\")\n    let selectedSizes = getUrlParameter(window.location.href, \"tailles\").split(\",\")\n    let selectedTypes = getUrlParameter(window.location.href, \"types\").split(\",\")\n    let selectedEnvironments = getUrlParameter(window.location.href, \"environnements\").split(\",\")\n    let selectedDungeonTypes = getUrlParameter(window.location.href, \"donjons\").split(\",\")\n    let selectedCategories = getUrlParameter(window.location.href, \"categories\").split(\",\")\n\n    if (challengeRange && challengeRange[0] != '' && challengeRange[1] != '') {\n      let convertedChallengeRange = []\n      let min = CHALLENGES.findIndex(e => e.value == challengeRange[0])\n      if (min !== -1) {\n        convertedChallengeRange[0] = Number(min)\n      } else {\n        convertedChallengeRange[0] = Number(0)\n      }\n      let max = CHALLENGES.findIndex(e => e.value == challengeRange[1])\n      if (max !== -1) {\n        convertedChallengeRange[1] = Number(max)\n      } else {\n        convertedChallengeRange[1] = Number(CHALLENGES.length - 1)\n      }\n      this.$store.commit('monsterFilters/setChallengeRange', convertedChallengeRange)\n    }\n    setListMutation(selectedTypes, this.$store, 'monsterFilters/setTypesFromList')\n    setListMutation(selectedSizes, this.$store, 'monsterFilters/setSizesFromList')\n    setListMutation(selectedEnvironments, this.$store, 'monsterFilters/setEnvironmentsFromList')\n    setListMutation(selectedDungeonTypes, this.$store, 'monsterFilters/setDungeonTypesFromList')\n    setListMutation(selectedCategories, this.$store, 'monsterFilters/setCategoriesFromList')\n  }\n}\n</script>\n\n<style lang=\"scss\">\n</style>\n"]}]}