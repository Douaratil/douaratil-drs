{"remainingRequest":"/home/olivier/Documents/douaratil-drs/node_modules/babel-loader/lib/index.js??ref--3-1!/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/olivier/Documents/douaratil-drs/docs/.vuepress/theme/components/Monster.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/olivier/Documents/douaratil-drs/docs/.vuepress/theme/components/Monster.vue","mtime":1634294763185},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Monster.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <main class=\"page content\">\n\n    <div class=\"theme-default-content\">\n      <template v-if=\"!hideTitle\">\n        <h1 v-if=\"!isList\">{{ monster.title }}</h1>\n        <h2 v-else>{{ monster.title }}</h2>\n      </template>\n      <div class=\"monster-type-size-alignment title\">\n        {{ displayMonsterTypeSizeAlignment() }}\n      </div>\n      <div class=\"monster-details\">\n        <div class=\"break-avoid\">\n          <!-- Statblock -->\n          <div class=\"monster-armor-class\">\n            <strong>Valeur de défense</strong>\n            <span>{{ displayAC() }}</span>\n          </div>\n          <div class=\"monster-hit-points\">\n            <strong v-if=\"$store.state.l5r\">Points de combativité</strong>\n            <strong v-else>points d'action</strong>\n            <span>{{ hp }}</span>\n          </div>\n          <div v-if=\"$store.state.l5r\" class=\"monster-vitality-points\">\n            <strong>Points de vitalité</strong>\n            <span>{{ vp }}</span>\n          </div>\n          <div class=\"monster-movement\">\n            <strong>Vitesse</strong>\n            <template>{{ displayMovement() }}</template>\n          </div>\n          <div class=\"monster-ability-scores d-flex\">\n            <div class=\"monster-ability-scores-physical d-flex\">\n              <div class=\"ability-str text-center\">\n                <div class=\"ability-label\">\n                  <strong>For</strong>\n                </div>\n                <div class=\"ability-score\">\n                  {{ displayAbilityScore(monsterStats.abilityScores.for) }}\n                </div>\n              </div>\n              <div class=\"ability-dex text-center\">\n                <div class=\"ability-label\">\n                  <strong>Dex</strong>\n                </div>\n                <div class=\"ability-score\">\n                  {{ displayAbilityScore(monsterStats.abilityScores.dex) }}\n                </div>\n              </div>\n              <div class=\"ability-con text-center\">\n                <div class=\"ability-label\">\n                  <strong>Con</strong>\n                </div>\n                <div class=\"ability-score\">\n                  {{ displayAbilityScore(monsterStats.abilityScores.con) }}\n                </div>\n              </div>\n            </div>\n            <div class=\"monster-ability-scores-mental d-flex\">\n              <div class=\"ability-int text-center\">\n                <div class=\"ability-label\">\n                  <strong>Int</strong>\n                </div>\n                <div class=\"ability-score\">\n                  {{ displayAbilityScore(monsterStats.abilityScores.int) }}\n                </div>\n              </div>\n              <div class=\"ability-wis text-center\">\n                <div class=\"ability-label\">\n                  <strong>Sag</strong>\n                </div>\n                <div class=\"ability-score\">\n                  {{ displayAbilityScore(monsterStats.abilityScores.sag) }}\n                </div>\n              </div>\n              <div class=\"ability-cha text-center\">\n                <div class=\"ability-label\">\n                  <strong>Cha</strong>\n                </div>\n                <div class=\"ability-score\">\n                  {{ displayAbilityScore(monsterStats.abilityScores.cha) }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"break-avoid\">\n          <div class=\"monster-saving-throws\" v-if=\"monsterStats.customSavingThrows || (monsterStats.savingThrows && monsterStats.savingThrows.length > 0)\">\n            <strong>Jets de sauvegarde</strong>\n              <template v-if=\"monsterStats.customSavingThrows\">{{monsterStats.customSavingThrows}}</template>\n              <template v-else>\n                <template v-for=\"(savingThrow, idx) in monsterStats.savingThrows\">\n                  <template>{{displaySavingThrowBonus(savingThrow)}}</template><template v-if=\"idx < monsterStats.savingThrows.length - 1\">, </template>\n                </template>\n              </template>\n          </div>\n          <div class=\"monster-skills\" v-if=\"monsterStats.customSkills || (monsterStats.skills && monsterStats.skills.length > 0)\">\n            <strong>Compétences</strong>\n            <template v-if=\"monsterStats.customSkills\">{{monsterStats.customSkills}}</template>\n            <template v-else>\n              <span v-for=\"(skill, idx) in monsterStats.skills\">\n                <template>{{displaySkillBonus(skill)}}</template><template v-if=\"idx < monsterStats.skills.length - 1\">, </template>\n              </span>\n            </template>\n          </div>\n          <div class=\"monster-damage-type-vulnerabilities\" v-if=\"monsterStats.customDamageTypeVulnerabilities || (monsterStats.damageTypeVulnerabilities && monsterStats.damageTypeVulnerabilities.length > 0)\">\n            <strong>Vulnérabilité aux dégâts</strong>\n            <span v-if=\"monsterStats.customDamageTypeVulnerabilities\">{{ monsterStats.customDamageTypeVulnerabilities }}</span>\n            <span v-else v-html=\"displayDamageTypes(monsterStats.damageTypeVulnerabilities)\"></span>\n          </div>\n          <div class=\"monster-damage-type-resistances\" v-if=\"monsterStats.damageTypeResistances && monsterStats.damageTypeResistances.length > 0\">\n            <strong>Résistance aux dégâts</strong>\n            <span v-html=\"displayDamageTypes(monsterStats.damageTypeResistances)\"></span>\n          </div>\n          <div class=\"monster-damage-type-immunities\" v-if=\"monsterStats.damageTypeImmunities && monsterStats.damageTypeImmunities.length > 0\">\n            <strong>Immunité contre les dégâts</strong>\n            <span v-html=\"displayDamageTypes(monsterStats.damageTypeImmunities)\"></span>\n          </div>\n          <div class=\"monster-condition-immunities\" v-if=\"monsterStats.conditionImmunities && monsterStats.conditionImmunities.length > 0\">\n            <strong>Immunité contre <template v-if=\"monsterStats.conditionImmunities.length == 1\">l'état</template><template v-else>les états</template></strong>\n            <!-- <span v-html=\"displayConditionImmunities()\"></span> -->\n            <span v-for=\"(condition, idx) in monsterStats.conditionImmunities\">\n              <template v-if=\"idx < monsterStats.conditionImmunities.length - 2 && idx > 1\">,</template>\n              <template v-if=\"idx == monsterStats.conditionImmunities.length - 1 && monsterStats.conditionImmunities.length > 1\">et</template>\n              <em><router-link :to=\"{ path: conditionPath(condition) }\">{{displayCondition(condition)}}</router-link></em>\n            </span>\n          </div>\n          <div class=\"monster-senses\">\n            <strong>Sens</strong>\n            <template>{{ displaySenses() }}</template>\n          </div>\n          <div class=\"monster-languages\">\n            <strong>Langues</strong>\n            <template>{{ languages }}</template>\n          </div>\n          <div class=\"monster-challenge\">\n            <strong>Dangerosité</strong>\n            <template>{{ displayChallenge() }}</template>\n          </div>\n          <div class=\"monster-environments\" v-if=\"monsterStats.environments\">\n            <strong>Environnements :</strong>\n            <span v-html=\"displayList(monsterStats.environments)\"></span>\n          </div>\n          <div class=\"monster-dungeon-types\" v-if=\"monsterStats.dungeonTypes\">\n            <strong>Types de donjons :</strong>\n            <span v-html=\"displayList(monsterStats.dungeonTypes)\"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <Content v-if=\"!monster.custom\" :pageKey=\"monster.key\" class=\"mt-4\" />\n    <div v-else v-html=\"md.render(monster.content)\" class=\"mt-4\"></div>\n\n    <p v-if=\"$page.frontmatter.source\" class=\"source\">Source : <em>{{ monsterStats.source }}</em><template v-if=\"monsterStats.source_page\">, page {{ monsterStats.source_page }}</template></p>\n    <p v-if=\"monster.author\" class=\"source\">Auteur : <em>{{ monster.author }}</em></p>\n\n  </main>\n</template>\n\n<script>\nimport {\n  displayBonus,\n  getModifier,\n  displayAbilityScore,\n  getProficiencyBonus,\n  displayChallenge,\n  displayMonsterTypeSizeAlignment\n} from '@theme/util/monsterHelpers'\n\nimport {stats} from '../../data/stats.js'\nimport {armorTypes} from '../../data/armorTypes.js'\nimport MarkdownIt from 'markdown-it'\n\nexport default {\n\n  props: ['monster', 'isList', 'hideTitle'],\n\n  data () {\n    return {\n      md: new MarkdownIt()\n    }\n  },\n\n  computed: {\n    monsterStats () {\n      return this.monster.frontmatter\n    },\n    proficiencyBonus () {\n      return this.getProficiencyBonus()\n    },\n    passivePerception () {\n      let result = 10 + getModifier(this.monsterStats.abilityScores.sag)\n      if (this.monsterStats.skills) {\n        this.monsterStats.skills.forEach((skill, idx) => {\n          if (skill.name == 'perception') {\n            if (skill.isExpert) {\n              result += this.proficiencyBonus * 2\n            } else {\n              result += this.proficiencyBonus\n            }\n          }\n        })\n      }\n      return result\n    },\n\n    hp () {\n      if (this.monsterStats.customHP) {\n        return this.monsterStats.customHP\n      } else if (this.monsterStats.hitDiceCount) {\n        let hitDieSize = 8 // Dé de vie moyen par défaut\n        if (this.monsterStats.hitDieSize) {\n          hitDieSize = this.monsterStats.hitDieSize\n        } else if (this.monsterStats.size) {\n          hitDieSize = stats.sizes[this.monsterStats.size].hitDie\n        }\n        let hitPointsBonus = 0\n        if (this.monsterStats.hitDiceCount > 1) {\n          hitPointsBonus = Math.floor(this.monsterStats.hitDiceCount / 2)\n        }\n        let averageHP = this.monsterStats.hitDiceCount * (hitDieSize / 2) + this.monsterStats.hitDiceCount * getModifier(this.monsterStats.abilityScores.con) + hitPointsBonus\n        let conMod = \"\"\n        if (getModifier(this.monsterStats.abilityScores.con) != 0) {\n          conMod = this.monsterStats.hitDiceCount * getModifier(this.monsterStats.abilityScores.con)\n          conMod = displayBonus(conMod)\n        }\n        return averageHP + ' (' + this.monsterStats.hitDiceCount + \"d\" + hitDieSize + conMod + ')'\n      }\n      return \"\"\n    },\n\n    vp () {\n      return Number(this.monsterStats.abilityScores.con) + 4 + Math.floor(this.monsterStats.challenge)\n    },\n\n    languages () {\n      let result = this.monsterStats.languages.join(', ')\n      if (this.monsterStats.customLanguage) {\n        if (result != '') {\n          result += ', '\n        }\n        result += this.monsterStats.customLanguage\n      }\n      if (this.monsterStats.telepathy) {\n        if (result != '') {\n          result += ', '\n        }\n        result += 'télépathie ' + this.monsterStats.telepathy + ' m'\n      }\n      if (result == '') {\n        return '—'\n      }\n      return result\n    },\n  },\n\n  methods: {\n    displayList (list) { return list.join(', ') },\n    displayAbilityScore (value) { return displayAbilityScore(value) },\n    getModifier (value) { return getModifier(value) },\n    getProficiencyBonus () {\n    if (this.monsterStats.proficiencyBonus) {\n        return parseInt(this.monsterStats.proficiencyBonus)\n      }\n      return getProficiencyBonus(this.monsterStats.challenge)\n    },\n\n    displayMonsterTypeSizeAlignment () {\n      return displayMonsterTypeSizeAlignment(this.monsterStats)\n    },\n\n    displaySavingThrowBonus (ability) {\n      let result = stats.abilities[ability].abbr\n      let bonus = displayBonus(getModifier(this.monsterStats.abilityScores[ability]) + this.proficiencyBonus)\n      result += ' ' + bonus\n      return result\n    },\n\n    displaySkillBonus (skill) {\n      if (skill.name == 'custom') {\n        return skill.value\n      }\n      let result = stats.skills[skill.name].label\n      if (skill.invalid) {\n        result += ' ' + displayBonus(skill.value)\n        return result\n      }\n      let bonus = getModifier(this.monsterStats.abilityScores[stats.skills[skill.name].ability]) + this.proficiencyBonus\n      if (skill.isExpert) {\n        bonus += this.proficiencyBonus // Bonus de maître doublé pour les experts\n      }\n      bonus  = displayBonus(bonus)\n      result += ' ' + bonus\n      return result\n    },\n\n    displayChallenge () {\n      return displayChallenge(this.monsterStats.challenge, true)\n    },\n\n    displayMovement () {\n      if (this.monsterStats.customMovement) {\n        return this.monsterStats.customMovement\n      }\n      let result = ''\n      if (this.monsterStats.movement.walk) {\n        result += this.monsterStats.movement.walk + ' m'\n      } else {\n        result += '0 m'\n      }\n      if (this.monsterStats.movement.climb) {\n        if (result != '') {\n          result += ', '\n        }\n        result += 'escalade ' + this.monsterStats.movement.climb + ' m'\n      }\n      if (this.monsterStats.movement.burrow) {\n        if (result != '') {\n          result += ', '\n        }\n        result += 'fouissement ' + this.monsterStats.movement.burrow + ' m'\n      }\n      if (this.monsterStats.movement.swim) {\n        if (result != '') {\n          result += ', '\n        }\n        result += 'nage ' + this.monsterStats.movement.swim + ' m'\n      }\n      if (this.monsterStats.movement.fly) {\n        if (result != '') {\n          result += ', '\n        }\n        result += 'vol ' + this.monsterStats.movement.fly + ' m'\n        if (this.monsterStats.movement.hover) {\n          result += ' (vol stationnaire)'\n        }\n      }\n      return result\n    },\n\n    displayAC () {\n      let ac = 10\n      let hasMageArmor = false\n      let mageArmorAc = 13\n      let mageArmor = ''\n      let armor = ''\n      // Le monstre n'a pas d'armure.\n      // CA = 10 + Dex\n      if (!this.monsterStats.ac.armorType) {\n        ac = 10 + getModifier(this.monsterStats.abilityScores.dex)\n      } else {\n        // Le type d'armure n'est pas formalisé. On prend la valeur brute\n        if (this.monsterStats.ac.armorType == 'custom') {\n          return this.monsterStats.ac.value\n        }\n\n        // Le monstre a une armure naturelle.\n        // CA =  10 + Armure naturelle + Dex\n        if (this.monsterStats.ac.armorType == 'armure naturelle') {\n          armor = this.monsterStats.ac.armorType\n          if (parseInt(this.monsterStats.ac.value)) {\n            ac = ac + parseInt(this.monsterStats.ac.value) + getModifier(this.monsterStats.abilityScores.dex)\n          } else {\n            ac = ac + getModifier(this.monsterStats.abilityScores.dex)\n          }\n        } else if (this.monsterStats.ac.armorType == 'armure du mage') {\n          hasMageArmor = true\n          ac = ac + getModifier(this.monsterStats.abilityScores.dex)\n          mageArmorAc = mageArmorAc + getModifier(this.monsterStats.abilityScores.dex)\n          armor = mageArmorAc + ' avec armure du mage'\n        } else {\n          // Le monstre a un type d'armure défini.\n          // On calcule sa CA selon le type\n          let armorType = armorTypes[this.monsterStats.ac.armorType]\n\n          // Le type d'armure n'existe pas. On l'ignore.\n          // CA = 10 + Dex\n          if (!armorType) {\n            ac = ac + getModifier(this.monsterStats.abilityScores.dex)\n          } else {\n            // L'armure n'impose pas de limite de Dex\n            armor = this.monsterStats.ac.armorType\n            if (armorType.maxDex === false) {\n              ac = armorType.value + getModifier(this.monsterStats.abilityScores.dex)\n            } else {\n              // La limite de Dex de l'armure est inférieure à la Dex du monstre\n              if (armorType.maxDex === 0) {\n                ac = armorType.value\n              } else if ((armorType.maxDex !== 0) && (armorType.maxDex <= getModifier(this.monsterStats.abilityScores.dex))) {\n                ac = armorType.value + armorType.maxDex\n              } else {\n                ac = armorType.value + getModifier(this.monsterStats.abilityScores.dex)\n              }\n            }\n          }\n        }\n      }\n\n\n      // Le monstre a un bouclier. Sa CA augmente de 2.\n      if (this.monsterStats.ac.hasShield) {\n        ac = ac + 2\n        mageArmorAc = mageArmorAc + 2\n        if (armor != '') {\n          armor += ', '\n        }\n        armor += 'bouclier'\n\n        if (hasMageArmor) {\n          armor = mageArmorAc + ' avec armure du mage, bouclier'\n        }\n      }\n\n      if (armor != '') {\n        ac += ' (' + armor + ')'\n      }\n\n      return ac\n    },\n\n    displaySenses () {\n      let result = ''\n      if (this.monsterStats.senses) {\n        if (this.monsterStats.senses.tremorsense) {\n          result += 'perception des vibrations ' + this.monsterStats.senses.tremorsense + ' m'\n        }\n        if (this.monsterStats.senses.blindsight || this.monsterStats.senses.customBlindSight) {\n          if (result != '') {\n            result += ', '\n          }\n          if (this.monsterStats.senses.customBlindSight) {\n            result += 'vision aveugle ' + this.monsterStats.senses.customBlindSight\n          } else {\n            result += 'vision aveugle ' + this.monsterStats.senses.blindsight + ' m'\n          }\n        }\n        if (this.monsterStats.senses.darkvision || this.monsterStats.senses.customDarkvision) {\n          if (result != '') {\n            result += ', '\n          }\n          if (this.monsterStats.senses.customDarkvision) {\n            result += 'vision dans le noir ' + this.monsterStats.senses.customDarkvision\n          } else {\n            result += 'vision dans le noir ' + this.monsterStats.senses.darkvision + ' m'\n          }\n        }\n        if (this.monsterStats.senses.truesight || this.monsterStats.senses.customTrueSight) {\n          if (result != '') {\n            result += ', '\n          }\n          if (this.monsterStats.senses.customTrueSight) {\n            result += 'vision parfaite ' + this.monsterStats.senses.customTrueSight\n          } else {\n            result += 'vision parfaite ' + this.monsterStats.senses.truesight + ' m'\n          }\n        }\n        if (result != '') {\n          result += ', '\n        }\n      }\n      if (this.monsterStats.senses && this.monsterStats.senses.customPassivePerception) {\n        result += 'Perception passive ' + this.monsterStats.senses.customPassivePerception\n      } else {\n        result += 'Perception passive ' + this.passivePerception\n      }\n      return result\n    },\n\n    conditionPath (condition) {\n      return '/gerer-la-sante-du-personnage/#' + condition\n    },\n\n    displayCondition (condition) {\n      return stats.conditions[condition].label\n    },\n\n    displayConditionImmunities () {\n      let result = ''\n      this.monsterStats.conditionImmunities.forEach((condition, idx) => {\n        if (result != '') {\n          if (idx == this.monsterStats.conditionImmunities.length - 1) {\n            result += ' et '\n          } else {\n            result += ', '\n          }\n        }\n        result += '<em><router-link :to=\"{ path: \\'/gerer-la-sante-du-personnage/#' + condition + '\\' }\">' + stats.conditions[condition].label + '</router-link></em>'\n      })\n      return result\n    },\n\n    displayDamageTypes (damageTypes) {\n      let result = ''\n      damageTypes.forEach((damageType, idx) => {\n        if (result != '') {\n          if (idx == damageTypes.length - 1) {\n            result += ' et '\n          } else {\n            result += ', '\n          }\n        }\n        result += stats.damageTypes[damageType].label\n      })\n      return result\n    }\n  },\n\n  mounted () {\n    //console.log(this.$page)\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '../styles/colors';\n\n.monster-ability-scores {\n  margin: 12px 0;\n\n  .ability-label, .ability-score {\n    padding: 0 8px;\n  }\n\n  .ability-label {\n    border-bottom: 1px solid $color-dragon;\n  }\n\n}\n</style>\n"],"sourceRoot":"docs/.vuepress/theme/components"}]}