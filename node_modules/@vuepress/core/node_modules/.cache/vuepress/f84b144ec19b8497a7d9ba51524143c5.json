{"remainingRequest":"/home/olivier/Documents/douaratil-drs/node_modules/babel-loader/lib/index.js??ref--3-1!/home/olivier/Documents/douaratil-drs/docs/.vuepress/store/modules/myMonsters.js","dependencies":[{"path":"/home/olivier/Documents/douaratil-drs/docs/.vuepress/store/modules/myMonsters.js","mtime":1640161622024},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/cache-loader/dist/cjs.js","mtime":1640785878621},{"path":"/home/olivier/Documents/douaratil-drs/node_modules/babel-loader/lib/index.js","mtime":1640785878529}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7CmltcG9ydCB7IHNvcnRCeVN0cmluZyB9IGZyb20gJ0B0aGVtZS91dGlsL2ZpbHRlckhlbHBlcnMnOwppbXBvcnQgeyBnZXRSZXNvdXJjZUluZGV4SW5MaWJyYXJ5IH0gZnJvbSAnQHRoZW1lL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgbW9uc3RlcnM6IFtdLAogICAgbm90UHJpbnRlZE1vbnN0ZXJzOiBbXQogIH0sCiAgZ2V0dGVyczogewogICAgbW9uc3RlcnM6IGZ1bmN0aW9uIG1vbnN0ZXJzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5tb25zdGVyczsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIHJlc2V0OiBmdW5jdGlvbiByZXNldChfcmVmKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgY29tbWl0KCdyZXNldE1vbnN0ZXJzJyk7CiAgICB9LAogICAgdXBkYXRlTW9uc3RlcnM6IGZ1bmN0aW9uIHVwZGF0ZU1vbnN0ZXJzKF9yZWYyLCBwYXlsb2FkKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgIGNvbW1pdCgnc2V0TW9uc3RlcnMnLCBwYXlsb2FkKTsKICAgIH0sCiAgICBhZGRNb25zdGVyOiBmdW5jdGlvbiBhZGRNb25zdGVyKF9yZWYzLCBwYXlsb2FkKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgIGNvbW1pdCgnYWRkTW9uc3RlcicsIHBheWxvYWQpOwogICAgfSwKICAgIHJlbW92ZU1vbnN0ZXI6IGZ1bmN0aW9uIHJlbW92ZU1vbnN0ZXIoX3JlZjQsIHBheWxvYWQpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgY29tbWl0KCdyZW1vdmVNb25zdGVyJywgcGF5bG9hZCk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGluaXRpYWxpc2VTdG9yZTogZnVuY3Rpb24gaW5pdGlhbGlzZVN0b3JlKHN0YXRlKSB7CiAgICAgIC8vIFLDqWN1cMOpcmF0aW9uIGRlcyBkb25uw6llcyB1dGlsaXNhdGV1cnMgZGVwdWlzIGxlIG5hdmlnYXRldXIKICAgICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdteU1vbnN0ZXJzJykgJiYgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ215TW9uc3RlcnMnKSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgdmFyIGxvY2FsU3RvcmFnZURhdGEgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdteU1vbnN0ZXJzJykpOwoKICAgICAgICBpZiAobG9jYWxTdG9yYWdlRGF0YS5tb25zdGVycykgewogICAgICAgICAgc3RhdGUubW9uc3RlcnMgPSBsb2NhbFN0b3JhZ2VEYXRhLm1vbnN0ZXJzOwogICAgICAgIH0KCiAgICAgICAgaWYgKGxvY2FsU3RvcmFnZURhdGEubm90UHJpbnRlZE1vbnN0ZXJzKSB7CiAgICAgICAgICBzdGF0ZS5ub3RQcmludGVkTW9uc3RlcnMgPSBsb2NhbFN0b3JhZ2VEYXRhLm5vdFByaW50ZWRNb25zdGVyczsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBzZXRNb25zdGVyczogZnVuY3Rpb24gc2V0TW9uc3RlcnMoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUubW9uc3RlcnMgPSBwYXlsb2FkOwogICAgfSwKICAgIHJlc2V0TW9uc3RlcnM6IGZ1bmN0aW9uIHJlc2V0TW9uc3RlcnMoc3RhdGUpIHsKICAgICAgc3RhdGUubW9uc3RlcnMgPSBbXTsKICAgIH0sCiAgICBhZGRNb25zdGVyOiBmdW5jdGlvbiBhZGRNb25zdGVyKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLm1vbnN0ZXJzLnB1c2gocGF5bG9hZCk7CiAgICAgIHN0YXRlLm1vbnN0ZXJzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICByZXR1cm4gc29ydEJ5U3RyaW5nKGEudGl0bGUsIGIudGl0bGUpOwogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGVNb25zdGVyOiBmdW5jdGlvbiB1cGRhdGVNb25zdGVyKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHZhciBtb25zdGVySW5kZXggPSBnZXRSZXNvdXJjZUluZGV4SW5MaWJyYXJ5KHBheWxvYWQsIHN0YXRlLm1vbnN0ZXJzKTsKCiAgICAgIGlmIChtb25zdGVySW5kZXggPj0gMCkgewogICAgICAgIHN0YXRlLm1vbnN0ZXJzW21vbnN0ZXJJbmRleF0gPSBwYXlsb2FkOwogICAgICB9CiAgICB9LAogICAgcmVtb3ZlTW9uc3RlcjogZnVuY3Rpb24gcmVtb3ZlTW9uc3RlcihzdGF0ZSwgcGF5bG9hZCkgewogICAgICB2YXIgbW9uc3RlckluZGV4ID0gZ2V0UmVzb3VyY2VJbmRleEluTGlicmFyeShwYXlsb2FkLCBzdGF0ZS5tb25zdGVycyk7CgogICAgICBpZiAobW9uc3RlckluZGV4ID49IDApIHsKICAgICAgICBzdGF0ZS5tb25zdGVycy5zcGxpY2UobW9uc3RlckluZGV4LCAxKTsKICAgICAgfQogICAgfSwKICAgIHNldE5vdFByaW50ZWRNb25zdGVyczogZnVuY3Rpb24gc2V0Tm90UHJpbnRlZE1vbnN0ZXJzKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLm5vdFByaW50ZWRNb25zdGVycyA9IHBheWxvYWQ7CiAgICB9LAogICAgYWRkTm90UHJpbnRlZE1vbnN0ZXI6IGZ1bmN0aW9uIGFkZE5vdFByaW50ZWRNb25zdGVyKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHZhciBtb25zdGVySW5kZXggPSBnZXRSZXNvdXJjZUluZGV4SW5MaWJyYXJ5KHBheWxvYWQsIHN0YXRlLm5vdFByaW50ZWRNb25zdGVycyk7CgogICAgICBpZiAoIW1vbnN0ZXJJbmRleCA+PSAwKSB7CiAgICAgICAgc3RhdGUubm90UHJpbnRlZE1vbnN0ZXJzLnB1c2gocGF5bG9hZCk7CiAgICAgIH0KICAgIH0sCiAgICByZW1vdmVOb3RQcmludGVkTW9uc3RlcjogZnVuY3Rpb24gcmVtb3ZlTm90UHJpbnRlZE1vbnN0ZXIoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgdmFyIG1vbnN0ZXJJbmRleCA9IGdldFJlc291cmNlSW5kZXhJbkxpYnJhcnkocGF5bG9hZCwgc3RhdGUubm90UHJpbnRlZE1vbnN0ZXJzKTsKCiAgICAgIGlmIChtb25zdGVySW5kZXggPj0gMCkgewogICAgICAgIHN0YXRlLm5vdFByaW50ZWRNb25zdGVycy5zcGxpY2UobW9uc3RlckluZGV4LCAxKTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/olivier/Documents/douaratil-drs/docs/.vuepress/store/modules/myMonsters.js"],"names":["sortByString","getResourceIndexInLibrary","namespaced","state","monsters","notPrintedMonsters","getters","actions","reset","commit","updateMonsters","payload","addMonster","removeMonster","mutations","initialiseStore","localStorage","getItem","undefined","localStorageData","JSON","parse","setMonsters","resetMonsters","push","sort","a","b","title","updateMonster","monsterIndex","splice","setNotPrintedMonsters","addNotPrintedMonster","removeNotPrintedMonster"],"mappings":"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","sourcesContent":["import {sortByString} from '@theme/util/filterHelpers'\nimport { getResourceIndexInLibrary } from '@theme/util'\n\nexport default {\n  namespaced: true,\n\n  state: {\n    monsters: [],\n    notPrintedMonsters: []\n  },\n\n  getters: {\n    monsters: state => state.monsters,\n  },\n\n  actions: {\n    reset: ({ commit }) => {\n      commit('resetMonsters')\n    },\n    updateMonsters: ({ commit }, payload) => {\n      commit('setMonsters', payload)\n    },\n    addMonster: ({ commit }, payload) => {\n      commit('addMonster', payload)\n    },\n    removeMonster: ({ commit }, payload) => {\n      commit('removeMonster', payload)\n    },\n  },\n\n  mutations: {\n    initialiseStore (state) {\n\t\t\t// Récupération des données utilisateurs depuis le navigateur\n\t\t\tif(localStorage.getItem('myMonsters') && localStorage.getItem('myMonsters') !== undefined) {\n        let localStorageData = JSON.parse(localStorage.getItem('myMonsters'))\n        if (localStorageData.monsters) {\n          state.monsters = localStorageData.monsters\n        }\n        if (localStorageData.notPrintedMonsters) {\n          state.notPrintedMonsters = localStorageData.notPrintedMonsters\n        }\n\t\t\t}\n\t\t},\n    setMonsters: (state, payload) => {\n      state.monsters = payload\n    },\n    resetMonsters: (state) => {\n      state.monsters = []\n    },\n    addMonster: (state, payload) => {\n      state.monsters.push(payload)\n      state.monsters.sort((a, b) => { return sortByString(a.title, b.title) })\n    },\n    updateMonster: (state, payload) => {\n      let monsterIndex = getResourceIndexInLibrary(payload, state.monsters)\n      if (monsterIndex >= 0) {\n        state.monsters[monsterIndex] = payload\n      }\n    },\n    removeMonster: (state, payload) => {\n      let monsterIndex = getResourceIndexInLibrary(payload, state.monsters)\n      if (monsterIndex >= 0) {\n        state.monsters.splice(monsterIndex, 1)\n      }\n    },\n    setNotPrintedMonsters: (state, payload) => {\n      state.notPrintedMonsters = payload\n    },\n    addNotPrintedMonster: (state, payload) => {\n      let monsterIndex = getResourceIndexInLibrary(payload, state.notPrintedMonsters)\n      if (!monsterIndex >= 0) {\n        state.notPrintedMonsters.push(payload)\n      }\n    },\n    removeNotPrintedMonster: (state, payload) => {\n      let monsterIndex = getResourceIndexInLibrary(payload, state.notPrintedMonsters)\n      if (monsterIndex >= 0) {\n        state.notPrintedMonsters.splice(monsterIndex, 1)\n      }\n    }\n  }\n\n}\n"]}]}